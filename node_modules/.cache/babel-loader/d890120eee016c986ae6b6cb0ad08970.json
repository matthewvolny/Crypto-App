{"ast":null,"code":"var _jsxFileName = \"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/CoinRow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { createChart } from \"lightweight-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CoinRow(props) {\n  _s();\n\n  const isMounted = useRef(false);\n  const {\n    name,\n    price,\n    percentChange,\n    data\n  } = props;\n  useEffect(() => {\n    if (isMounted.current) {\n      const chart = createChart(document.querySelector(\".chart\"), {\n        width: 400,\n        height: 300\n      });\n      const lineSeries = chart.addLineSeries();\n      lineSeries.setData(props.data);\n    } else {\n      isMounted.current = true;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.percentChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, props.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CoinRow, \"SkOohDVuXBk0DO6XXkvUZnCZ6So=\");\n\n_c = CoinRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinRow\");","map":{"version":3,"sources":["/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/CoinRow.js"],"names":["React","useEffect","useRef","createChart","CoinRow","props","isMounted","name","price","percentChange","data","current","chart","document","querySelector","width","height","lineSeries","addLineSeries","setData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,oBAA5B;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACrC,QAAMC,SAAS,GAAGJ,MAAM,CAAC,KAAD,CAAxB;AACA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,aAAf;AAA8BC,IAAAA;AAA9B,MAAuCL,KAA7C;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,SAAS,CAACK,OAAd,EAAuB;AACrB,YAAMC,KAAK,GAAGT,WAAW,CAACU,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAD,EAAmC;AAC1DC,QAAAA,KAAK,EAAE,GADmD;AAE1DC,QAAAA,MAAM,EAAE;AAFkD,OAAnC,CAAzB;AAIA,YAAMC,UAAU,GAAGL,KAAK,CAACM,aAAN,EAAnB;AACAD,MAAAA,UAAU,CAACE,OAAX,CAAmBd,KAAK,CAACK,IAAzB;AACD,KAPD,MAOO;AACLJ,MAAAA,SAAS,CAACK,OAAV,GAAoB,IAApB;AACD;AACF,GAXQ,CAAT;AAaA,sBACE;AAAA,4BACE;AAAA,gBAAMN,KAAK,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAMF,KAAK,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAMH,KAAK,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,KAAUJ,KAAK,CAACE,IAAhB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAxBuBH,O;;KAAAA,O","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { createChart } from \"lightweight-charts\";\n\nexport default function CoinRow(props) {\n  const isMounted = useRef(false);\n  const { name, price, percentChange, data } = props;\n  useEffect(() => {\n    if (isMounted.current) {\n      const chart = createChart(document.querySelector(\".chart\"), {\n        width: 400,\n        height: 300,\n      });\n      const lineSeries = chart.addLineSeries();\n      lineSeries.setData(props.data);\n    } else {\n      isMounted.current = true;\n    }\n  });\n\n  return (\n    <div key={props.name}>\n      <div>{props.name}</div>\n      <div>{props.price}</div>\n      <div>{props.percentChange}</div>\n      <div className=\"chart\"></div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}