{"ast":null,"code":"var _jsxFileName = \"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/ConditionalRenderList.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ConditionalRenderList(_ref) {\n  let {\n    value,\n    list,\n    setValue,\n    toggle,\n    setToggle\n  } = _ref;\n\n  //if user enters value in search bar\n  if (value) {\n    console.log(list); //checks input value against list of coins for matches\n\n    const filteredList = list.filter(item => {\n      return item.data.toString().toLowerCase().startsWith(value.toLowerCase());\n    });\n    console.log(\"filteredList\");\n    console.log(filteredList); //if spelling matches are found\n\n    if (filteredList.length) {\n      return toggle && filteredList.map(item => {\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setToggle(false);\n              setValue(item.data);\n            },\n            children: item.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this);\n      });\n    }\n  }\n\n  const dropdownItems = filteredList.map(item => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          setToggle(false);\n          setValue(item.data);\n        },\n        children: item.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: dropdownItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n}\n_c = ConditionalRenderList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConditionalRenderList\");","map":{"version":3,"sources":["/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/ConditionalRenderList.js"],"names":["React","ConditionalRenderList","value","list","setValue","toggle","setToggle","console","log","filteredList","filter","item","data","toString","toLowerCase","startsWith","length","map","dropdownItems"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,qBAAT,OAMZ;AAAA,MAN2C;AAC5CC,IAAAA,KAD4C;AAE5CC,IAAAA,IAF4C;AAG5CC,IAAAA,QAH4C;AAI5CC,IAAAA,MAJ4C;AAK5CC,IAAAA;AAL4C,GAM3C;;AACD;AACA,MAAIJ,KAAJ,EAAW;AACTK,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EADS,CAGT;;AACA,UAAMM,YAAY,GAAGN,IAAI,CAACO,MAAL,CAAaC,IAAD,IAAU;AACzC,aAAOA,IAAI,CAACC,IAAL,CAAUC,QAAV,GAAqBC,WAArB,GAAmCC,UAAnC,CAA8Cb,KAAK,CAACY,WAAN,EAA9C,CAAP;AACD,KAFoB,CAArB;AAIAP,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ,EATS,CAWT;;AACA,QAAIA,YAAY,CAACO,MAAjB,EAAyB;AACvB,aACEX,MAAM,IACNI,YAAY,CAACQ,GAAb,CAAkBN,IAAD,IAAU;AACzB;AAAA;AAAA,iCACE;AACE,YAAA,OAAO,EAAE,MAAM;AACbL,cAAAA,SAAS,CAAC,KAAD,CAAT;AACAF,cAAAA,QAAQ,CAACO,IAAI,CAACC,IAAN,CAAR;AACD,aAJH;AAAA,sBAMGD,IAAI,CAACC;AANR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAUD,OAXD,CAFF;AAeD;AACF;;AAED,QAAMM,aAAa,GAAGT,YAAY,CAACQ,GAAb,CAAkBN,IAAD,IAAU;AAC/C,wBACE;AAAA,6BACE;AACE,QAAA,OAAO,EAAE,MAAM;AACbL,UAAAA,SAAS,CAAC,KAAD,CAAT;AACAF,UAAAA,QAAQ,CAACO,IAAI,CAACC,IAAN,CAAR;AACD,SAJH;AAAA,kBAMGD,IAAI,CAACC;AANR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAYD,GAbqB,CAAtB;AAcA,sBAAO;AAAA,cAAMM;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;KAtDuBjB,qB","sourcesContent":["import React from \"react\";\n\nexport default function ConditionalRenderList({\n  value,\n  list,\n  setValue,\n  toggle,\n  setToggle,\n}) {\n  //if user enters value in search bar\n  if (value) {\n    console.log(list);\n\n    //checks input value against list of coins for matches\n    const filteredList = list.filter((item) => {\n      return item.data.toString().toLowerCase().startsWith(value.toLowerCase());\n    });\n\n    console.log(\"filteredList\");\n    console.log(filteredList);\n\n    //if spelling matches are found\n    if (filteredList.length) {\n      return (\n        toggle &&\n        filteredList.map((item) => {\n          <div>\n            <div\n              onClick={() => {\n                setToggle(false);\n                setValue(item.data);\n              }}\n            >\n              {item.data}\n            </div>\n          </div>;\n        })\n      );\n    }\n  }\n\n  const dropdownItems = filteredList.map((item) => {\n    return (\n      <div>\n        <div\n          onClick={() => {\n            setToggle(false);\n            setValue(item.data);\n          }}\n        >\n          {item.data}\n        </div>\n      </div>\n    );\n  });\n  return <div>{dropdownItems}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}