{"ast":null,"code":"var _jsxFileName = \"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/SearchList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Context from \"../context/context\";\nimport \"./searchList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchList(_ref) {\n  _s();\n\n  let {\n    value,\n    list\n  } = _ref;\n  // console.log(value, list);\n  const {\n    coinData,\n    setSelectedCoinData\n  } = useContext(Context); //const [filteredListLength, setFilteredListLength] = useState(0);\n  // const [allResultsVisibility, setAllResultsVisibility] = useState(false);\n\n  const Dropdown = () => {\n    //if user enters value in search bar\n    if (value) {\n      console.log(list); //checks input value against list of coins for matches\n\n      const filteredList = coinData.filter(item => {\n        return item.name.toString().toLowerCase().startsWith(value.toLowerCase());\n      });\n      console.log(\"filteredList\");\n      console.log(filteredList); //setFilteredListLength(filteredList.length - 4);\n\n      if (filteredList.length === 0) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"No results for '\", value, \"'\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"We couldn't find anything matching your search.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Try again with a different term.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this);\n      } else {\n        console.log(\"filtered list found\"); // if (allResultsVisibility) {\n        //   return filteredList.map((item, index) => {\n        //     return (\n        //       <div className=\"search-item\">\n        //         <NavLink\n        //           onClick={() => {\n        //             setSelectedCoinData(item);\n        //           }}\n        //           to={`/currencies/${item.name}`}\n        //           key={item.id}\n        //         >\n        //           <div>\n        //             <img className=\"icon\" alt=\"search-icon\" src={item.image} />\n        //           </div>\n        //           <div>{item.name}</div>\n        //           <div>{item.symbol.toUpperCase()}</div>\n        //           <div>#{item.rank}</div>\n        //         </NavLink>\n        //       </div>\n        //     );\n        //   });\n        // } else {\n\n        return filteredList.map((item, index) => {\n          if (index < 4) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-item\",\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                onClick: () => {\n                  setSelectedCoinData(item);\n                },\n                to: `/currencies/${item.name}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"icon\",\n                    alt: \"search-icon\",\n                    src: item.image\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: item.symbol.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"#\", item.rank]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 19\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this);\n          }\n        }); // }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dropdown, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchList, \"Q2v2Vlza2KpYuliJKETFx6slFTc=\");\n\n_c = SearchList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchList\");","map":{"version":3,"sources":["/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/SearchList.js"],"names":["React","useContext","useState","NavLink","Context","SearchList","value","list","coinData","setSelectedCoinData","Dropdown","console","log","filteredList","filter","item","name","toString","toLowerCase","startsWith","length","map","index","image","symbol","toUpperCase","rank","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAO,kBAAP;;AAEA,eAAe,SAASC,UAAT,OAAqC;AAAA;;AAAA,MAAjB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAiB;AAClD;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAoCR,UAAU,CAACG,OAAD,CAApD,CAFkD,CAGlD;AACA;;AAEA,QAAMM,QAAQ,GAAG,MAAM;AACrB;AACA,QAAIJ,KAAJ,EAAW;AACTK,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EADS,CAGT;;AACA,YAAMM,YAAY,GAAGL,QAAQ,CAACM,MAAT,CAAiBC,IAAD,IAAU;AAC7C,eAAOA,IAAI,CAACC,IAAL,CACJC,QADI,GAEJC,WAFI,GAGJC,UAHI,CAGOb,KAAK,CAACY,WAAN,EAHP,CAAP;AAID,OALoB,CAArB;AAMAP,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ,EAXS,CAYT;;AAEA,UAAIA,YAAY,CAACO,MAAb,KAAwB,CAA5B,EAA+B;AAC7B,4BACE;AAAA,kCACE;AAAA,2CAAsBd,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OARD,MAQO;AACLK,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EADK,CAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAOC,YAAY,CAACQ,GAAb,CAAiB,CAACN,IAAD,EAAOO,KAAP,KAAiB;AACvC,cAAIA,KAAK,GAAG,CAAZ,EAAe;AACb,gCACE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,qCACE,QAAC,OAAD;AACE,gBAAA,OAAO,EAAE,MAAM;AACbb,kBAAAA,mBAAmB,CAACM,IAAD,CAAnB;AACD,iBAHH;AAIE,gBAAA,EAAE,EAAG,eAAcA,IAAI,CAACC,IAAK,EAJ/B;AAAA,wCAOE;AAAA,yCACE;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAsB,oBAAA,GAAG,EAAC,aAA1B;AAAwC,oBAAA,GAAG,EAAED,IAAI,CAACQ;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAPF,eAUE;AAAA,4BAAMR,IAAI,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,wBAVF,eAWE;AAAA,4BAAMD,IAAI,CAACS,MAAL,CAAYC,WAAZ;AAAN;AAAA;AAAA;AAAA;AAAA,wBAXF,eAYE;AAAA,kCAAOV,IAAI,CAACW,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZF;AAAA,iBAKOX,IAAI,CAACY,EALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF;AAkBD;AACF,SArBM,CAAP,CAxBK,CA8CL;AACD;AACF;AACF,GAzED;;AA2EA,sBACE;AAAA,2BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAvFuBtB,U;;KAAAA,U","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Context from \"../context/context\";\nimport \"./searchList.css\";\n\nexport default function SearchList({ value, list }) {\n  // console.log(value, list);\n  const { coinData, setSelectedCoinData } = useContext(Context);\n  //const [filteredListLength, setFilteredListLength] = useState(0);\n  // const [allResultsVisibility, setAllResultsVisibility] = useState(false);\n\n  const Dropdown = () => {\n    //if user enters value in search bar\n    if (value) {\n      console.log(list);\n\n      //checks input value against list of coins for matches\n      const filteredList = coinData.filter((item) => {\n        return item.name\n          .toString()\n          .toLowerCase()\n          .startsWith(value.toLowerCase());\n      });\n      console.log(\"filteredList\");\n      console.log(filteredList);\n      //setFilteredListLength(filteredList.length - 4);\n\n      if (filteredList.length === 0) {\n        return (\n          <div>\n            <div>No results for '{value}'</div>\n            <div>We couldn't find anything matching your search.</div>\n            <div>Try again with a different term.</div>\n          </div>\n        );\n      } else {\n        console.log(\"filtered list found\");\n        // if (allResultsVisibility) {\n        //   return filteredList.map((item, index) => {\n        //     return (\n        //       <div className=\"search-item\">\n        //         <NavLink\n        //           onClick={() => {\n        //             setSelectedCoinData(item);\n        //           }}\n        //           to={`/currencies/${item.name}`}\n        //           key={item.id}\n        //         >\n        //           <div>\n        //             <img className=\"icon\" alt=\"search-icon\" src={item.image} />\n        //           </div>\n        //           <div>{item.name}</div>\n        //           <div>{item.symbol.toUpperCase()}</div>\n        //           <div>#{item.rank}</div>\n        //         </NavLink>\n        //       </div>\n        //     );\n        //   });\n        // } else {\n        return filteredList.map((item, index) => {\n          if (index < 4) {\n            return (\n              <div className=\"search-item\">\n                <NavLink\n                  onClick={() => {\n                    setSelectedCoinData(item);\n                  }}\n                  to={`/currencies/${item.name}`}\n                  key={item.id}\n                >\n                  <div>\n                    <img className=\"icon\" alt=\"search-icon\" src={item.image} />\n                  </div>\n                  <div>{item.name}</div>\n                  <div>{item.symbol.toUpperCase()}</div>\n                  <div>#{item.rank}</div>\n                </NavLink>\n              </div>\n            );\n          }\n        });\n        // }\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Dropdown />\n      {/* <div onClick={setAllResultsVisibility(true)}>See all results</div> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}