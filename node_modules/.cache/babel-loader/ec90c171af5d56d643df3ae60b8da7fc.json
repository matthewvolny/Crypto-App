{"ast":null,"code":"var _jsxFileName = \"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/CoinRow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { createChart } from \"lightweight-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CoinRow(props) {\n  _s();\n\n  const isMounted = useRef(false);\n  console.log(props);\n  const {\n    name,\n    price,\n    percentChange,\n    data\n  } = props.coin;\n  useEffect(() => {\n    if (isMounted.current) {\n      const chart = createChart(document.querySelector(\".chart\"), {\n        width: 400,\n        height: 300\n      });\n      const lineSeries = chart.addLineSeries();\n      lineSeries.applyOptions({\n        color: \"red\",\n        lineWidth: 5,\n        lineType: \"Simple\"\n      });\n      lineSeries.setData(data);\n    } else {\n      isMounted.current = true;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: percentChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CoinRow, \"SkOohDVuXBk0DO6XXkvUZnCZ6So=\");\n\n_c = CoinRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinRow\");","map":{"version":3,"sources":["/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/CoinRow.js"],"names":["React","useEffect","useRef","createChart","CoinRow","props","isMounted","console","log","name","price","percentChange","data","coin","current","chart","document","querySelector","width","height","lineSeries","addLineSeries","applyOptions","color","lineWidth","lineType","setData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,oBAA5B;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACrC,QAAMC,SAAS,GAAGJ,MAAM,CAAC,KAAD,CAAxB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,aAAf;AAA8BC,IAAAA;AAA9B,MAAuCP,KAAK,CAACQ,IAAnD;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,SAAS,CAACQ,OAAd,EAAuB;AACrB,YAAMC,KAAK,GAAGZ,WAAW,CAACa,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAD,EAAmC;AAC1DC,QAAAA,KAAK,EAAE,GADmD;AAE1DC,QAAAA,MAAM,EAAE;AAFkD,OAAnC,CAAzB;AAIA,YAAMC,UAAU,GAAGL,KAAK,CAACM,aAAN,EAAnB;AACAD,MAAAA,UAAU,CAACE,YAAX,CAAwB;AACtBC,QAAAA,KAAK,EAAE,KADe;AAEtBC,QAAAA,SAAS,EAAE,CAFW;AAGtBC,QAAAA,QAAQ,EAAE;AAHY,OAAxB;AAKAL,MAAAA,UAAU,CAACM,OAAX,CAAmBd,IAAnB;AACD,KAZD,MAYO;AACLN,MAAAA,SAAS,CAACQ,OAAV,GAAoB,IAApB;AACD;AACF,GAhBQ,CAAT;AAkBA,sBACE;AAAA,4BACE;AAAA,gBAAML;AAAN;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,KAAUF,IAAV;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA/BuBL,O;;KAAAA,O","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { createChart } from \"lightweight-charts\";\n\nexport default function CoinRow(props) {\n  const isMounted = useRef(false);\n  console.log(props);\n  const { name, price, percentChange, data } = props.coin;\n\n  useEffect(() => {\n    if (isMounted.current) {\n      const chart = createChart(document.querySelector(\".chart\"), {\n        width: 400,\n        height: 300,\n      });\n      const lineSeries = chart.addLineSeries();\n      lineSeries.applyOptions({\n        color: \"red\",\n        lineWidth: 5,\n        lineType: \"Simple\",\n      });\n      lineSeries.setData(data);\n    } else {\n      isMounted.current = true;\n    }\n  });\n\n  return (\n    <div key={name}>\n      <div>{name}</div>\n      <div>{price}</div>\n      <div>{percentChange}</div>\n      <div className=\"chart\"></div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}