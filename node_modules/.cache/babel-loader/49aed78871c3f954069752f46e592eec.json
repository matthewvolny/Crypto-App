{"ast":null,"code":"var _jsxFileName = \"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/ConditionalRenderList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ConditionalRenderList(_ref) {\n  _s();\n\n  let {\n    value,\n    list,\n    setValue,\n    toggle,\n    setToggle\n  } = _ref;\n  const [filteredCoinList, setFilteredCoinList] = useState(); //if user enters value in search bar\n\n  if (value) {\n    console.log(list); //checks input value against list of coins for matches\n\n    const filteredList = list.filter(item => {\n      return item.data.toString().toLowerCase().startsWith(value.toLowerCase());\n    });\n    console.log(\"filteredList\");\n    console.log(filteredList);\n    setFilteredCoinList(filteredList); //if spelling matches are found\n    //     if (filteredList.length) {\n    //       return (\n    //         toggle &&\n    //         filteredList.map((item) => {\n    //           <div>\n    //             <div\n    //               onClick={() => {\n    //                 setToggle(false);\n    //                 setValue(item.data);\n    //               }}\n    //             >\n    //               {item.data}\n    //             </div>\n    //           </div>;\n    //         })\n    //       );\n    //     }\n    //   }\n  }\n\n  const dropdownItems = filteredCoinList === null || filteredCoinList === void 0 ? void 0 : filteredCoinList.map(item => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          setToggle(false);\n          setValue(item.data);\n        },\n        children: item.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: dropdownItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ConditionalRenderList, \"AbQFnjEZhzatvrhO0TtAxcv2FAg=\");\n\n_c = ConditionalRenderList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConditionalRenderList\");","map":{"version":3,"sources":["/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/ConditionalRenderList.js"],"names":["React","useState","ConditionalRenderList","value","list","setValue","toggle","setToggle","filteredCoinList","setFilteredCoinList","console","log","filteredList","filter","item","data","toString","toLowerCase","startsWith","dropdownItems","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,qBAAT,OAMZ;AAAA;;AAAA,MAN2C;AAC5CC,IAAAA,KAD4C;AAE5CC,IAAAA,IAF4C;AAG5CC,IAAAA,QAH4C;AAI5CC,IAAAA,MAJ4C;AAK5CC,IAAAA;AAL4C,GAM3C;AACD,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,EAAxD,CADC,CAGD;;AACA,MAAIE,KAAJ,EAAW;AACTO,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ,EADS,CAGT;;AACA,UAAMQ,YAAY,GAAGR,IAAI,CAACS,MAAL,CAAaC,IAAD,IAAU;AACzC,aAAOA,IAAI,CAACC,IAAL,CAAUC,QAAV,GAAqBC,WAArB,GAAmCC,UAAnC,CAA8Cf,KAAK,CAACc,WAAN,EAA9C,CAAP;AACD,KAFoB,CAArB;AAIAP,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACAH,IAAAA,mBAAmB,CAACG,YAAD,CAAnB,CAVS,CAYT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AACD,QAAMO,aAAa,GAAGX,gBAAH,aAAGA,gBAAH,uBAAGA,gBAAgB,CAAEY,GAAlB,CAAuBN,IAAD,IAAU;AACpD,wBACE;AAAA,6BACE;AACE,QAAA,OAAO,EAAE,MAAM;AACbP,UAAAA,SAAS,CAAC,KAAD,CAAT;AACAF,UAAAA,QAAQ,CAACS,IAAI,CAACC,IAAN,CAAR;AACD,SAJH;AAAA,kBAMGD,IAAI,CAACC;AANR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAYD,GAbqB,CAAtB;AAeA,sBAAO;AAAA,cAAMI;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA1DuBjB,qB;;KAAAA,qB","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function ConditionalRenderList({\n  value,\n  list,\n  setValue,\n  toggle,\n  setToggle,\n}) {\n  const [filteredCoinList, setFilteredCoinList] = useState();\n\n  //if user enters value in search bar\n  if (value) {\n    console.log(list);\n\n    //checks input value against list of coins for matches\n    const filteredList = list.filter((item) => {\n      return item.data.toString().toLowerCase().startsWith(value.toLowerCase());\n    });\n\n    console.log(\"filteredList\");\n    console.log(filteredList);\n    setFilteredCoinList(filteredList);\n\n    //if spelling matches are found\n    //     if (filteredList.length) {\n    //       return (\n    //         toggle &&\n    //         filteredList.map((item) => {\n    //           <div>\n    //             <div\n    //               onClick={() => {\n    //                 setToggle(false);\n    //                 setValue(item.data);\n    //               }}\n    //             >\n    //               {item.data}\n    //             </div>\n    //           </div>;\n    //         })\n    //       );\n    //     }\n    //   }\n  }\n  const dropdownItems = filteredCoinList?.map((item) => {\n    return (\n      <div>\n        <div\n          onClick={() => {\n            setToggle(false);\n            setValue(item.data);\n          }}\n        >\n          {item.data}\n        </div>\n      </div>\n    );\n  });\n\n  return <div>{dropdownItems}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}