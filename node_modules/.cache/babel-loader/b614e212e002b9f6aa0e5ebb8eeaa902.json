{"ast":null,"code":"var _jsxFileName = \"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Context from \"./context/context\";\nimport Coinlist from \"./components/Coinlist\";\nimport Chart from \"./components/Chart\";\nimport Login from \"./components/LoginAndSignUp\";\nimport SearchBar from \"./components/SearchBar\";\nimport NewsFeed from \"./components/NewsFeed\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [coinData, setCoinData] = useState([]);\n  const [selectedCoinData, setSelectedCoinData] = useState(); // const [allCoinIds, setAllCoinIds] = useState();\n  // const [additionalCoinIdInfo, setAdditionalCoinIdInfo] = useState([]);\n  //(3)shortens sparkline data array and rounds to four places\n  //!check to make sure the \"first\" and \"last\" values are in the shortened array - need for accurate coloring\n\n  const roundSparklineData = data => {\n    let dataArray = data.price; //console.log(dataArray);\n\n    for (let i = dataArray.length - 1; i >= 0; i--) {\n      if (i % 8 !== 0) {\n        dataArray.splice(i, 1);\n      } else {\n        // console.log(dataArray[i]);\n        dataArray[i].toFixed(4); //!not rounding\n      }\n    } // console.log(dataArray);\n\n\n    return dataArray;\n  }; //(2)initial api call retrieves list data for a subset of coins\n\n\n  const fetchInitialCoinSet = () => {\n    axios.get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=true&price_change_percentage=24h%2C7d\").then(response => {\n      const data = response.data; // console.log(data);\n\n      const coinDataArray = [];\n      data.forEach(coin => {\n        coinDataArray.push({\n          id: coin.id,\n          rank: coin.market_cap_rank,\n          image: coin.image,\n          name: coin.name,\n          symbol: coin.symbol,\n          price: coin.current_price.toLocaleString(\"en-US\"),\n          percentChange24hr: coin.price_change_percentage_24h_in_currency.toFixed(2),\n          percentChange7d: coin.price_change_percentage_7d_in_currency.toFixed(2),\n          marketCap: coin.market_cap.toLocaleString(\"en-US\"),\n          //!not displayed initially\n          volume24hr: coin.total_volume.toLocaleString(\"en-US\"),\n          //!not displayed initially\n          sparkline: roundSparklineData(coin.sparkline_in_7d)\n        });\n      }); // console.log(coinDataArray);\n\n      setCoinData(coinDataArray);\n    });\n  }; //()asynchronously fetch larger coin set after rendering initial set\n  // const fetchLargerCoinSet = async () => {\n  //   await axios\n  //     .get(\n  //       \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=1&sparkline=true&price_change_percentage=24h%2C7d\"\n  //     )\n  //     .then((response) => {\n  //       const data = response.data;\n  //       // console.log(data);\n  //       const coinDataArray = [];\n  //       data.forEach((coin) => {\n  //         coinDataArray.push({\n  //           rank: coin.market_cap_rank,\n  //           image: coin.image,\n  //           name: coin.name,\n  //           symbol: coin.symbol,\n  //           price: coin.current_price.toLocaleString(\"en-US\"),\n  //           percentChange24hr:\n  //             coin.price_change_percentage_24h_in_currency.toFixed(2),\n  //           percentChange7d:\n  //             coin.price_change_percentage_7d_in_currency.toFixed(2),\n  //           marketCap: coin.market_cap.toLocaleString(\"en-US\"),\n  //           volume24hr: coin.total_volume.toLocaleString(\"en-US\"),\n  //           sparkline: roundSparklineData(coin.sparkline_in_7d),\n  //         });\n  //       });\n  //       console.log(coinDataArray);\n  //       setCoinData(coinDataArray);\n  //     });\n  // };\n  //\n  //(4)asynchronously fetch larger coin set after rendering initial set\n  // const fetchAllCoins = async (initialPage, stopIndex) => {\n  //   const coinDataArray = [...additionalCoinIdInfo];\n  //   for (let i = initialPage; i <= stopIndex; i++) {\n  //     await axios\n  //       .get(\n  //         `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=${i}&sparkline=false`\n  //       )\n  //       .then((response) => {\n  //         const data = response.data;\n  //         data.forEach((coin) => {\n  //           if (coin.rank !== null) {\n  //             coinDataArray.push({\n  //               rank: coin.market_cap_rank,\n  //               image: coin.image,\n  //               name: coin.name,\n  //               symbol: coin.symbol,\n  //             });\n  //           }\n  //         });\n  //       });\n  //   }\n  //   setAdditionalCoinIdInfo(coinDataArray);\n  //   console.log(additionalCoinIdInfo);\n  // };\n\n\n  const fetchAllRankedCoins = (initialPage, stopIndex) => {\n    console.log(\"in all ranked coins\");\n    const coinDataArray = [...coinData];\n\n    for (let i = initialPage; i <= stopIndex; i++) {\n      axios.get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=${i}&sparkline=true&price_change_percentage=24h%2C7d`).then(response => {\n        const data = response.data; // console.log(data);\n\n        data.forEach(coin => {\n          var _coin$current_price, _coin$price_change_pe, _coin$price_change_pe2, _coin$market_cap, _coin$total_volume;\n\n          //!may want to add sorting on coin rank\n          // if (coin.rank) {\n          coinDataArray.push({\n            id: coin.id,\n            rank: coin.market_cap_rank,\n            image: coin.image,\n            name: coin.name,\n            symbol: coin.symbol,\n            price: (_coin$current_price = coin.current_price) === null || _coin$current_price === void 0 ? void 0 : _coin$current_price.toLocaleString(\"en-US\"),\n            percentChange24hr: (_coin$price_change_pe = coin.price_change_percentage_24h_in_currency) === null || _coin$price_change_pe === void 0 ? void 0 : _coin$price_change_pe.toFixed(2),\n            percentChange7d: (_coin$price_change_pe2 = coin.price_change_percentage_7d_in_currency) === null || _coin$price_change_pe2 === void 0 ? void 0 : _coin$price_change_pe2.toFixed(2),\n            marketCap: (_coin$market_cap = coin.market_cap) === null || _coin$market_cap === void 0 ? void 0 : _coin$market_cap.toLocaleString(\"en-US\"),\n            volume24hr: (_coin$total_volume = coin.total_volume) === null || _coin$total_volume === void 0 ? void 0 : _coin$total_volume.toLocaleString(\"en-US\"),\n            sparkline: roundSparklineData(coin.sparkline_in_7d)\n          }); // }\n        }); // console.log(coinDataArray);\n\n        const sortedCoinDataArray = coinDataArray.sort((a, b) => {\n          return a.rank - b.rank;\n        });\n        console.log(\"sorted coin data\");\n        console.log(sortedCoinDataArray); //coin data sorted\n\n        setCoinData(sortedCoinDataArray); //!not sorted in state (probably missing an update)\n      });\n    } // console.log(`this is the final \"coinData\"`);\n    // console.log(coinDataArray);\n    // setCoinData(coinDataArray);\n\n  }; //()get ids for all coins listed and adds them to \"coinData\" (an array stored in state)\n  // const getIdsAfterPageLoad = /*async*/ () => {\n  //   /*await*/ axios\n  //     .get(\n  //       //list all coins (tens of thousands)\n  //       \"https://api.coingecko.com/api/v3/coins/list\"\n  //     )\n  //     .then((response) => {\n  //       const allCoinsIdArray = response.data;\n  //       // console.log(allCoinsIdArray);\n  //       // console.log(coinData);\n  //       //!updating state by setting \"equal\", not by creating a copy and pushing\n  //       const coinDataCopy = coinData;\n  //       for (let i = 0; i < coinDataCopy.length; i++) {\n  //         for (let j = 0; j < allCoinsIdArray.length; j++) {\n  //           if (coinDataCopy[i].name === allCoinsIdArray[j].name) {\n  //             coinDataCopy[i].id = allCoinsIdArray[j].id;\n  //           }\n  //         }\n  //       }\n  //       //store all ids as a searchable list (for search bar dropdown)\n  //       // console.log(\"allCoinsIdArray\");\n  //       // console.log(allCoinsIdArray);\n  //       setAllCoinIds(allCoinsIdArray);\n  //     });\n  // };\n  //(1) fetch initial coins to list\n\n\n  useEffect(() => {\n    fetchInitialCoinSet();\n    fetchAllRankedCoins(1, 15); //fetchLargerCoinSet(); //asynchronous\n  }, []);\n  useEffect(() => {// console.log(coinData);\n  }, [coinData]); //()get \"correct\" ids for all coins listed\n  // useEffect(() => {\n  //   // getIdsAfterPageLoad();\n  //   //\n  //   //fetch detailed info for all ranked coins\n  //   //fetchAllRankedCoins(1, 15);\n  //   console.log(coinData);\n  // }, [coinData]);\n  // useEffect(() => {\n  //   console.log(\"additionalCoinIdInfo\");\n  //   console.log(additionalCoinIdInfo);\n  // }, [additionalCoinIdInfo]);\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      selectedCoinData,\n      setSelectedCoinData,\n      coinData\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Matthew\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Trading Ideas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"middle-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: /*#__PURE__*/_jsxDEV(Routes, {\n              children: /*#__PURE__*/_jsxDEV(Route, {\n                path: \"currencies/:id\",\n                element: /*#__PURE__*/_jsxDEV(Chart, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 55\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"coinlist-container\",\n            children: /*#__PURE__*/_jsxDEV(Coinlist, {\n              coinData: coinData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-flex\",\n          children: [/*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NewsFeed, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"BPSnAdPtC7Y18q3Upay20K48cqY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/App.js"],"names":["React","useEffect","useState","BrowserRouter","Routes","Route","Context","Coinlist","Chart","Login","SearchBar","NewsFeed","axios","App","coinData","setCoinData","selectedCoinData","setSelectedCoinData","roundSparklineData","data","dataArray","price","i","length","splice","toFixed","fetchInitialCoinSet","get","then","response","coinDataArray","forEach","coin","push","id","rank","market_cap_rank","image","name","symbol","current_price","toLocaleString","percentChange24hr","price_change_percentage_24h_in_currency","percentChange7d","price_change_percentage_7d_in_currency","marketCap","market_cap","volume24hr","total_volume","sparkline","sparkline_in_7d","fetchAllRankedCoins","initialPage","stopIndex","console","log","sortedCoinDataArray","sort","a","b"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Context from \"./context/context\";\nimport Coinlist from \"./components/Coinlist\";\nimport Chart from \"./components/Chart\";\nimport Login from \"./components/LoginAndSignUp\";\nimport SearchBar from \"./components/SearchBar\";\nimport NewsFeed from \"./components/NewsFeed\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const [coinData, setCoinData] = useState([]);\n  const [selectedCoinData, setSelectedCoinData] = useState();\n  // const [allCoinIds, setAllCoinIds] = useState();\n  // const [additionalCoinIdInfo, setAdditionalCoinIdInfo] = useState([]);\n\n  //(3)shortens sparkline data array and rounds to four places\n  //!check to make sure the \"first\" and \"last\" values are in the shortened array - need for accurate coloring\n  const roundSparklineData = (data) => {\n    let dataArray = data.price;\n    //console.log(dataArray);\n    for (let i = dataArray.length - 1; i >= 0; i--) {\n      if (i % 8 !== 0) {\n        dataArray.splice(i, 1);\n      } else {\n        // console.log(dataArray[i]);\n        dataArray[i].toFixed(4); //!not rounding\n      }\n    }\n    // console.log(dataArray);\n    return dataArray;\n  };\n\n  //(2)initial api call retrieves list data for a subset of coins\n  const fetchInitialCoinSet = () => {\n    axios\n      .get(\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=true&price_change_percentage=24h%2C7d\"\n      )\n      .then((response) => {\n        const data = response.data;\n        // console.log(data);\n        const coinDataArray = [];\n        data.forEach((coin) => {\n          coinDataArray.push({\n            id: coin.id,\n            rank: coin.market_cap_rank,\n            image: coin.image,\n            name: coin.name,\n            symbol: coin.symbol,\n            price: coin.current_price.toLocaleString(\"en-US\"),\n            percentChange24hr:\n              coin.price_change_percentage_24h_in_currency.toFixed(2),\n            percentChange7d:\n              coin.price_change_percentage_7d_in_currency.toFixed(2),\n            marketCap: coin.market_cap.toLocaleString(\"en-US\"), //!not displayed initially\n            volume24hr: coin.total_volume.toLocaleString(\"en-US\"), //!not displayed initially\n            sparkline: roundSparklineData(coin.sparkline_in_7d),\n          });\n        });\n        // console.log(coinDataArray);\n        setCoinData(coinDataArray);\n      });\n  };\n\n  //()asynchronously fetch larger coin set after rendering initial set\n  // const fetchLargerCoinSet = async () => {\n  //   await axios\n  //     .get(\n  //       \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=1&sparkline=true&price_change_percentage=24h%2C7d\"\n  //     )\n  //     .then((response) => {\n  //       const data = response.data;\n  //       // console.log(data);\n  //       const coinDataArray = [];\n  //       data.forEach((coin) => {\n  //         coinDataArray.push({\n  //           rank: coin.market_cap_rank,\n  //           image: coin.image,\n  //           name: coin.name,\n  //           symbol: coin.symbol,\n  //           price: coin.current_price.toLocaleString(\"en-US\"),\n  //           percentChange24hr:\n  //             coin.price_change_percentage_24h_in_currency.toFixed(2),\n  //           percentChange7d:\n  //             coin.price_change_percentage_7d_in_currency.toFixed(2),\n  //           marketCap: coin.market_cap.toLocaleString(\"en-US\"),\n  //           volume24hr: coin.total_volume.toLocaleString(\"en-US\"),\n  //           sparkline: roundSparklineData(coin.sparkline_in_7d),\n  //         });\n  //       });\n  //       console.log(coinDataArray);\n  //       setCoinData(coinDataArray);\n  //     });\n  // };\n\n  //\n\n  //(4)asynchronously fetch larger coin set after rendering initial set\n  // const fetchAllCoins = async (initialPage, stopIndex) => {\n  //   const coinDataArray = [...additionalCoinIdInfo];\n  //   for (let i = initialPage; i <= stopIndex; i++) {\n  //     await axios\n  //       .get(\n  //         `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=${i}&sparkline=false`\n  //       )\n  //       .then((response) => {\n  //         const data = response.data;\n  //         data.forEach((coin) => {\n  //           if (coin.rank !== null) {\n  //             coinDataArray.push({\n  //               rank: coin.market_cap_rank,\n  //               image: coin.image,\n  //               name: coin.name,\n  //               symbol: coin.symbol,\n  //             });\n  //           }\n  //         });\n  //       });\n  //   }\n  //   setAdditionalCoinIdInfo(coinDataArray);\n  //   console.log(additionalCoinIdInfo);\n  // };\n\n  const fetchAllRankedCoins = (initialPage, stopIndex) => {\n    console.log(\"in all ranked coins\");\n    const coinDataArray = [...coinData];\n    for (let i = initialPage; i <= stopIndex; i++) {\n      axios\n        .get(\n          `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=${i}&sparkline=true&price_change_percentage=24h%2C7d`\n        )\n        .then((response) => {\n          const data = response.data;\n          // console.log(data);\n          data.forEach((coin) => {\n            //!may want to add sorting on coin rank\n            // if (coin.rank) {\n            coinDataArray.push({\n              id: coin.id,\n              rank: coin.market_cap_rank,\n              image: coin.image,\n              name: coin.name,\n              symbol: coin.symbol,\n              price: coin.current_price?.toLocaleString(\"en-US\"),\n              percentChange24hr:\n                coin.price_change_percentage_24h_in_currency?.toFixed(2),\n              percentChange7d:\n                coin.price_change_percentage_7d_in_currency?.toFixed(2),\n              marketCap: coin.market_cap?.toLocaleString(\"en-US\"),\n              volume24hr: coin.total_volume?.toLocaleString(\"en-US\"),\n              sparkline: roundSparklineData(coin.sparkline_in_7d),\n            });\n            // }\n          });\n          // console.log(coinDataArray);\n          const sortedCoinDataArray = coinDataArray.sort((a, b) => {\n            return a.rank - b.rank;\n          });\n          console.log(\"sorted coin data\");\n          console.log(sortedCoinDataArray); //coin data sorted\n          setCoinData(sortedCoinDataArray); //!not sorted in state (probably missing an update)\n        });\n    }\n    // console.log(`this is the final \"coinData\"`);\n    // console.log(coinDataArray);\n    // setCoinData(coinDataArray);\n  };\n\n  //()get ids for all coins listed and adds them to \"coinData\" (an array stored in state)\n  // const getIdsAfterPageLoad = /*async*/ () => {\n  //   /*await*/ axios\n  //     .get(\n  //       //list all coins (tens of thousands)\n  //       \"https://api.coingecko.com/api/v3/coins/list\"\n  //     )\n  //     .then((response) => {\n  //       const allCoinsIdArray = response.data;\n  //       // console.log(allCoinsIdArray);\n  //       // console.log(coinData);\n  //       //!updating state by setting \"equal\", not by creating a copy and pushing\n  //       const coinDataCopy = coinData;\n  //       for (let i = 0; i < coinDataCopy.length; i++) {\n  //         for (let j = 0; j < allCoinsIdArray.length; j++) {\n  //           if (coinDataCopy[i].name === allCoinsIdArray[j].name) {\n  //             coinDataCopy[i].id = allCoinsIdArray[j].id;\n  //           }\n  //         }\n  //       }\n  //       //store all ids as a searchable list (for search bar dropdown)\n  //       // console.log(\"allCoinsIdArray\");\n  //       // console.log(allCoinsIdArray);\n  //       setAllCoinIds(allCoinsIdArray);\n  //     });\n  // };\n\n  //(1) fetch initial coins to list\n  useEffect(() => {\n    fetchInitialCoinSet();\n    fetchAllRankedCoins(1, 15);\n    //fetchLargerCoinSet(); //asynchronous\n  }, []);\n\n  useEffect(() => {\n    // console.log(coinData);\n  }, [coinData]);\n\n  //()get \"correct\" ids for all coins listed\n  // useEffect(() => {\n  //   // getIdsAfterPageLoad();\n  //   //\n  //   //fetch detailed info for all ranked coins\n  //   //fetchAllRankedCoins(1, 15);\n  //   console.log(coinData);\n  // }, [coinData]);\n\n  // useEffect(() => {\n  //   console.log(\"additionalCoinIdInfo\");\n  //   console.log(additionalCoinIdInfo);\n  // }, [additionalCoinIdInfo]);\n\n  return (\n    <Context.Provider\n      value={{\n        selectedCoinData,\n        setSelectedCoinData,\n        coinData,\n      }}\n    >\n      <div className=\"container\">\n        <div className=\"sidebar-flex\">\n          <div>Logo</div>\n          <div>Matthew</div>\n          <div>Home</div>\n          <div>Wallet</div>\n          <div>Trading Ideas</div>\n          <div>Settings</div>\n          <div>Log Out</div>\n        </div>\n        <BrowserRouter>\n          <div className=\"middle-flex\">\n            <div className=\"chart-container\">\n              <Routes>\n                {/* <Route path=\"/\" element={<SearchBar />} /> */}\n                <Route path=\"currencies/:id\" element={<Chart />} />\n                {/* <Route path=\"/\" element={<Coinlist coinData={coinData} />} /> */}\n              </Routes>\n            </div>\n            <div className=\"coinlist-container\">\n              <Coinlist coinData={coinData} />\n            </div>\n          </div>\n          <div className=\"right-flex\">\n            <Login />\n            <SearchBar />\n            <NewsFeed />\n          </div>\n        </BrowserRouter>\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}