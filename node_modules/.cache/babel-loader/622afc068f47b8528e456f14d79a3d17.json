{"ast":null,"code":"var _jsxFileName = \"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/ConditionalRenderList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ConditionalRenderList(_ref) {\n  _s();\n\n  let {\n    value,\n    list,\n    setValue,\n    toggle,\n    setToggle\n  } = _ref;\n  const [filteredCoinList, setFilteredCoinList] = useState();\n\n  const Dropdown = () => {\n    //if user enters value in search bar\n    if (value) {\n      console.log(list); //checks input value against list of coins for matches\n\n      const filteredList = list.filter(item => {\n        return item.data.toString().toLowerCase().startsWith(value.toLowerCase());\n      });\n      console.log(\"filteredList\");\n      console.log(filteredList); //   setFilteredCoinList(filteredList);\n\n      if (filteredList.length === 0) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"No results for '\", value, \"'\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"We couldn't find anything matching your search.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this);\n      } else {\n        console.log(\"filtered list and toggle true\");\n        filteredList === null || filteredList === void 0 ? void 0 : filteredList.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                setToggle(false); //   setValue(item.data);\n              },\n              children: item.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this);\n        });\n      }\n\n      setToggle(false);\n    }\n  }; //if user enters value in search bar\n  //   if (value) {\n  //     console.log(list);\n  //     //checks input value against list of coins for matches\n  //     const filteredList = list.filter((item) => {\n  //       return item.data.toString().toLowerCase().startsWith(value.toLowerCase());\n  //     });\n  //     console.log(\"filteredList\");\n  //     console.log(filteredList);\n  //     setFilteredCoinList(filteredList);\n  //   }\n  //\n  //\n  //\n  //if spelling matches are found\n  //     if (filteredList.length) {\n  //       return (\n  //         toggle &&\n  //         filteredList.map((item) => {\n  //           <div>\n  //             <div\n  //               onClick={() => {\n  //                 setToggle(false);\n  //                 setValue(item.data);\n  //               }}\n  //             >\n  //               {item.data}\n  //             </div>\n  //           </div>;\n  //         })\n  //       );\n  //     }\n  //   }\n  //   const dropdownItems = filteredCoinList?.map((item) => {\n  //     return (\n  //       <div>\n  //         <div\n  //           onClick={() => {\n  //             setToggle(false);\n  //             setValue(item.data);\n  //           }}\n  //         >\n  //           {item.data}\n  //         </div>\n  //       </div>\n  //     );\n  //   });\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dropdown, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConditionalRenderList, \"AbQFnjEZhzatvrhO0TtAxcv2FAg=\");\n\n_c = ConditionalRenderList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConditionalRenderList\");","map":{"version":3,"sources":["/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/ConditionalRenderList.js"],"names":["React","useState","ConditionalRenderList","value","list","setValue","toggle","setToggle","filteredCoinList","setFilteredCoinList","Dropdown","console","log","filteredList","filter","item","data","toString","toLowerCase","startsWith","length","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,qBAAT,OAMZ;AAAA;;AAAA,MAN2C;AAC5CC,IAAAA,KAD4C;AAE5CC,IAAAA,IAF4C;AAG5CC,IAAAA,QAH4C;AAI5CC,IAAAA,MAJ4C;AAK5CC,IAAAA;AAL4C,GAM3C;AACD,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,EAAxD;;AAEA,QAAMS,QAAQ,GAAG,MAAM;AACrB;AACA,QAAIP,KAAJ,EAAW;AACTQ,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ,EADS,CAGT;;AACA,YAAMS,YAAY,GAAGT,IAAI,CAACU,MAAL,CAAaC,IAAD,IAAU;AACzC,eAAOA,IAAI,CAACC,IAAL,CACJC,QADI,GAEJC,WAFI,GAGJC,UAHI,CAGOhB,KAAK,CAACe,WAAN,EAHP,CAAP;AAID,OALoB,CAArB;AAOAP,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ,EAZS,CAaT;;AACA,UAAIA,YAAY,CAACO,MAAb,KAAwB,CAA5B,EAA+B;AAC7B,4BACE;AAAA,kCACE;AAAA,2CAAsBjB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD,OAPD,MAOO;AACLQ,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAC,QAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEQ,GAAd,CAAmBN,IAAD,IAAU;AAC1B,8BACE;AAAA,mCACE;AACE,cAAA,OAAO,EAAE,MAAM;AACbR,gBAAAA,SAAS,CAAC,KAAD,CAAT,CADa,CAEb;AACD,eAJH;AAAA,wBAMGQ,IAAI,CAACC;AANR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF;AAYD,SAbD;AAcD;;AACDT,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,GA1CD,CAHC,CA8CD;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAA,2BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA5GuBL,qB;;KAAAA,qB","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function ConditionalRenderList({\n  value,\n  list,\n  setValue,\n  toggle,\n  setToggle,\n}) {\n  const [filteredCoinList, setFilteredCoinList] = useState();\n\n  const Dropdown = () => {\n    //if user enters value in search bar\n    if (value) {\n      console.log(list);\n\n      //checks input value against list of coins for matches\n      const filteredList = list.filter((item) => {\n        return item.data\n          .toString()\n          .toLowerCase()\n          .startsWith(value.toLowerCase());\n      });\n\n      console.log(\"filteredList\");\n      console.log(filteredList);\n      //   setFilteredCoinList(filteredList);\n      if (filteredList.length === 0) {\n        return (\n          <div>\n            <div>No results for '{value}'</div>\n            <div>We couldn't find anything matching your search.</div>\n          </div>\n        );\n      } else {\n        console.log(\"filtered list and toggle true\");\n        filteredList?.map((item) => {\n          return (\n            <div>\n              <div\n                onClick={() => {\n                  setToggle(false);\n                  //   setValue(item.data);\n                }}\n              >\n                {item.data}\n              </div>\n            </div>\n          );\n        });\n      }\n      setToggle(false);\n    }\n  };\n  //if user enters value in search bar\n  //   if (value) {\n  //     console.log(list);\n\n  //     //checks input value against list of coins for matches\n  //     const filteredList = list.filter((item) => {\n  //       return item.data.toString().toLowerCase().startsWith(value.toLowerCase());\n  //     });\n\n  //     console.log(\"filteredList\");\n  //     console.log(filteredList);\n  //     setFilteredCoinList(filteredList);\n  //   }\n  //\n  //\n  //\n  //if spelling matches are found\n  //     if (filteredList.length) {\n  //       return (\n  //         toggle &&\n  //         filteredList.map((item) => {\n  //           <div>\n  //             <div\n  //               onClick={() => {\n  //                 setToggle(false);\n  //                 setValue(item.data);\n  //               }}\n  //             >\n  //               {item.data}\n  //             </div>\n  //           </div>;\n  //         })\n  //       );\n  //     }\n  //   }\n\n  //   const dropdownItems = filteredCoinList?.map((item) => {\n  //     return (\n  //       <div>\n  //         <div\n  //           onClick={() => {\n  //             setToggle(false);\n  //             setValue(item.data);\n  //           }}\n  //         >\n  //           {item.data}\n  //         </div>\n  //       </div>\n  //     );\n  //   });\n\n  return (\n    <div>\n      <Dropdown />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}