{"ast":null,"code":"var _jsxFileName = \"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/SearchList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport DropdownItem from \"./DropdownItem\";\nimport Context from \"../context/context\";\nimport axios from \"axios\";\nimport \"./searchList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchList(_ref) {\n  _s();\n\n  let {\n    value,\n    list,\n    clearSearchBar,\n    setFirstListItem\n  } = _ref;\n  // console.log(value, list);\n  const {\n    coinData,\n    setSelectedCoinData\n  } = useContext(Context);\n  const [filteredList, setFilteredList] = useState(0);\n  const [allResultsVisibility, setAllResultsVisibility] = useState(false);\n  const [selectedCoinDataWithDescription, setSelectedCoinDataWithDescription] = useState(); //adds \"description\" to coin selectedCoinInfo\n\n  const fetchCoinDescription = coin => {\n    console.log(\"in fetchCoinDescription\");\n    console.log(coin);\n    console.log(coin.id); //investigate that again\n\n    let selectedCoinInfo = coin;\n    axios.get(`https://api.coingecko.com/api/v3/coins/${coin.id}`).then(response => {\n      const data = response.data; // console.log(data);\n      // console.log(data.description.en);\n\n      selectedCoinInfo.description = data.description.en; // console.log(\"selectedCoinInfo\");\n      // console.log(selectedCoinInfo);\n\n      setSelectedCoinDataWithDescription(selectedCoinInfo);\n    });\n  }; //!seems to be getting called as hovering over list items\n  //returns list of coins that match search input\n\n\n  useEffect(() => {\n    if (value) {\n      const filteredList = coinData.filter(item => {\n        return item.name.toString().toLowerCase().startsWith(value.toLowerCase());\n      });\n      console.log(\"filteredList\");\n      console.log(filteredList);\n      setFilteredList(filteredList);\n    }\n  }, [value]); // const Dropdown = () => {\n  //   //if user enters value in search bar\n  //   if (value) {\n  //     // console.log(list);\n  //     //checks input value against list of coins for matches\n  //     const filteredList = coinData.filter((item) => {\n  //       return item.name\n  //         .toString()\n  //         .toLowerCase()\n  //         .startsWith(value.toLowerCase());\n  //     });\n  //     console.log(\"filteredList\");\n  //     console.log(filteredList);\n  //     // setFilteredListLength(filteredList.length);\n  //     //   setFilteredCoinList(filteredList);\n  //     if (filteredList.length === 0) {\n  //       return (\n  //         <div>\n  //           <div>No results for '{value}'</div>\n  //           <div>We couldn't find anything matching your search.</div>\n  //           <div>Try again with a different term.</div>\n  //         </div>\n  //       );\n  //     } else {\n  //       console.log(\"filtered list found\");\n  //       return filteredList.map((item, index) => {\n  //         //makes first list item retrievable on form submit (click \"enter\" in searchBar component)\n  //         if (index === 0) {\n  //           fetchCoinDescription(item);\n  //           setFirstListItem(selectedCoinDataWithDescription);\n  //           // setSelectedCoinData(item);\n  //         }\n  //         if (allResultsVisibility) {\n  //           //does this need to be here\n  //           return (\n  //             <div className=\"search-item\">\n  //               <NavLink\n  //                 //!this onEnter gets called over and over\n  //                 onMouseEnter={() => {\n  //                   console.log(\"item on hover\");\n  //                   console.log(item);\n  //                   fetchCoinDescription(item); //not always correct for 2+ coin in list\n  //                 }}\n  //                 onClick={() => {\n  //                   setSelectedCoinData(selectedCoinDataWithDescription);\n  //                   clearSearchBar();\n  //                   setAllResultsVisibility(false);\n  //                 }}\n  //                 to={`/currencies/${item.name}`}\n  //                 key={item.id}\n  //               >\n  //                 <div>\n  //                   <img className=\"icon\" alt=\"search-icon\" src={item.image} />\n  //                 </div>\n  //                 <div>{item.name}</div>\n  //                 <div>{item.symbol.toUpperCase()}</div>\n  //                 <div>#{item.rank}</div>\n  //               </NavLink>\n  //             </div>\n  //           );\n  //         } else {\n  //           if (index < 4) {\n  //             return (\n  //               <div className=\"search-item\">\n  //                 <NavLink\n  //                   //!this onEnter gets called over and over\n  //                   onMouseEnter={() => {\n  //                     console.log(\"item on hover\");\n  //                     console.log(item);\n  //                     console.log(item.name);\n  //                     // debugger;\n  //                     fetchCoinDescription(item);\n  //                   }}\n  //                   onClick={() => {\n  //                     setSelectedCoinData(selectedCoinDataWithDescription);\n  //                     clearSearchBar();\n  //                     setAllResultsVisibility(false);\n  //                   }}\n  //                   to={`/currencies/${item.name}`}\n  //                   key={item.id}\n  //                 >\n  //                   <div>\n  //                     <img\n  //                       className=\"icon\"\n  //                       alt=\"search-icon\"\n  //                       src={item.image}\n  //                     />\n  //                   </div>\n  //                   <div>{item.name}</div>\n  //                   <div>{item.symbol.toUpperCase()}</div>\n  //                   <div>#{item.rank}</div>\n  //                 </NavLink>\n  //               </div>\n  //             );\n  //           }\n  //         }\n  //       });\n  //     }\n  //   }\n  // };\n\n  const noResultsMessage = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"No results for '\", value, \"'\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"We couldn't find anything matching your search.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Try again with a different term.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [filteredList.length === 0 ? noResultsMessage : filteredList.map((item, index) => {\n      //makes first list item retrievable on form submit (click \"enter\" in searchBar component)\n      if (index === 0) {\n        fetchCoinDescription(item);\n        setFirstListItem(selectedCoinDataWithDescription);\n      }\n\n      if (allResultsVisibility) {\n        /*#__PURE__*/\n        _jsxDEV(DropdownItem, {\n          item: item // fetchCoinDescription={fetchCoinDescription}\n          ,\n          setSelectedCoinData: setSelectedCoinData,\n          setAllResultsVisibility: allResultsVisibility\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this);\n      } else {\n        if (index < 4) {\n          /*#__PURE__*/\n          _jsxDEV(DropdownItem, {\n            item: item // fetchCoinDescription={fetchCoinDescription}\n            ,\n            setSelectedCoinData: setSelectedCoinData,\n            setAllResultsVisibility: allResultsVisibility\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this);\n        }\n      }\n    }), /*#__PURE__*/_jsxDEV(DropdownItem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), !allResultsVisibility && /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => {\n        setAllResultsVisibility(true);\n      },\n      children: [\"See all results\", filteredList.length > 0 && \"(\" + filteredList.length + \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchList, \"dSX9esO10EF/2wVCTqZx7dHop7k=\");\n\n_c = SearchList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchList\");","map":{"version":3,"sources":["/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/SearchList.js"],"names":["React","useContext","useEffect","useState","DropdownItem","Context","axios","SearchList","value","list","clearSearchBar","setFirstListItem","coinData","setSelectedCoinData","filteredList","setFilteredList","allResultsVisibility","setAllResultsVisibility","selectedCoinDataWithDescription","setSelectedCoinDataWithDescription","fetchCoinDescription","coin","console","log","id","selectedCoinInfo","get","then","response","data","description","en","filter","item","name","toString","toLowerCase","startsWith","noResultsMessage","length","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;;AAEA,eAAe,SAASC,UAAT,OAKZ;AAAA;;AAAA,MALgC;AACjCC,IAAAA,KADiC;AAEjCC,IAAAA,IAFiC;AAGjCC,IAAAA,cAHiC;AAIjCC,IAAAA;AAJiC,GAKhC;AACD;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAoCZ,UAAU,CAACI,OAAD,CAApD;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACa,oBAAD,EAAuBC,uBAAvB,IAAkDd,QAAQ,CAAC,KAAD,CAAhE;AACA,QAAM,CAACe,+BAAD,EAAkCC,kCAAlC,IACJhB,QAAQ,EADV,CALC,CAQD;;AACA,QAAMiB,oBAAoB,GAAIC,IAAD,IAAU;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,EAAjB,EAHqC,CAIrC;;AACA,QAAIC,gBAAgB,GAAGJ,IAAvB;AACAf,IAAAA,KAAK,CACFoB,GADH,CACQ,0CAAyCL,IAAI,CAACG,EAAG,EADzD,EAEGG,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB,CADkB,CAElB;AACA;;AACAJ,MAAAA,gBAAgB,CAACK,WAAjB,GAA+BD,IAAI,CAACC,WAAL,CAAiBC,EAAhD,CAJkB,CAKlB;AACA;;AACAZ,MAAAA,kCAAkC,CAACM,gBAAD,CAAlC;AACD,KAVH;AAWD,GAjBD,CATC,CA4BD;AAEA;;;AACAvB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,KAAJ,EAAW;AACT,YAAMM,YAAY,GAAGF,QAAQ,CAACoB,MAAT,CAAiBC,IAAD,IAAU;AAC7C,eAAOA,IAAI,CAACC,IAAL,CACJC,QADI,GAEJC,WAFI,GAGJC,UAHI,CAGO7B,KAAK,CAAC4B,WAAN,EAHP,CAAP;AAID,OALoB,CAArB;AAMAd,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ;AACAC,MAAAA,eAAe,CAACD,YAAD,CAAf;AACD;AACF,GAZQ,EAYN,CAACN,KAAD,CAZM,CAAT,CA/BC,CA6CD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAM8B,gBAAgB,gBACpB;AAAA,4BACE;AAAA,qCAAsB9B,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAQA,sBACE;AAAA,eACGM,YAAY,CAACyB,MAAb,KAAwB,CAAxB,GACGD,gBADH,GAEGxB,YAAY,CAAC0B,GAAb,CAAiB,CAACP,IAAD,EAAOQ,KAAP,KAAiB;AAChC;AACA,UAAIA,KAAK,KAAK,CAAd,EAAiB;AACfrB,QAAAA,oBAAoB,CAACa,IAAD,CAApB;AACAtB,QAAAA,gBAAgB,CAACO,+BAAD,CAAhB;AACD;;AACD,UAAIF,oBAAJ,EAA0B;AACxB;AAAA,gBAAC,YAAD;AACE,UAAA,IAAI,EAAEiB,IADR,CAEE;AAFF;AAGE,UAAA,mBAAmB,EAAEpB,mBAHvB;AAIE,UAAA,uBAAuB,EAAEG;AAJ3B;AAAA;AAAA;AAAA;AAAA;AAMD,OAPD,MAOO;AACL,YAAIyB,KAAK,GAAG,CAAZ,EAAe;AACb;AAAA,kBAAC,YAAD;AACE,YAAA,IAAI,EAAER,IADR,CAEE;AAFF;AAGE,YAAA,mBAAmB,EAAEpB,mBAHvB;AAIE,YAAA,uBAAuB,EAAEG;AAJ3B;AAAA;AAAA;AAAA;AAAA;AAMD;AACF;AACF,KAvBD,CAHN,eA2BE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YA3BF,EA4BG,CAACA,oBAAD,iBACC;AACE,MAAA,OAAO,EAAE,MAAM;AACbC,QAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACD,OAHH;AAAA,oCAMGH,YAAY,CAACyB,MAAb,GAAsB,CAAtB,IAA2B,MAAMzB,YAAY,CAACyB,MAAnB,GAA4B,GAN1D;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD;;GAzMuBhC,U;;KAAAA,U","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\n\nimport DropdownItem from \"./DropdownItem\";\nimport Context from \"../context/context\";\nimport axios from \"axios\";\nimport \"./searchList.css\";\n\nexport default function SearchList({\n  value,\n  list,\n  clearSearchBar,\n  setFirstListItem,\n}) {\n  // console.log(value, list);\n  const { coinData, setSelectedCoinData } = useContext(Context);\n  const [filteredList, setFilteredList] = useState(0);\n  const [allResultsVisibility, setAllResultsVisibility] = useState(false);\n  const [selectedCoinDataWithDescription, setSelectedCoinDataWithDescription] =\n    useState();\n\n  //adds \"description\" to coin selectedCoinInfo\n  const fetchCoinDescription = (coin) => {\n    console.log(\"in fetchCoinDescription\");\n    console.log(coin);\n    console.log(coin.id);\n    //investigate that again\n    let selectedCoinInfo = coin;\n    axios\n      .get(`https://api.coingecko.com/api/v3/coins/${coin.id}`)\n      .then((response) => {\n        const data = response.data;\n        // console.log(data);\n        // console.log(data.description.en);\n        selectedCoinInfo.description = data.description.en;\n        // console.log(\"selectedCoinInfo\");\n        // console.log(selectedCoinInfo);\n        setSelectedCoinDataWithDescription(selectedCoinInfo);\n      });\n  };\n\n  //!seems to be getting called as hovering over list items\n\n  //returns list of coins that match search input\n  useEffect(() => {\n    if (value) {\n      const filteredList = coinData.filter((item) => {\n        return item.name\n          .toString()\n          .toLowerCase()\n          .startsWith(value.toLowerCase());\n      });\n      console.log(\"filteredList\");\n      console.log(filteredList);\n      setFilteredList(filteredList);\n    }\n  }, [value]);\n\n  // const Dropdown = () => {\n  //   //if user enters value in search bar\n  //   if (value) {\n  //     // console.log(list);\n\n  //     //checks input value against list of coins for matches\n  //     const filteredList = coinData.filter((item) => {\n  //       return item.name\n  //         .toString()\n  //         .toLowerCase()\n  //         .startsWith(value.toLowerCase());\n  //     });\n  //     console.log(\"filteredList\");\n  //     console.log(filteredList);\n  //     // setFilteredListLength(filteredList.length);\n  //     //   setFilteredCoinList(filteredList);\n  //     if (filteredList.length === 0) {\n  //       return (\n  //         <div>\n  //           <div>No results for '{value}'</div>\n  //           <div>We couldn't find anything matching your search.</div>\n  //           <div>Try again with a different term.</div>\n  //         </div>\n  //       );\n  //     } else {\n  //       console.log(\"filtered list found\");\n  //       return filteredList.map((item, index) => {\n  //         //makes first list item retrievable on form submit (click \"enter\" in searchBar component)\n  //         if (index === 0) {\n  //           fetchCoinDescription(item);\n  //           setFirstListItem(selectedCoinDataWithDescription);\n  //           // setSelectedCoinData(item);\n  //         }\n  //         if (allResultsVisibility) {\n  //           //does this need to be here\n  //           return (\n  //             <div className=\"search-item\">\n  //               <NavLink\n  //                 //!this onEnter gets called over and over\n  //                 onMouseEnter={() => {\n  //                   console.log(\"item on hover\");\n  //                   console.log(item);\n  //                   fetchCoinDescription(item); //not always correct for 2+ coin in list\n  //                 }}\n  //                 onClick={() => {\n  //                   setSelectedCoinData(selectedCoinDataWithDescription);\n  //                   clearSearchBar();\n  //                   setAllResultsVisibility(false);\n  //                 }}\n  //                 to={`/currencies/${item.name}`}\n  //                 key={item.id}\n  //               >\n  //                 <div>\n  //                   <img className=\"icon\" alt=\"search-icon\" src={item.image} />\n  //                 </div>\n  //                 <div>{item.name}</div>\n  //                 <div>{item.symbol.toUpperCase()}</div>\n  //                 <div>#{item.rank}</div>\n  //               </NavLink>\n  //             </div>\n  //           );\n  //         } else {\n  //           if (index < 4) {\n  //             return (\n  //               <div className=\"search-item\">\n  //                 <NavLink\n  //                   //!this onEnter gets called over and over\n  //                   onMouseEnter={() => {\n  //                     console.log(\"item on hover\");\n  //                     console.log(item);\n  //                     console.log(item.name);\n  //                     // debugger;\n  //                     fetchCoinDescription(item);\n  //                   }}\n  //                   onClick={() => {\n  //                     setSelectedCoinData(selectedCoinDataWithDescription);\n  //                     clearSearchBar();\n  //                     setAllResultsVisibility(false);\n  //                   }}\n  //                   to={`/currencies/${item.name}`}\n  //                   key={item.id}\n  //                 >\n  //                   <div>\n  //                     <img\n  //                       className=\"icon\"\n  //                       alt=\"search-icon\"\n  //                       src={item.image}\n  //                     />\n  //                   </div>\n  //                   <div>{item.name}</div>\n  //                   <div>{item.symbol.toUpperCase()}</div>\n  //                   <div>#{item.rank}</div>\n  //                 </NavLink>\n  //               </div>\n  //             );\n  //           }\n  //         }\n  //       });\n  //     }\n  //   }\n  // };\n\n  const noResultsMessage = (\n    <div>\n      <div>No results for '{value}'</div>\n      <div>We couldn't find anything matching your search.</div>\n      <div>Try again with a different term.</div>\n    </div>\n  );\n\n  return (\n    <div>\n      {filteredList.length === 0\n        ? noResultsMessage\n        : filteredList.map((item, index) => {\n            //makes first list item retrievable on form submit (click \"enter\" in searchBar component)\n            if (index === 0) {\n              fetchCoinDescription(item);\n              setFirstListItem(selectedCoinDataWithDescription);\n            }\n            if (allResultsVisibility) {\n              <DropdownItem\n                item={item}\n                // fetchCoinDescription={fetchCoinDescription}\n                setSelectedCoinData={setSelectedCoinData}\n                setAllResultsVisibility={allResultsVisibility}\n              />;\n            } else {\n              if (index < 4) {\n                <DropdownItem\n                  item={item}\n                  // fetchCoinDescription={fetchCoinDescription}\n                  setSelectedCoinData={setSelectedCoinData}\n                  setAllResultsVisibility={allResultsVisibility}\n                />;\n              }\n            }\n          })}\n      <DropdownItem />\n      {!allResultsVisibility && (\n        <div\n          onClick={() => {\n            setAllResultsVisibility(true);\n          }}\n        >\n          See all results\n          {filteredList.length > 0 && \"(\" + filteredList.length + \")\"}\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}