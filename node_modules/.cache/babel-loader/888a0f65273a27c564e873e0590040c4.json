{"ast":null,"code":"// import \"./wallet.css\";\n//import React from \"react\";\n// import { PieChart, Pie, Sector, Cell, ResponsiveContainer } from \"recharts\";\n// const userCoins = [\n//   { name: \"Cardano\", value: 400 },\n//   { name: \"Ethereum\", value: 750 },\n//   { name: \"Bitcoin\", value: 800 },\n//   { name: \"Polygon\", value: 200 },\n//   { name: \"Dogecoin\", value: 300 },\n//   { name: \"Solana\", value: 1500 },\n// ];\n// const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n// export default function App() {\n//   const handleClick = () => {\n//     console.log(\"click\");\n//   };\n//   return (\n//     <div className=\"pieChart-container\">\n//       <ResponsiveContainer width=\"100%\" aspect={\"50%\"}>\n//         <PieChart className=\"pie-chart\">\n//           <Pie\n//             data={userCoins}\n//             // cx=\"50%\" //! or can be set {200} // not sure what this is exactly\n//             // cy=\"75%\" //! or can be set {200}\n//             innerRadius={40}\n//             outerRadius={80}\n//             fill=\"#8884d8\"\n//             paddingAngle={5}\n//             dataKey=\"value\" //! not sure what this is exactly\n//             label\n//           >\n//             {userCoins.map((entry, index) => (\n//               <Cell\n//                 onMouseEnter={handleClick}\n//                 key={`cell-${index}`}\n//                 fill={COLORS[index % COLORS.length]}\n//               />\n//             ))}\n//           </Pie>\n//         </PieChart>\n//       </ResponsiveContainer>\n//     </div>\n//   );\n// }\n// import \"./styles.css\";\n// import React, { useState, useEffect } from \"react\";\n// import {\n//   AreaChart,\n//   Area,\n//   XAxis,\n//   YAxis,\n//   CartesianGrid,\n//   Tooltip,\n//   ResponsiveContainer,\n// } from \"recharts\";\n// const data = [\n//   {\n//     name: \"Page A\",\n//     uv: 4000,\n//     pv: 2400,\n//     amt: 2400,\n//   },\n//   {\n//     name: \"Page B\",\n//     uv: 3000,\n//     pv: 1398,\n//     amt: 2210,\n//   },\n//   {\n//     name: \"Page C\",\n//     uv: 2000,\n//     pv: 9800,\n//     amt: 2290,\n//   },\n//   {\n//     name: \"Page D\",\n//     uv: 2780,\n//     pv: 3908,\n//     amt: 2000,\n//   },\n//   {\n//     name: \"Page E\",\n//     uv: 1890,\n//     pv: 4800,\n//     amt: 2181,\n//   },\n//   {\n//     name: \"Page F\",\n//     uv: 2390,\n//     pv: 3800,\n//     amt: 2500,\n//   },\n//   {\n//     name: \"Page G\",\n//     uv: 3490,\n//     pv: 4300,\n//     amt: 2100,\n//   },\n// ];\n// export default function Wallet() {\n//   //   const [dimensions, setDimensions] = React.useState({\n//   //     height: window.innerHeight,\n//   //     width: window.innerWidth,\n//   //   });\n//   //   React.useEffect(() => {\n//   //     function handleResize() {\n//   //       setDimensions({\n//   //         height: window.innerHeight,\n//   //         width: window.innerWidth,\n//   //       });\n//   //     }\n//   //     window.addEventListener(\"resize\", handleResize);\n//   //     return (_) => {\n//   //       window.removeEventListener(\"resize\", handleResize);\n//   //     };\n//   //   });\n//   const Chart = () => {\n//     return (\n//       <ResponsiveContainer /*width={100} height={50}*/>\n//         <AreaChart\n//           width={500}\n//           height={1000}\n//           data={data}\n//           margin={{\n//             top: 5,\n//             right: 5,\n//             left: 0,\n//             bottom: 0,\n//           }}\n//         >\n//           <CartesianGrid strokeDasharray=\"3 3\" />\n//           <XAxis dataKey=\"name\" />\n//           <YAxis />\n//           <Tooltip />\n//           <Area\n//             // isAnimationActive={false}\n//             type=\"monotone\"\n//             dataKey=\"uv\"\n//             stroke=\"#8884d8\"\n//             fill=\"#8884d8\"\n//           />\n//         </AreaChart>\n//       </ResponsiveContainer>\n//     );\n//   };\n//   return (\n//     <div\n//       className=\"recharts-wrapper\"\n//       style={{ width: \"1000px\", height: \"500px\", border: \"red 1px solid\" }}\n//     >\n//       <Chart />\n//       {/* <ResponsiveContainer>\n//         <AreaChart\n//           data={data}\n//           margin={{\n//             top: 10,\n//             right: 30,\n//             left: 0,\n//             bottom: 0,\n//           }}\n//         >\n//           <CartesianGrid strokeDasharray=\"3 3\" />\n//           <XAxis dataKey=\"name\" />\n//           <YAxis />\n//           <Tooltip />\n//           <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n//         </AreaChart>\n//       </ResponsiveContainer> */}\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/Wallet.js"],"names":[],"mappingssourcesContent":["// import \"./wallet.css\";\n//import React from \"react\";\n\n// import { PieChart, Pie, Sector, Cell, ResponsiveContainer } from \"recharts\";\n\n// const userCoins = [\n//   { name: \"Cardano\", value: 400 },\n//   { name: \"Ethereum\", value: 750 },\n//   { name: \"Bitcoin\", value: 800 },\n//   { name: \"Polygon\", value: 200 },\n//   { name: \"Dogecoin\", value: 300 },\n//   { name: \"Solana\", value: 1500 },\n// ];\n// const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n\n// export default function App() {\n//   const handleClick = () => {\n//     console.log(\"click\");\n//   };\n//   return (\n//     <div className=\"pieChart-container\">\n//       <ResponsiveContainer width=\"100%\" aspect={\"50%\"}>\n//         <PieChart className=\"pie-chart\">\n//           <Pie\n//             data={userCoins}\n//             // cx=\"50%\" //! or can be set {200} // not sure what this is exactly\n//             // cy=\"75%\" //! or can be set {200}\n//             innerRadius={40}\n//             outerRadius={80}\n//             fill=\"#8884d8\"\n//             paddingAngle={5}\n//             dataKey=\"value\" //! not sure what this is exactly\n//             label\n//           >\n//             {userCoins.map((entry, index) => (\n//               <Cell\n//                 onMouseEnter={handleClick}\n//                 key={`cell-${index}`}\n//                 fill={COLORS[index % COLORS.length]}\n//               />\n//             ))}\n//           </Pie>\n//         </PieChart>\n//       </ResponsiveContainer>\n//     </div>\n//   );\n// }\n\n// import \"./styles.css\";\n// import React, { useState, useEffect } from \"react\";\n// import {\n//   AreaChart,\n//   Area,\n//   XAxis,\n//   YAxis,\n//   CartesianGrid,\n//   Tooltip,\n//   ResponsiveContainer,\n// } from \"recharts\";\n\n// const data = [\n//   {\n//     name: \"Page A\",\n//     uv: 4000,\n//     pv: 2400,\n//     amt: 2400,\n//   },\n//   {\n//     name: \"Page B\",\n//     uv: 3000,\n//     pv: 1398,\n//     amt: 2210,\n//   },\n//   {\n//     name: \"Page C\",\n//     uv: 2000,\n//     pv: 9800,\n//     amt: 2290,\n//   },\n//   {\n//     name: \"Page D\",\n//     uv: 2780,\n//     pv: 3908,\n//     amt: 2000,\n//   },\n//   {\n//     name: \"Page E\",\n//     uv: 1890,\n//     pv: 4800,\n//     amt: 2181,\n//   },\n//   {\n//     name: \"Page F\",\n//     uv: 2390,\n//     pv: 3800,\n//     amt: 2500,\n//   },\n//   {\n//     name: \"Page G\",\n//     uv: 3490,\n//     pv: 4300,\n//     amt: 2100,\n//   },\n// ];\n\n// export default function Wallet() {\n//   //   const [dimensions, setDimensions] = React.useState({\n//   //     height: window.innerHeight,\n//   //     width: window.innerWidth,\n//   //   });\n//   //   React.useEffect(() => {\n//   //     function handleResize() {\n//   //       setDimensions({\n//   //         height: window.innerHeight,\n//   //         width: window.innerWidth,\n//   //       });\n//   //     }\n\n//   //     window.addEventListener(\"resize\", handleResize);\n\n//   //     return (_) => {\n//   //       window.removeEventListener(\"resize\", handleResize);\n//   //     };\n//   //   });\n\n//   const Chart = () => {\n//     return (\n//       <ResponsiveContainer /*width={100} height={50}*/>\n//         <AreaChart\n//           width={500}\n//           height={1000}\n//           data={data}\n//           margin={{\n//             top: 5,\n//             right: 5,\n//             left: 0,\n//             bottom: 0,\n//           }}\n//         >\n//           <CartesianGrid strokeDasharray=\"3 3\" />\n//           <XAxis dataKey=\"name\" />\n//           <YAxis />\n//           <Tooltip />\n//           <Area\n//             // isAnimationActive={false}\n//             type=\"monotone\"\n//             dataKey=\"uv\"\n//             stroke=\"#8884d8\"\n//             fill=\"#8884d8\"\n//           />\n//         </AreaChart>\n//       </ResponsiveContainer>\n//     );\n//   };\n\n//   return (\n//     <div\n//       className=\"recharts-wrapper\"\n//       style={{ width: \"1000px\", height: \"500px\", border: \"red 1px solid\" }}\n//     >\n//       <Chart />\n//       {/* <ResponsiveContainer>\n//         <AreaChart\n//           data={data}\n//           margin={{\n//             top: 10,\n//             right: 30,\n//             left: 0,\n//             bottom: 0,\n//           }}\n//         >\n//           <CartesianGrid strokeDasharray=\"3 3\" />\n//           <XAxis dataKey=\"name\" />\n//           <YAxis />\n//           <Tooltip />\n//           <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n//         </AreaChart>\n//       </ResponsiveContainer> */}\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}