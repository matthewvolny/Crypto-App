{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useContext } from \"react\";\nimport Context from \"../context/context\";\nimport { createChart } from \"lightweight-charts\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CoinRow(props) {\n  _s();\n\n  // const isMounted = useRef(false);\n  // console.log(props);\n  // const { name, price, percentChange, data } = props.coin;\n  const {\n    coinData\n  } = useContext(Context); // const {\n  //   rank,\n  //   image,\n  //   name,\n  //   symbol,\n  //   price,\n  //   percentChange24hr,\n  //   percentChange7d,\n  //   marketCap,\n  //   volume24hr,\n  //   sparkline,\n  // } = coinData;\n  // console.log(name);\n  // useEffect(() => {\n  //   if (isMounted.current) {\n  //     const chart = createChart(document.querySelector(\".chart\"), {\n  //       width: 400,\n  //       height: 300,\n  //       rightPriceScale: {\n  //         visible: false,\n  //       },\n  //       grid: {\n  //         vertLines: {\n  //           visible: false,\n  //         },\n  //         horzLines: {\n  //           visible: false,\n  //         },\n  //       },\n  //       crosshair: {\n  //         vertLine: {\n  //           visible: false,\n  //         },\n  //         horzLine: {\n  //           visible: false,\n  //         },\n  //       },\n  //       layout: {\n  //         backgroundColor: \"tan\",\n  //       },\n  //       timeScale: { visible: false },\n  //       // borderColor: \"green\",\n  //       // timeVisible: false,\n  //       // priceScaleMode: percentChange,\n  //     });\n  //     //fits timescale to the content\n  //     chart.timeScale().fitContent();\n  //     const lineSeries = chart\n  //       .addLineSeries\n  //       //used to set y-axis scale (not quite sure exactly how it works)\n  //       //   {\n  //       //   autoscaleInfoProvider: () => ({\n  //       //     priceRange: {\n  //       //       minValue: 0,\n  //       //       maxValue: 100,\n  //       //     },\n  //       //   }),\n  //       // }\n  //       ();\n  //     lineSeries.applyOptions({\n  //       color: \"red\",\n  //       lineWidth: 5,\n  //       //crosshair dot\n  //       crosshairMarkerVisible: false,\n  //       //both of these are similar\n  //       lastValueVisible: false,\n  //       priceLineVisible: false,\n  //       //can make the series disapper (labels remain)\n  //       visible: true,\n  //       //\n  //     });\n  //     // const customFormatter = (time, tickMarkType, locale) => {\n  //     //   // tickMarkType: \"year\";\n  //     // };\n  //     lineSeries.setData(data);\n  //     //   window.addEventListener(\"resize\", handleResize);\n  //   } else {\n  //     isMounted.current = true;\n  //   }\n  // });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) // <div key={rank}>\n  //   <div>{rank}</div>\n  //   <div>\n  //     <img src={image} alt=\"crypto-icon\"></img>\n  //   </div>\n  //   <div>{name}</div>\n  //   <div>{symbol}</div>\n  //   <div>{price}</div>\n  //   <div>{percentChange24hr}</div>\n  //   <div>{percentChange7d}</div>\n  //   <div>{marketCap}</div>\n  //   <div>{volume24hr}</div>\n  //   <div className=\"chart\"></div>\n  // </div>\n  ;\n}\n\n_s(CoinRow, \"addyguNMSmo5CjBAJaIL9FDec3o=\");\n\n_c = CoinRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinRow\");","map":{"version":3,"sources":["/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/CoinRow.js"],"names":["React","useEffect","useRef","useContext","Context","createChart","CoinRow","props","coinData"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,UAAnC,QAAqD,OAArD;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,oBAA5B;;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACrC;AACA;AACA;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAeL,UAAU,CAACC,OAAD,CAA/B,CALqC,CAOrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,qCADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfF;AAiBD;;GA3GuBE,O;;KAAAA,O","sourcesContent":["import React, { useEffect, useRef, useContext } from \"react\";\nimport Context from \"../context/context\";\nimport { createChart } from \"lightweight-charts\";\n\nexport default function CoinRow(props) {\n  // const isMounted = useRef(false);\n  // console.log(props);\n  // const { name, price, percentChange, data } = props.coin;\n\n  const { coinData } = useContext(Context);\n\n  // const {\n  //   rank,\n  //   image,\n  //   name,\n  //   symbol,\n  //   price,\n  //   percentChange24hr,\n  //   percentChange7d,\n  //   marketCap,\n  //   volume24hr,\n  //   sparkline,\n  // } = coinData;\n  // console.log(name);\n\n  // useEffect(() => {\n  //   if (isMounted.current) {\n  //     const chart = createChart(document.querySelector(\".chart\"), {\n  //       width: 400,\n  //       height: 300,\n  //       rightPriceScale: {\n  //         visible: false,\n  //       },\n  //       grid: {\n  //         vertLines: {\n  //           visible: false,\n  //         },\n  //         horzLines: {\n  //           visible: false,\n  //         },\n  //       },\n  //       crosshair: {\n  //         vertLine: {\n  //           visible: false,\n  //         },\n  //         horzLine: {\n  //           visible: false,\n  //         },\n  //       },\n  //       layout: {\n  //         backgroundColor: \"tan\",\n  //       },\n  //       timeScale: { visible: false },\n  //       // borderColor: \"green\",\n  //       // timeVisible: false,\n  //       // priceScaleMode: percentChange,\n  //     });\n  //     //fits timescale to the content\n  //     chart.timeScale().fitContent();\n  //     const lineSeries = chart\n  //       .addLineSeries\n  //       //used to set y-axis scale (not quite sure exactly how it works)\n  //       //   {\n  //       //   autoscaleInfoProvider: () => ({\n  //       //     priceRange: {\n  //       //       minValue: 0,\n  //       //       maxValue: 100,\n  //       //     },\n  //       //   }),\n  //       // }\n  //       ();\n  //     lineSeries.applyOptions({\n  //       color: \"red\",\n\n  //       lineWidth: 5,\n  //       //crosshair dot\n  //       crosshairMarkerVisible: false,\n  //       //both of these are similar\n  //       lastValueVisible: false,\n  //       priceLineVisible: false,\n  //       //can make the series disapper (labels remain)\n  //       visible: true,\n  //       //\n  //     });\n  //     // const customFormatter = (time, tickMarkType, locale) => {\n  //     //   // tickMarkType: \"year\";\n  //     // };\n  //     lineSeries.setData(data);\n  //     //   window.addEventListener(\"resize\", handleResize);\n  //   } else {\n  //     isMounted.current = true;\n  //   }\n  // });\n\n  return (\n    <></>\n    // <div key={rank}>\n    //   <div>{rank}</div>\n    //   <div>\n    //     <img src={image} alt=\"crypto-icon\"></img>\n    //   </div>\n    //   <div>{name}</div>\n    //   <div>{symbol}</div>\n    //   <div>{price}</div>\n    //   <div>{percentChange24hr}</div>\n    //   <div>{percentChange7d}</div>\n    //   <div>{marketCap}</div>\n    //   <div>{volume24hr}</div>\n    //   <div className=\"chart\"></div>\n    // </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}