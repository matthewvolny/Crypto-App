{"ast":null,"code":"var _jsxFileName = \"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/ChartControls.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChartControls() {\n  _s();\n\n  const [actionClicked, setActionClicked] = useState();\n  const dayButton = document.querySelector(\".day\");\n  const weekButton = document.querySelector(\".week\");\n  const monthButton = document.querySelector(\".month\");\n  const yearButton = document.querySelector(\".year\");\n  const allButton = document.querySelector(\".all\");\n  const buttonDOMObject = {\n    dayButton: dayButton,\n    weekButton: weekButton,\n    monthButton: monthButton,\n    yearButton: yearButton,\n    allButton: allButton\n  }; //handles player actions, highlights and un-highlights action buttons\n\n  const handleClick = (viewFieldValue, timeFrameValue, e) => {\n    setViewFieldDuration(viewFieldValue);\n    setTimeFrameToFetch(timeFrameValue); //\n\n    if (!actionClicked) {\n      console.log(e.target.value);\n      e.target.setAttribute(\"id\", \"clicked\");\n      setActionClicked(e.target.className);\n    } else {\n      console.log(buttonDOMObject[actionClicked]);\n      buttonDOMObject[actionClicked].removeAttribute(\"id\");\n      e.target.setAttribute(\"id\", \"clicked\");\n      setActionClicked(e.target.className);\n    }\n  }; //unclicks player action buttons when changing rooms\n  // useEffect(() => {\n  // if (actionClicked) {\n  //   actionDOMObject[actionClicked].removeAttribute(\"id\");\n  // }\n  // }, [props.roomEvaluateDetails]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-controls\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"day\",\n      value: \"day\",\n      onClick: () => handleClick(\"1\", \"90\"),\n      children: \"Day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"week\",\n      value: \"week\",\n      onClick: () => handleClick(\"7\", \"90\"),\n      children: \"Week\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"month\",\n      value: \"month\",\n      onClick: () => handleClick(\"30\", \"90\"),\n      children: \"Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"year\",\n      value: \"year\",\n      onClick: () => handleClick(\"365\", \"max\"),\n      children: \"Year\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all\",\n      value: \"all\",\n      onClick: () => handleClick(\"max\", \"max\"),\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChartControls, \"BdAb6xUjbeIpZxEUrKEmG8AwHnw=\");\n\n_c = ChartControls;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartControls\");","map":{"version":3,"sources":["/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/ChartControls.js"],"names":["React","ChartControls","actionClicked","setActionClicked","useState","dayButton","document","querySelector","weekButton","monthButton","yearButton","allButton","buttonDOMObject","handleClick","viewFieldValue","timeFrameValue","e","setViewFieldDuration","setTimeFrameToFetch","console","log","target","value","setAttribute","className","removeAttribute"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nexport default function ChartControls() {\n  const [actionClicked, setActionClicked] = useState();\n\n  const dayButton = document.querySelector(\".day\");\n  const weekButton = document.querySelector(\".week\");\n  const monthButton = document.querySelector(\".month\");\n  const yearButton = document.querySelector(\".year\");\n  const allButton = document.querySelector(\".all\");\n\n  const buttonDOMObject = {\n    dayButton: dayButton,\n    weekButton: weekButton,\n    monthButton: monthButton,\n    yearButton: yearButton,\n    allButton: allButton,\n  };\n\n  //handles player actions, highlights and un-highlights action buttons\n  const handleClick = (viewFieldValue, timeFrameValue, e) => {\n    setViewFieldDuration(viewFieldValue);\n    setTimeFrameToFetch(timeFrameValue);\n    //\n    if (!actionClicked) {\n      console.log(e.target.value);\n      e.target.setAttribute(\"id\", \"clicked\");\n      setActionClicked(e.target.className);\n    } else {\n      console.log(buttonDOMObject[actionClicked]);\n      buttonDOMObject[actionClicked].removeAttribute(\"id\");\n      e.target.setAttribute(\"id\", \"clicked\");\n      setActionClicked(e.target.className);\n    }\n  };\n\n  //unclicks player action buttons when changing rooms\n  // useEffect(() => {\n  // if (actionClicked) {\n  //   actionDOMObject[actionClicked].removeAttribute(\"id\");\n  // }\n  // }, [props.roomEvaluateDetails]);\n\n  return (\n    <div className=\"chart-controls\">\n      <div className=\"day\" value=\"day\" onClick={() => handleClick(\"1\", \"90\")}>\n        Day\n      </div>\n      <div className=\"week\" value=\"week\" onClick={() => handleClick(\"7\", \"90\")}>\n        Week\n      </div>\n      <div\n        className=\"month\"\n        value=\"month\"\n        onClick={() => handleClick(\"30\", \"90\")}\n      >\n        Month\n      </div>\n      <div\n        className=\"year\"\n        value=\"year\"\n        onClick={() => handleClick(\"365\", \"max\")}\n      >\n        Year\n      </div>\n      <div\n        className=\"all\"\n        value=\"all\"\n        onClick={() => handleClick(\"max\", \"max\")}\n      >\n        All\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}