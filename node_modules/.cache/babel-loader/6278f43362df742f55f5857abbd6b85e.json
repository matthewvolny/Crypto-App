{"ast":null,"code":"var _jsxFileName = \"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/CoinRow.js\";\nimport React, { useEffect, useRef, useContext } from \"react\";\nimport Context from \"../context/context\";\nimport { createChart } from \"lightweight-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CoinRow(props) {\n  // const isMounted = useRef(false);\n  // console.log(props);\n  // const { name, price, percentChange, data } = props.coin;\n  console.log(props);\n  const {\n    rank,\n    image,\n    name,\n    symbol,\n    price,\n    percentChange24hr,\n    percentChange7d,\n    marketCap,\n    volume24hr,\n    sparkline\n  } = props.coinDataForRows;\n  console.log(name); // useEffect(() => {\n  //   if (isMounted.current) {\n  //     const chart = createChart(document.querySelector(\".chart\"), {\n  //       width: 400,\n  //       height: 300,\n  //       rightPriceScale: {\n  //         visible: false,\n  //       },\n  //       grid: {\n  //         vertLines: {\n  //           visible: false,\n  //         },\n  //         horzLines: {\n  //           visible: false,\n  //         },\n  //       },\n  //       crosshair: {\n  //         vertLine: {\n  //           visible: false,\n  //         },\n  //         horzLine: {\n  //           visible: false,\n  //         },\n  //       },\n  //       layout: {\n  //         backgroundColor: \"tan\",\n  //       },\n  //       timeScale: { visible: false },\n  //       // borderColor: \"green\",\n  //       // timeVisible: false,\n  //       // priceScaleMode: percentChange,\n  //     });\n  //     //fits timescale to the content\n  //     chart.timeScale().fitContent();\n  //     const lineSeries = chart\n  //       .addLineSeries\n  //       //used to set y-axis scale (not quite sure exactly how it works)\n  //       //   {\n  //       //   autoscaleInfoProvider: () => ({\n  //       //     priceRange: {\n  //       //       minValue: 0,\n  //       //       maxValue: 100,\n  //       //     },\n  //       //   }),\n  //       // }\n  //       ();\n  //     lineSeries.applyOptions({\n  //       color: \"red\",\n  //       lineWidth: 5,\n  //       //crosshair dot\n  //       crosshairMarkerVisible: false,\n  //       //both of these are similar\n  //       lastValueVisible: false,\n  //       priceLineVisible: false,\n  //       //can make the series disapper (labels remain)\n  //       visible: true,\n  //       //\n  //     });\n  //     // const customFormatter = (time, tickMarkType, locale) => {\n  //     //   // tickMarkType: \"year\";\n  //     // };\n  //     lineSeries.setData(data);\n  //     //   window.addEventListener(\"resize\", handleResize);\n  //   } else {\n  //     isMounted.current = true;\n  //   }\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.coinData.rank\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.coinData.image,\n        alt: \"crypto-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.coinData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.coinData.symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.coinData.price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.coinData.percentChange24hr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.coinData.percentChange7d\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.coinData.marketCap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.coinData.volume24hr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, props.coinData.rank, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_c = CoinRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinRow\");","map":{"version":3,"sources":["/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/CoinRow.js"],"names":["React","useEffect","useRef","useContext","Context","createChart","CoinRow","props","console","log","rank","image","name","symbol","price","percentChange24hr","percentChange7d","marketCap","volume24hr","sparkline","coinDataForRows","coinData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,UAAnC,QAAqD,OAArD;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,oBAA5B;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACrC;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM;AACJG,IAAAA,IADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,IAHI;AAIJC,IAAAA,MAJI;AAKJC,IAAAA,KALI;AAMJC,IAAAA,iBANI;AAOJC,IAAAA,eAPI;AAQJC,IAAAA,SARI;AASJC,IAAAA,UATI;AAUJC,IAAAA;AAVI,MAWFZ,KAAK,CAACa,eAXV;AAYAZ,EAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ,EAjBqC,CAmBrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,4BACE;AAAA,gBAAML,KAAK,CAACc,QAAN,CAAeX;AAArB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEH,KAAK,CAACc,QAAN,CAAeV,KAAzB;AAAgC,QAAA,GAAG,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAA,gBAAMJ,KAAK,CAACc,QAAN,CAAeT;AAArB;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,gBAAML,KAAK,CAACc,QAAN,CAAeR;AAArB;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,gBAAMN,KAAK,CAACc,QAAN,CAAeP;AAArB;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,gBAAMP,KAAK,CAACc,QAAN,CAAeN;AAArB;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAA,gBAAMR,KAAK,CAACc,QAAN,CAAeL;AAArB;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAA,gBAAMT,KAAK,CAACc,QAAN,CAAeJ;AAArB;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAA,gBAAMV,KAAK,CAACc,QAAN,CAAeH;AAArB;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA,KAAUX,KAAK,CAACc,QAAN,CAAeX,IAAzB;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;KAxGuBJ,O","sourcesContent":["import React, { useEffect, useRef, useContext } from \"react\";\nimport Context from \"../context/context\";\nimport { createChart } from \"lightweight-charts\";\n\nexport default function CoinRow(props) {\n  // const isMounted = useRef(false);\n  // console.log(props);\n  // const { name, price, percentChange, data } = props.coin;\n  console.log(props);\n  const {\n    rank,\n    image,\n    name,\n    symbol,\n    price,\n    percentChange24hr,\n    percentChange7d,\n    marketCap,\n    volume24hr,\n    sparkline,\n  } = props.coinDataForRows;\n  console.log(name);\n\n  // useEffect(() => {\n  //   if (isMounted.current) {\n  //     const chart = createChart(document.querySelector(\".chart\"), {\n  //       width: 400,\n  //       height: 300,\n  //       rightPriceScale: {\n  //         visible: false,\n  //       },\n  //       grid: {\n  //         vertLines: {\n  //           visible: false,\n  //         },\n  //         horzLines: {\n  //           visible: false,\n  //         },\n  //       },\n  //       crosshair: {\n  //         vertLine: {\n  //           visible: false,\n  //         },\n  //         horzLine: {\n  //           visible: false,\n  //         },\n  //       },\n  //       layout: {\n  //         backgroundColor: \"tan\",\n  //       },\n  //       timeScale: { visible: false },\n  //       // borderColor: \"green\",\n  //       // timeVisible: false,\n  //       // priceScaleMode: percentChange,\n  //     });\n  //     //fits timescale to the content\n  //     chart.timeScale().fitContent();\n  //     const lineSeries = chart\n  //       .addLineSeries\n  //       //used to set y-axis scale (not quite sure exactly how it works)\n  //       //   {\n  //       //   autoscaleInfoProvider: () => ({\n  //       //     priceRange: {\n  //       //       minValue: 0,\n  //       //       maxValue: 100,\n  //       //     },\n  //       //   }),\n  //       // }\n  //       ();\n  //     lineSeries.applyOptions({\n  //       color: \"red\",\n\n  //       lineWidth: 5,\n  //       //crosshair dot\n  //       crosshairMarkerVisible: false,\n  //       //both of these are similar\n  //       lastValueVisible: false,\n  //       priceLineVisible: false,\n  //       //can make the series disapper (labels remain)\n  //       visible: true,\n  //       //\n  //     });\n  //     // const customFormatter = (time, tickMarkType, locale) => {\n  //     //   // tickMarkType: \"year\";\n  //     // };\n  //     lineSeries.setData(data);\n  //     //   window.addEventListener(\"resize\", handleResize);\n  //   } else {\n  //     isMounted.current = true;\n  //   }\n  // });\n\n  return (\n    <div key={props.coinData.rank}>\n      <div>{props.coinData.rank}</div>\n      <div>\n        <img src={props.coinData.image} alt=\"crypto-icon\"></img>\n      </div>\n      <div>{props.coinData.name}</div>\n      <div>{props.coinData.symbol}</div>\n      <div>{props.coinData.price}</div>\n      <div>{props.coinData.percentChange24hr}</div>\n      <div>{props.coinData.percentChange7d}</div>\n      <div>{props.coinData.marketCap}</div>\n      <div>{props.coinData.volume24hr}</div>\n      {/* <div className=\"chart\"></div> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}