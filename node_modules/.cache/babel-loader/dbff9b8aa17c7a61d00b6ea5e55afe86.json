{"ast":null,"code":"var _jsxFileName = \"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/CoinRow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useContext, useEffect } from \"react\";\nimport Context from \"../context/context\"; // import { createChart } from \"lightweight-charts\";\n\nimport { NavLink } from \"react-router-dom\";\nimport { Sparklines, SparklinesLine } from \"react-sparklines\";\nimport axios from \"axios\";\nimport \"./coinrow.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CoinRow(props) {\n  _s();\n\n  const [sparklineColor, setSparklineColor] = useState();\n  const {\n    selectedCoinData,\n    setSelectedCoinData,\n    setCoinChartData\n  } = useContext(Context);\n  const [selectedCoinDataWithDescription, setSelectedCoinDataWithDescription] = useState(); //const isMounted = useRef(false);\n  // console.log(props);\n  // const { name, price, percentChange, data } = props.coin;\n\n  const {\n    id,\n    rank,\n    image,\n    name,\n    symbol,\n    price,\n    percentChange24hr,\n    percentChange7d,\n    marketCap,\n    volume24hr,\n    sparkline\n  } = props.coin; //colors sparkline chart based on 7d % change\n\n  useEffect(() => {\n    if (percentChange7d > 0) {\n      setSparklineColor(\"green\");\n    } else {\n      setSparklineColor(\"red\");\n    }\n  });\n\n  const fetchCoinDescription = coin => {\n    console.log(\"in fetchCoinDescription\");\n    console.log(coin);\n    console.log(coin.id);\n    let selectedCoinInfo = coin;\n    axios.get(`https://api.coingecko.com/api/v3/coins/${coin.id}`).then(response => {\n      const data = response.data;\n      console.log(data);\n      console.log(data.description.en);\n      selectedCoinInfo.description = data.description.en; // const selectedCoinDataCopy = selectedCoinData;\n      // selectedCoinDataCopy.description = data.description.en;\n      // // console.log(coinDataArray);\n\n      console.log(\"selectedCoinInfo\");\n      console.log(selectedCoinInfo);\n      setSelectedCoinData(selectedCoinInfo);\n    });\n  }; // useEffect(() => {\n  //   fetchCoinDescription(id);\n  // }, []);\n\n\n  const removeOnMouseEnterEvent = e => {// e.target.removeEventListener();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coin-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: rank\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"crypto-icon\",\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      to: `/currencies/${name}`,\n      onMouseEnter: () => {\n        // setSelectedCoinData(props.coin);\n        fetchCoinDescription(props.coin); // setActionClicked(\"day\");\n        // retrieveDetailedChartData(name);\n      },\n      onClick: () => {\n        // setSelectedCoinData(props.coin);\n        removeOnMouseEnterEvent();\n        fetchCoinDescription(props.coin); // setActionClicked(\"day\");\n        // retrieveDetailedChartData(name);\n      },\n      children: name\n    }, rank, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"$\", price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"percent-change\",\n      children: percentChange24hr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"percent-change\",\n      children: percentChange7d\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sparklines // className=\"sparkline-container\"\n    , {\n      data: sparkline // width={100}\n      // height={20}\n      // margin={5}\n      ,\n      children: /*#__PURE__*/_jsxDEV(SparklinesLine, {\n        style: {\n          strokeWidth: 3,\n          stroke: sparklineColor,\n          fill: \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CoinRow, \"w2ZRJmQplI23XpezR89sFQhlx/Q=\");\n\n_c = CoinRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinRow\");","map":{"version":3,"sources":["/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/CoinRow.js"],"names":["React","useState","useRef","useContext","useEffect","Context","NavLink","Sparklines","SparklinesLine","axios","CoinRow","props","sparklineColor","setSparklineColor","selectedCoinData","setSelectedCoinData","setCoinChartData","selectedCoinDataWithDescription","setSelectedCoinDataWithDescription","id","rank","image","name","symbol","price","percentChange24hr","percentChange7d","marketCap","volume24hr","sparkline","coin","fetchCoinDescription","console","log","selectedCoinInfo","get","then","response","data","description","en","removeOnMouseEnterEvent","e","strokeWidth","stroke","fill"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useContext, useEffect } from \"react\";\nimport Context from \"../context/context\";\n// import { createChart } from \"lightweight-charts\";\nimport { NavLink } from \"react-router-dom\";\nimport { Sparklines, SparklinesLine } from \"react-sparklines\";\nimport axios from \"axios\";\nimport \"./coinrow.css\";\n\nexport default function CoinRow(props) {\n  const [sparklineColor, setSparklineColor] = useState();\n  const { selectedCoinData, setSelectedCoinData, setCoinChartData } =\n    useContext(Context);\n  const [selectedCoinDataWithDescription, setSelectedCoinDataWithDescription] =\n    useState();\n  //const isMounted = useRef(false);\n  // console.log(props);\n  // const { name, price, percentChange, data } = props.coin;\n  const {\n    id,\n    rank,\n    image,\n    name,\n    symbol,\n    price,\n    percentChange24hr,\n    percentChange7d,\n    marketCap,\n    volume24hr,\n    sparkline,\n  } = props.coin;\n\n  //colors sparkline chart based on 7d % change\n  useEffect(() => {\n    if (percentChange7d > 0) {\n      setSparklineColor(\"green\");\n    } else {\n      setSparklineColor(\"red\");\n    }\n  });\n\n  const fetchCoinDescription = (coin) => {\n    console.log(\"in fetchCoinDescription\");\n    console.log(coin);\n    console.log(coin.id);\n    let selectedCoinInfo = coin;\n    axios\n      .get(`https://api.coingecko.com/api/v3/coins/${coin.id}`)\n      .then((response) => {\n        const data = response.data;\n        console.log(data);\n        console.log(data.description.en);\n        selectedCoinInfo.description = data.description.en;\n        // const selectedCoinDataCopy = selectedCoinData;\n        // selectedCoinDataCopy.description = data.description.en;\n\n        // // console.log(coinDataArray);\n        console.log(\"selectedCoinInfo\");\n        console.log(selectedCoinInfo);\n        setSelectedCoinData(selectedCoinInfo);\n      });\n  };\n\n  // useEffect(() => {\n  //   fetchCoinDescription(id);\n  // }, []);\n\n  const removeOnMouseEnterEvent = (e) => {\n    // e.target.removeEventListener();\n  };\n\n  return (\n    <div className=\"coin-row\">\n      <div>{rank}</div>\n      <div>\n        <img src={image} alt=\"crypto-icon\" className=\"icon\"></img>\n      </div>\n      <NavLink\n        to={`/currencies/${name}`}\n        key={rank}\n        onMouseEnter={() => {\n          // setSelectedCoinData(props.coin);\n          fetchCoinDescription(props.coin);\n\n          // setActionClicked(\"day\");\n          // retrieveDetailedChartData(name);\n        }}\n        onClick={() => {\n          // setSelectedCoinData(props.coin);\n          removeOnMouseEnterEvent();\n          fetchCoinDescription(props.coin);\n          // setActionClicked(\"day\");\n          // retrieveDetailedChartData(name);\n        }}\n      >\n        {name}\n      </NavLink>\n      <div>{symbol}</div>\n      <div>${price}</div>\n      <div className=\"percent-change\">{percentChange24hr}</div>\n      <div className=\"percent-change\">{percentChange7d}</div>\n      {/* <div>${marketCap}</div>\n      <div>${volume24hr}</div> */}\n      {/* <div className=\"chart\"></div> */}\n      <Sparklines\n        // className=\"sparkline-container\"\n        data={sparkline}\n        // width={100}\n        // height={20}\n        // margin={5}\n      >\n        <SparklinesLine\n          style={{ strokeWidth: 3, stroke: sparklineColor, fill: \"none\" }}\n        />\n      </Sparklines>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}