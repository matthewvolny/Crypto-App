{"ast":null,"code":"var _jsxFileName = \"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport closeIcon from \"../images/close-icon.png\";\nimport \"./loginForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LoginForm(_ref) {\n  _s();\n\n  let {\n    typeOfForm,\n    setTypeOfForm,\n    formVisible\n  } = _ref;\n  const isMounted = useRef(false);\n\n  const hideLoginForm = () => {\n    const loginContainer = document.querySelector(\".login-container\");\n    loginContainer.setAttribute(\"id\", \"hidden\");\n    const backgroundMask = document.querySelector(\".background-mask\");\n    backgroundMask.setAttribute(\"id\", \"hidden\");\n  };\n\n  useEffect(() => {\n    if (isMounted.current) {\n      const loginContainer = document.querySelector(\".login-container\");\n      loginContainer.setAttribute(\"id\", \"visible\");\n      const backgroundMask = document.querySelector(\".background-mask\");\n      backgroundMask.setAttribute(\"id\", \"visible\");\n    } else {\n      isMounted.current = true;\n    }\n  }, [formVisible]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-mask\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [typeOfForm === \"login\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: hideLoginForm,\n            className: \"close-button\",\n            alt: \"close-button\",\n            src: closeIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"New to Cryptic?\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"link\",\n              onClick: () => {\n                setTypeOfForm(\"signup\");\n              },\n              children: \"Create an account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading\",\n            children: \"Create an account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: hideLoginForm,\n            alt: \"close-button\",\n            className: \"close-button\",\n            src: closeIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Gain access to additional features such as a personal Watchlist and Portfolio tracking.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"link\",\n              onClick: () => {\n                setTypeOfForm(\"login\");\n              },\n              children: \"Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter your email address...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter your password...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Password should contain both letter and number, with minimum length of 8 characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), typeOfForm === \"login\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"By proceeding, you agree to Cryptic's Terms of Use and Privacy Policy.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"SkOohDVuXBk0DO6XXkvUZnCZ6So=\");\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/LoginForm.js"],"names":["React","useEffect","useRef","closeIcon","LoginForm","typeOfForm","setTypeOfForm","formVisible","isMounted","hideLoginForm","loginContainer","document","querySelector","setAttribute","backgroundMask","current"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport closeIcon from \"../images/close-icon.png\";\nimport \"./loginForm.css\";\n\nexport default function LoginForm({ typeOfForm, setTypeOfForm, formVisible }) {\n  const isMounted = useRef(false);\n\n  const hideLoginForm = () => {\n    const loginContainer = document.querySelector(\".login-container\");\n    loginContainer.setAttribute(\"id\", \"hidden\");\n    const backgroundMask = document.querySelector(\".background-mask\");\n    backgroundMask.setAttribute(\"id\", \"hidden\");\n  };\n\n  useEffect(() => {\n    if (isMounted.current) {\n      const loginContainer = document.querySelector(\".login-container\");\n      loginContainer.setAttribute(\"id\", \"visible\");\n      const backgroundMask = document.querySelector(\".background-mask\");\n      backgroundMask.setAttribute(\"id\", \"visible\");\n    } else {\n      isMounted.current = true;\n    }\n  }, [formVisible]);\n\n  return (\n    <div className=\"background-mask\">\n      <div className=\"login-container\">\n        <form>\n          {typeOfForm === \"login\" ? (\n            <div>\n              <div className=\"heading\">Login</div>\n              <img\n                onClick={hideLoginForm}\n                className=\"close-button\"\n                alt=\"close-button\"\n                src={closeIcon}\n              />\n              <div>\n                New to Cryptic?\n                <span\n                  className=\"link\"\n                  onClick={() => {\n                    setTypeOfForm(\"signup\");\n                  }}\n                >\n                  Create an account\n                </span>\n              </div>\n            </div>\n          ) : (\n            <div>\n              <div className=\"heading\">Create an account</div>\n              <img\n                onClick={hideLoginForm}\n                alt=\"close-button\"\n                className=\"close-button\"\n                src={closeIcon}\n              />\n              <div>\n                Gain access to additional features such as a personal Watchlist\n                and Portfolio tracking.\n              </div>\n              <div>\n                Already have an account?\n                <span\n                  className=\"link\"\n                  onClick={() => {\n                    setTypeOfForm(\"login\");\n                  }}\n                >\n                  Sign in\n                </span>\n              </div>\n            </div>\n          )}\n          <div>Email Address</div>\n          <input type=\"email\" placeholder=\"Enter your email address...\" />\n          <div>Password</div>\n          <input type=\"password\" placeholder=\"Enter your password...\" />\n          <div>\n            Password should contain both letter and number, with minimum length\n            of 8 characters\n          </div>\n          {typeOfForm === \"login\" ? (\n            <div className=\"button\">Log In</div>\n          ) : (\n            <>\n              <div className=\"button\">Sign Up</div>\n              <div>\n                By proceeding, you agree to Cryptic's Terms of Use and Privacy\n                Policy.\n              </div>\n            </>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}