{"ast":null,"code":"var _jsxFileName = \"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"./components/Chart\";\nimport axios from \"axios\";\nimport { createChart } from \"lightweight-charts\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [ethereumPrice, setEthereumPrice] = useState();\n  const [lastPrice, setLastPrice] = useState();\n  const [greenOrRed, setGreenOrRed] = useState(\"black\"); //stream price of this particular coin\n  // let ws = new WebSocket(\"wss://stream.binance.com:9443/ws/btceur@trade\");\n  // ws.onmessage = (event) => {\n  //   let stockObject = JSON.parse(event.data);\n  //   console.log(stockObject.p);\n  //   //convert string price to number(round to two decimal places)\n  //   const shortenedPrice = parseFloat(stockObject.p).toFixed(2);\n  //   setEthereumPrice(shortenedPrice);\n  // };\n\n  useEffect(() => {\n    if (lastPrice <= ethereumPrice) {\n      setGreenOrRed(\"green\");\n      setLastPrice(ethereumPrice);\n    } else {\n      setGreenOrRed(\"red\");\n      setLastPrice(ethereumPrice);\n    }\n  }, [ethereumPrice]); //setting up multiple streams at once\n  // let ws = new WebSocket(\n  //   \"wss://stream.binance.com:9443/ws/btceur@trade/etheur@trade\"\n  // );\n  // ws.onmessage = (event) => {\n  //   let stockObject = JSON.parse(event.data);\n  //   console.log(stockObject);\n  //   //convert string price to number(round to two decimal places)\n  //   // const shortenedPrice = parseFloat(stockObject.p).toFixed(2);\n  //   // setEthereumPrice(shortenedPrice);\n  // };\n  //get data stream for all tickers)\n  // let ws = new WebSocket(\"wss://stream.binance.com:9443/ws/!ticker@arr\");\n  // ws.onmessage = (event) => {\n  //   let stockObject = JSON.parse(event.data);\n  //   console.log(stockObject);\n  //   //convert string price to number(round to two decimal places)\n  //   // const shortenedPrice = parseFloat(stockObject.p).toFixed(2);\n  //   // setEthereumPrice(shortenedPrice);\n  // };\n  //gets all coin symbols on binance\n  // useEffect(() => {\n  //   axios\n  //     // .get(\"https://api.binance.us/api/v3/ticker/price?symbol=LTCBTC\")\n  //     .get(\"https://api.binance.us/api/v3/exchangeInfo\")\n  //     .then((response) => {\n  //       const data = response.data;\n  //       console.log(data);\n  //     });\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"stock-price\",\n      className: greenOrRed,\n      children: ethereumPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"a39fdeMlKYPG15BrSXdbRPFvUsI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/App.js"],"names":["React","useEffect","useState","Chart","axios","createChart","App","ethereumPrice","setEthereumPrice","lastPrice","setLastPrice","greenOrRed","setGreenOrRed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,EAAlD;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,OAAD,CAA5C,CAHa,CAKb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,SAAS,IAAIF,aAAjB,EAAgC;AAC9BK,MAAAA,aAAa,CAAC,OAAD,CAAb;AACAF,MAAAA,YAAY,CAACH,aAAD,CAAZ;AACD,KAHD,MAGO;AACLK,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAF,MAAAA,YAAY,CAACH,aAAD,CAAZ;AACD;AACF,GARQ,EAQN,CAACA,aAAD,CARM,CAAT,CAfa,CAyBb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAI,MAAA,EAAE,EAAC,aAAP;AAAqB,MAAA,SAAS,EAAEI,UAAhC;AAAA,gBACGJ;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAjEQD,G;;KAAAA,G;AAmET,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Chart from \"./components/Chart\";\nimport axios from \"axios\";\nimport { createChart } from \"lightweight-charts\";\nimport \"./App.css\";\n\nfunction App() {\n  const [ethereumPrice, setEthereumPrice] = useState();\n  const [lastPrice, setLastPrice] = useState();\n  const [greenOrRed, setGreenOrRed] = useState(\"black\");\n\n  //stream price of this particular coin\n  // let ws = new WebSocket(\"wss://stream.binance.com:9443/ws/btceur@trade\");\n  // ws.onmessage = (event) => {\n  //   let stockObject = JSON.parse(event.data);\n  //   console.log(stockObject.p);\n  //   //convert string price to number(round to two decimal places)\n  //   const shortenedPrice = parseFloat(stockObject.p).toFixed(2);\n  //   setEthereumPrice(shortenedPrice);\n  // };\n\n  useEffect(() => {\n    if (lastPrice <= ethereumPrice) {\n      setGreenOrRed(\"green\");\n      setLastPrice(ethereumPrice);\n    } else {\n      setGreenOrRed(\"red\");\n      setLastPrice(ethereumPrice);\n    }\n  }, [ethereumPrice]);\n\n  //setting up multiple streams at once\n  // let ws = new WebSocket(\n  //   \"wss://stream.binance.com:9443/ws/btceur@trade/etheur@trade\"\n  // );\n  // ws.onmessage = (event) => {\n  //   let stockObject = JSON.parse(event.data);\n  //   console.log(stockObject);\n  //   //convert string price to number(round to two decimal places)\n  //   // const shortenedPrice = parseFloat(stockObject.p).toFixed(2);\n  //   // setEthereumPrice(shortenedPrice);\n  // };\n\n  //get data stream for all tickers)\n  // let ws = new WebSocket(\"wss://stream.binance.com:9443/ws/!ticker@arr\");\n  // ws.onmessage = (event) => {\n  //   let stockObject = JSON.parse(event.data);\n  //   console.log(stockObject);\n  //   //convert string price to number(round to two decimal places)\n  //   // const shortenedPrice = parseFloat(stockObject.p).toFixed(2);\n  //   // setEthereumPrice(shortenedPrice);\n  // };\n\n  //gets all coin symbols on binance\n  // useEffect(() => {\n  //   axios\n  //     // .get(\"https://api.binance.us/api/v3/ticker/price?symbol=LTCBTC\")\n  //     .get(\"https://api.binance.us/api/v3/exchangeInfo\")\n  //     .then((response) => {\n  //       const data = response.data;\n  //       console.log(data);\n  //     });\n  // }, []);\n  return (\n    <div className=\"App\">\n      <h1 id=\"stock-price\" className={greenOrRed}>\n        {ethereumPrice}\n      </h1>\n      <Chart />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}