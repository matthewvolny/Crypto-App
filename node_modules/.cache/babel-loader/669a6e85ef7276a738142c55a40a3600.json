{"ast":null,"code":"var _jsxFileName = \"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/NewsFeed.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewsFeed() {\n  //get ids for all coins listed and adds them to \"coinData\" (an array stored in state)\n  const getIdsAfterPageLoad = () => {\n    axios.get( //list all coins (tens of thousands)\n    \"https://api.coingecko.com/api/v3/coins/list\").then(response => {\n      const allCoinsIdArray = response.data; // console.log(allCoinsIdArray);\n      // console.log(coinData);\n      //!updating state by setting \"equal\", not by creating a copy and pushing\n\n      const coinDataCopy = coinData;\n\n      for (let i = 0; i < coinDataCopy.length; i++) {\n        for (let j = 0; j < allCoinsIdArray.length; j++) {\n          if (coinDataCopy[i].name === allCoinsIdArray[j].name) {\n            coinDataCopy[i].id = allCoinsIdArray[j].id;\n          }\n        }\n      } // console.log(coinDataCopy);\n      //!creates an infinite loop\n      //setCoinData(coinDataCopy);//!currently creates an infinite loop\n\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"NewsFeed\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n}\n_c = NewsFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsFeed\");","map":{"version":3,"sources":["/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/NewsFeed.js"],"names":["React","axios","NewsFeed","getIdsAfterPageLoad","get","then","response","allCoinsIdArray","data","coinDataCopy","coinData","i","length","j","name","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC;AACA,QAAMC,mBAAmB,GAAG,MAAM;AAChCF,IAAAA,KAAK,CACFG,GADH,EAEI;AACA,iDAHJ,EAKGC,IALH,CAKSC,QAAD,IAAc;AAClB,YAAMC,eAAe,GAAGD,QAAQ,CAACE,IAAjC,CADkB,CAElB;AACA;AACA;;AACA,YAAMC,YAAY,GAAGC,QAArB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,YAAY,CAACG,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,eAAe,CAACK,MAApC,EAA4CC,CAAC,EAA7C,EAAiD;AAC/C,cAAIJ,YAAY,CAACE,CAAD,CAAZ,CAAgBG,IAAhB,KAAyBP,eAAe,CAACM,CAAD,CAAf,CAAmBC,IAAhD,EAAsD;AACpDL,YAAAA,YAAY,CAACE,CAAD,CAAZ,CAAgBI,EAAhB,GAAqBR,eAAe,CAACM,CAAD,CAAf,CAAmBE,EAAxC;AACD;AACF;AACF,OAZiB,CAalB;AACA;AACA;;AACD,KArBH;AAsBD,GAvBD;;AAyBA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;KA5BuBb,Q","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nexport default function NewsFeed() {\n  //get ids for all coins listed and adds them to \"coinData\" (an array stored in state)\n  const getIdsAfterPageLoad = () => {\n    axios\n      .get(\n        //list all coins (tens of thousands)\n        \"https://api.coingecko.com/api/v3/coins/list\"\n      )\n      .then((response) => {\n        const allCoinsIdArray = response.data;\n        // console.log(allCoinsIdArray);\n        // console.log(coinData);\n        //!updating state by setting \"equal\", not by creating a copy and pushing\n        const coinDataCopy = coinData;\n        for (let i = 0; i < coinDataCopy.length; i++) {\n          for (let j = 0; j < allCoinsIdArray.length; j++) {\n            if (coinDataCopy[i].name === allCoinsIdArray[j].name) {\n              coinDataCopy[i].id = allCoinsIdArray[j].id;\n            }\n          }\n        }\n        // console.log(coinDataCopy);\n        //!creates an infinite loop\n        //setCoinData(coinDataCopy);//!currently creates an infinite loop\n      });\n  };\n\n  return <div>NewsFeed</div>;\n}\n"]},"metadata":{},"sourceType":"module"}