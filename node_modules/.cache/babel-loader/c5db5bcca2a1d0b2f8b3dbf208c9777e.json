{"ast":null,"code":"var _jsxFileName = \"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { createChart } from \"lightweight-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chart() {\n  _s();\n\n  const isMounted = useRef(false); //   const chartRef = React.useRef(null);\n\n  const array = [{\n    name: \"one\"\n  }, {\n    name: \"two\"\n  }, {\n    name: \"three\"\n  }];\n\n  const CoinList = () => array.map(coin => {\n    const randomNum = Math.floor(Math.random() * 10000);\n    const chart = createChart(document.querySelector(\".randomNum\"), {\n      width: 400,\n      height: 300\n    });\n    const lineSeries = chart.addLineSeries();\n    lineSeries.setData([{\n      time: \"2019-04-11\",\n      value: 80.01\n    }, {\n      time: \"2019-04-12\",\n      value: 96.63\n    }, {\n      time: \"2019-04-13\",\n      value: 76.64\n    }, {\n      time: \"2019-04-14\",\n      value: 81.89\n    }, {\n      time: \"2019-04-15\",\n      value: 74.43\n    }, {\n      time: \"2019-04-16\",\n      value: 80.01\n    }, {\n      time: \"2019-04-17\",\n      value: 96.63\n    }, {\n      time: \"2019-04-18\",\n      value: 76.64\n    }, {\n      time: \"2019-04-19\",\n      value: 81.89\n    }, {\n      time: \"2019-04-20\",\n      value: 74.43\n    }]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: coin.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: randomNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this);\n  });\n\n  useEffect(() => {\n    if (isMounted.current) {//   const chart = createChart(document.querySelector(\".chart\"), {\n      //     width: 400,\n      //     height: 300,\n      //   });\n      //   const lineSeries = chart.addLineSeries();\n      //   lineSeries.setData([\n      //     { time: \"2019-04-11\", value: 80.01 },\n      //     { time: \"2019-04-12\", value: 96.63 },\n      //     { time: \"2019-04-13\", value: 76.64 },\n      //     { time: \"2019-04-14\", value: 81.89 },\n      //     { time: \"2019-04-15\", value: 74.43 },\n      //     { time: \"2019-04-16\", value: 80.01 },\n      //     { time: \"2019-04-17\", value: 96.63 },\n      //     { time: \"2019-04-18\", value: 76.64 },\n      //     { time: \"2019-04-19\", value: 81.89 },\n      //     { time: \"2019-04-20\", value: 74.43 },\n      //   ]);\n    } else {\n      isMounted.current = true;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CoinList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"below chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chart, \"SkOohDVuXBk0DO6XXkvUZnCZ6So=\");\n\n_c = Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/Chart.js"],"names":["React","useEffect","useRef","createChart","Chart","isMounted","array","name","CoinList","map","coin","randomNum","Math","floor","random","chart","document","querySelector","width","height","lineSeries","addLineSeries","setData","time","value","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,oBAA5B;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAMC,SAAS,GAAGH,MAAM,CAAC,KAAD,CAAxB,CAD8B,CAE9B;;AAEA,QAAMI,KAAK,GAAG,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,EAAkB;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAAlB,EAAmC;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAAnC,CAAd;;AAEA,QAAMC,QAAQ,GAAG,MACfF,KAAK,CAACG,GAAN,CAAWC,IAAD,IAAU;AAClB,UAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CAAlB;AACA,UAAMC,KAAK,GAAGZ,WAAW,CAACa,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAD,EAAuC;AAC9DC,MAAAA,KAAK,EAAE,GADuD;AAE9DC,MAAAA,MAAM,EAAE;AAFsD,KAAvC,CAAzB;AAIA,UAAMC,UAAU,GAAGL,KAAK,CAACM,aAAN,EAAnB;AACAD,IAAAA,UAAU,CAACE,OAAX,CAAmB,CACjB;AAAEC,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KADiB,EAEjB;AAAED,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAFiB,EAGjB;AAAED,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAHiB,EAIjB;AAAED,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAJiB,EAKjB;AAAED,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KALiB,EAMjB;AAAED,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KANiB,EAOjB;AAAED,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAPiB,EAQjB;AAAED,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KARiB,EASjB;AAAED,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KATiB,EAUjB;AAAED,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAViB,CAAnB;AAYA,wBACE;AAAA,8BACE;AAAA,kBAAMd,IAAI,CAACH;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAEI;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAzBD,CADF;;AA4BAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,SAAS,CAACoB,OAAd,EAAuB,CACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAlBD,MAkBO;AACLpB,MAAAA,SAAS,CAACoB,OAAV,GAAoB,IAApB;AACD;AACF,GAtBQ,CAAT;AAwBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAlEuBrB,K;;KAAAA,K","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { createChart } from \"lightweight-charts\";\n\nexport default function Chart() {\n  const isMounted = useRef(false);\n  //   const chartRef = React.useRef(null);\n\n  const array = [{ name: \"one\" }, { name: \"two\" }, { name: \"three\" }];\n\n  const CoinList = () =>\n    array.map((coin) => {\n      const randomNum = Math.floor(Math.random() * 10000);\n      const chart = createChart(document.querySelector(\".randomNum\"), {\n        width: 400,\n        height: 300,\n      });\n      const lineSeries = chart.addLineSeries();\n      lineSeries.setData([\n        { time: \"2019-04-11\", value: 80.01 },\n        { time: \"2019-04-12\", value: 96.63 },\n        { time: \"2019-04-13\", value: 76.64 },\n        { time: \"2019-04-14\", value: 81.89 },\n        { time: \"2019-04-15\", value: 74.43 },\n        { time: \"2019-04-16\", value: 80.01 },\n        { time: \"2019-04-17\", value: 96.63 },\n        { time: \"2019-04-18\", value: 76.64 },\n        { time: \"2019-04-19\", value: 81.89 },\n        { time: \"2019-04-20\", value: 74.43 },\n      ]);\n      return (\n        <div>\n          <div>{coin.name}</div>\n          <div className={randomNum}></div>\n        </div>\n      );\n    });\n\n  useEffect(() => {\n    if (isMounted.current) {\n      //   const chart = createChart(document.querySelector(\".chart\"), {\n      //     width: 400,\n      //     height: 300,\n      //   });\n      //   const lineSeries = chart.addLineSeries();\n      //   lineSeries.setData([\n      //     { time: \"2019-04-11\", value: 80.01 },\n      //     { time: \"2019-04-12\", value: 96.63 },\n      //     { time: \"2019-04-13\", value: 76.64 },\n      //     { time: \"2019-04-14\", value: 81.89 },\n      //     { time: \"2019-04-15\", value: 74.43 },\n      //     { time: \"2019-04-16\", value: 80.01 },\n      //     { time: \"2019-04-17\", value: 96.63 },\n      //     { time: \"2019-04-18\", value: 76.64 },\n      //     { time: \"2019-04-19\", value: 81.89 },\n      //     { time: \"2019-04-20\", value: 74.43 },\n      //   ]);\n    } else {\n      isMounted.current = true;\n    }\n  });\n\n  return (\n    <div>\n      <div>Chart</div>\n      {/* <div className=\"chart\"></div> */}\n      <CoinList />\n      <div>below chart</div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}