{"ast":null,"code":"var _jsxFileName = \"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/Coinlist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useContext, useState } from \"react\";\nimport Context from \"../context/context\";\nimport { createChart } from \"lightweight-charts\";\nimport CoinRow from \"./CoinRow\";\nimport axios from \"axios\";\nimport \"./coinlist.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chart() {\n  _s();\n\n  const isMounted = useRef(false); // const [coinData, setCoinData] = useState([\n  //   {\n  //     name: \"Bitcoin\",\n  //     price: \"5000\",\n  //     percentChange: \"5\",\n  //     data: [\n  //       { time: \"2019-04-11\", value: 80.01 },\n  //       { time: \"2019-04-12\", value: 96.63 },\n  //       { time: \"2019-04-13\", value: 76.64 },\n  //       { time: \"2019-04-14\", value: 80.64 },\n  //       { time: \"2019-04-15\", value: 40.64 },\n  //       { time: \"2019-04-16\", value: 67.64 },\n  //       { time: \"2019-04-17\", value: 57.64 },\n  //     ],\n  //   },\n  // ]);\n\n  const [coinData, setCoinData] = useContext(Context); // const { coinData } = useContext(Context);\n  // const {\n  //   rank,\n  //   image,\n  //   name,\n  //   symbol,\n  //   price,\n  //   percentChange24hr,\n  //   percentChange7d,\n  //   marketCap,\n  //   volume24hr,\n  //   sparkline,\n  // } = coinData;\n\n  useEffect(() => {\n    axios.get( //get single coin price\n    // \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\"\n    //!key endpoint, lists all coins by market cap with change for various periods of time, also shows sparklines for 7 days (axis-less data for graph)\n    \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=true&price_change_percentage=24h%2C7d\" //!has converted prices for coins\n    //  'https://api.coingecko.com/api/v3/coins/bitcoin/tickers'\n    //!has description of the coin\n    //\"https://api.coingecko.com/api/v3/coins/bitcoin\"\n    //!historical price data (for max duration) for a particular coin\n    //\"https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=max\"\n    //list all coins (tens of thousands)\n    // \"https://api.coingecko.com/api/v3/coins/list\"\n    //get market cap for a smattering of coins (not sure if all)\n    // \"https://api.coingecko.com/api/v3/global\"\n    //have a search bar for individual coins (could show only if it in the list of coins I am displaying), has market cap rank and images links\n    // \"https://api.coingecko.com/api/v3/search?query=bitcoin\"\n    //list of supported and currencies (not exactly sure what this means)\n    // \"https://api.coingecko.com/api/v3/simple/supported_vs_currencies\"\n    ).then(response => {\n      const data = response.data;\n      console.log(data);\n      const coinDataArray = [];\n      data.forEach(coin => {\n        coinDataArray.push({\n          rank: coin.market_cap_rank,\n          image: coin.image,\n          name: coin.name,\n          symbol: coin.symbol,\n          price: coin.price,\n          percentChange24hr: coin.price_change_percentage_24h_in_currency,\n          percentChange7d: coin.price_change_percentage_7d_in_currency,\n          marketCap: coin.market_cap,\n          volume24hr: coin.total_volume,\n          sparkline: coin.sparkline_in_7d\n        });\n      });\n      setCoinData(coinDataArray);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coinlist-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Top Polkadot Ecosystem Tokens by Market Capitalization This page lists the most valuable Polkadot based coins and tokens. These projects are listed by market capitalization with the largest first and then descending in order.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coinlist-table-headers\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Rank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"24hr%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"7d%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Market Cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Volume(24hr)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Last 7 Days\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), coinData.map(coin => {\n      return /*#__PURE__*/_jsxDEV(CoinRow, {\n        coin: coin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chart, \"ZJAVptuX37rP8v6n7ss6CueZ6HE=\");\n\n_c = Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/Coinlist.js"],"names":["React","useEffect","useRef","useContext","useState","Context","createChart","CoinRow","axios","Chart","isMounted","coinData","setCoinData","get","then","response","data","console","log","coinDataArray","forEach","coin","push","rank","market_cap_rank","image","name","symbol","price","percentChange24hr","price_change_percentage_24h_in_currency","percentChange7d","price_change_percentage_7d_in_currency","marketCap","market_cap","volume24hr","total_volume","sparkline","sparkline_in_7d","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useContext, useState } from \"react\";\nimport Context from \"../context/context\";\nimport { createChart } from \"lightweight-charts\";\nimport CoinRow from \"./CoinRow\";\nimport axios from \"axios\";\nimport \"./coinlist.css\";\n\nexport default function Chart() {\n  const isMounted = useRef(false);\n  // const [coinData, setCoinData] = useState([\n  //   {\n  //     name: \"Bitcoin\",\n  //     price: \"5000\",\n  //     percentChange: \"5\",\n  //     data: [\n  //       { time: \"2019-04-11\", value: 80.01 },\n  //       { time: \"2019-04-12\", value: 96.63 },\n  //       { time: \"2019-04-13\", value: 76.64 },\n  //       { time: \"2019-04-14\", value: 80.64 },\n  //       { time: \"2019-04-15\", value: 40.64 },\n  //       { time: \"2019-04-16\", value: 67.64 },\n  //       { time: \"2019-04-17\", value: 57.64 },\n  //     ],\n  //   },\n  // ]);\n\n  const [coinData, setCoinData] = useContext(Context);\n  // const { coinData } = useContext(Context);\n\n  // const {\n  //   rank,\n  //   image,\n  //   name,\n  //   symbol,\n  //   price,\n  //   percentChange24hr,\n  //   percentChange7d,\n  //   marketCap,\n  //   volume24hr,\n  //   sparkline,\n  // } = coinData;\n\n  useEffect(() => {\n    axios\n      .get(\n        //get single coin price\n        // \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\"\n        //!key endpoint, lists all coins by market cap with change for various periods of time, also shows sparklines for 7 days (axis-less data for graph)\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=true&price_change_percentage=24h%2C7d\"\n        //!has converted prices for coins\n        //  'https://api.coingecko.com/api/v3/coins/bitcoin/tickers'\n        //!has description of the coin\n        //\"https://api.coingecko.com/api/v3/coins/bitcoin\"\n        //!historical price data (for max duration) for a particular coin\n        //\"https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=max\"\n        //list all coins (tens of thousands)\n        // \"https://api.coingecko.com/api/v3/coins/list\"\n        //get market cap for a smattering of coins (not sure if all)\n        // \"https://api.coingecko.com/api/v3/global\"\n        //have a search bar for individual coins (could show only if it in the list of coins I am displaying), has market cap rank and images links\n        // \"https://api.coingecko.com/api/v3/search?query=bitcoin\"\n        //list of supported and currencies (not exactly sure what this means)\n        // \"https://api.coingecko.com/api/v3/simple/supported_vs_currencies\"\n      )\n      .then((response) => {\n        const data = response.data;\n        console.log(data);\n        const coinDataArray = [];\n        data.forEach((coin) => {\n          coinDataArray.push({\n            rank: coin.market_cap_rank,\n            image: coin.image,\n            name: coin.name,\n            symbol: coin.symbol,\n            price: coin.price,\n            percentChange24hr: coin.price_change_percentage_24h_in_currency,\n            percentChange7d: coin.price_change_percentage_7d_in_currency,\n            marketCap: coin.market_cap,\n            volume24hr: coin.total_volume,\n            sparkline: coin.sparkline_in_7d,\n          });\n        });\n        setCoinData(coinDataArray);\n      });\n  }, []);\n\n  return (\n    <div className=\"coinlist-container\">\n      <div>\n        Top Polkadot Ecosystem Tokens by Market Capitalization This page lists\n        the most valuable Polkadot based coins and tokens. These projects are\n        listed by market capitalization with the largest first and then\n        descending in order.\n      </div>\n      <div className=\"coinlist-table-headers\">\n        <div>Rank</div>\n        <div>Name</div>\n        <div>Price</div>\n        <div>24hr%</div>\n        <div>7d%</div>\n        <div>Market Cap</div>\n        <div>Volume(24hr)</div>\n        <div>Last 7 Days</div>\n      </div>\n      {coinData.map((coin) => {\n        return <CoinRow coin={coin} />;\n      })}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}