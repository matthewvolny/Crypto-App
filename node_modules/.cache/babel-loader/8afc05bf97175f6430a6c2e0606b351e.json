{"ast":null,"code":"var _jsxFileName = \"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/Coinlist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { createChart } from \"lightweight-charts\";\nimport CoinRow from \"./CoinRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chart() {\n  _s();\n\n  const isMounted = useRef(false); // const MakeChart = () => {\n  //   const chart = createChart(document.querySelector(\".randomNum\"), {\n  //     width: 400,\n  //     height: 300,\n  //   });\n  //   const lineSeries = chart.addLineSeries();\n  //   return lineSeries.setData([\n  //     { time: \"2019-04-11\", value: 80.01 },\n  //     { time: \"2019-04-12\", value: 96.63 },\n  //     { time: \"2019-04-13\", value: 76.64 },\n  //     { time: \"2019-04-14\", value: 81.89 },\n  //     { time: \"2019-04-15\", value: 74.43 },\n  //     { time: \"2019-04-16\", value: 80.01 },\n  //     { time: \"2019-04-17\", value: 96.63 },\n  //     { time: \"2019-04-18\", value: 76.64 },\n  //     { time: \"2019-04-19\", value: 81.89 },\n  //     { time: \"2019-04-20\", value: 74.43 },\n  //   ]);\n  // };\n  // const makeChart = () => {\n  //   const chart = createChart(document.querySelector(\".chart\"), {\n  //     width: 400,\n  //     height: 300,\n  //   });\n  //   const lineSeries = chart.addLineSeries();\n  //   return lineSeries.setData([\n  //     { time: \"2019-04-11\", value: 80.01 },\n  //     { time: \"2019-04-12\", value: 96.63 },\n  //     { time: \"2019-04-13\", value: 76.64 },\n  //   ]);\n  // };\n  // const array = [{ name: \"one\" }, { name: \"two\" }, { name: \"three\" }];\n  // useEffect(() => {\n  //   if (isMounted.current) {\n  //     const chart = createChart(document.querySelector(\".chart\"), {\n  //       width: 400,\n  //       height: 300,\n  //     });\n  //     const lineSeries = chart.addLineSeries();\n  //     lineSeries.setData([\n  //       { time: \"2019-04-11\", value: 80.01 },\n  //       { time: \"2019-04-12\", value: 96.63 },\n  //       { time: \"2019-04-13\", value: 76.64 },\n  //     ]);\n  //   } else {\n  //     isMounted.current = true;\n  //   }\n  // });\n  //const listOfCoins = document.querySelectorAll(\".coin\");\n\n  const data = [{\n    time: \"2019-04-11\",\n    value: 80.01\n  }, {\n    time: \"2019-04-12\",\n    value: 96.63\n  }, {\n    time: \"2019-04-13\",\n    value: 76.64\n  }]; // const coinRows = state.map((coin) => {\n  //   const randomNum = Math.floor(Math.random() * 10000);\n  //   return (\n  //     <div key={randomNum}>\n  //       <CoinRow name=\"bitcoin\" price=\"1000\" percentChange=\"5\" data={data} />;\n  //     </div>\n  //   );\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Coins Header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), coinRows, state.map(coin => {\n      /*#__PURE__*/\n      _jsxDEV(CoinRow, {\n        name: \"bitcoin\",\n        price: \"1000\",\n        percentChange: \"5\",\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chart, \"IB4BiEhGAclkHMWMK3xjdimNcWs=\");\n\n_c = Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/Coinlist.js"],"names":["React","useEffect","useRef","createChart","CoinRow","Chart","isMounted","data","time","value","coinRows","state","map","coin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAMC,SAAS,GAAGJ,MAAM,CAAC,KAAD,CAAxB,CAD8B,CAG9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,QAAMK,IAAI,GAAG,CACX;AAAEC,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GADW,EAEX;AAAED,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GAFW,EAGX;AAAED,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GAHW,CAAb,CAxD8B,CA8D9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,QAFH,EAGGC,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;AACnB;AAAA,cAAC,OAAD;AAAS,QAAA,IAAI,EAAC,SAAd;AAAwB,QAAA,KAAK,EAAC,MAA9B;AAAqC,QAAA,aAAa,EAAC,GAAnD;AAAuD,QAAA,IAAI,EAAEN;AAA7D;AAAA;AAAA;AAAA;AAAA;AACD,KAFA,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAhFuBF,K;;KAAAA,K","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { createChart } from \"lightweight-charts\";\nimport CoinRow from \"./CoinRow\";\n\nexport default function Chart() {\n  const isMounted = useRef(false);\n\n  // const MakeChart = () => {\n  //   const chart = createChart(document.querySelector(\".randomNum\"), {\n  //     width: 400,\n  //     height: 300,\n  //   });\n  //   const lineSeries = chart.addLineSeries();\n  //   return lineSeries.setData([\n  //     { time: \"2019-04-11\", value: 80.01 },\n  //     { time: \"2019-04-12\", value: 96.63 },\n  //     { time: \"2019-04-13\", value: 76.64 },\n  //     { time: \"2019-04-14\", value: 81.89 },\n  //     { time: \"2019-04-15\", value: 74.43 },\n  //     { time: \"2019-04-16\", value: 80.01 },\n  //     { time: \"2019-04-17\", value: 96.63 },\n  //     { time: \"2019-04-18\", value: 76.64 },\n  //     { time: \"2019-04-19\", value: 81.89 },\n  //     { time: \"2019-04-20\", value: 74.43 },\n  //   ]);\n  // };\n\n  // const makeChart = () => {\n  //   const chart = createChart(document.querySelector(\".chart\"), {\n  //     width: 400,\n  //     height: 300,\n  //   });\n  //   const lineSeries = chart.addLineSeries();\n  //   return lineSeries.setData([\n  //     { time: \"2019-04-11\", value: 80.01 },\n  //     { time: \"2019-04-12\", value: 96.63 },\n  //     { time: \"2019-04-13\", value: 76.64 },\n  //   ]);\n  // };\n  // const array = [{ name: \"one\" }, { name: \"two\" }, { name: \"three\" }];\n\n  // useEffect(() => {\n  //   if (isMounted.current) {\n  //     const chart = createChart(document.querySelector(\".chart\"), {\n  //       width: 400,\n  //       height: 300,\n  //     });\n  //     const lineSeries = chart.addLineSeries();\n  //     lineSeries.setData([\n  //       { time: \"2019-04-11\", value: 80.01 },\n  //       { time: \"2019-04-12\", value: 96.63 },\n  //       { time: \"2019-04-13\", value: 76.64 },\n  //     ]);\n  //   } else {\n  //     isMounted.current = true;\n  //   }\n  // });\n\n  //const listOfCoins = document.querySelectorAll(\".coin\");\n\n  const data = [\n    { time: \"2019-04-11\", value: 80.01 },\n    { time: \"2019-04-12\", value: 96.63 },\n    { time: \"2019-04-13\", value: 76.64 },\n  ];\n\n  // const coinRows = state.map((coin) => {\n  //   const randomNum = Math.floor(Math.random() * 10000);\n  //   return (\n  //     <div key={randomNum}>\n  //       <CoinRow name=\"bitcoin\" price=\"1000\" percentChange=\"5\" data={data} />;\n  //     </div>\n  //   );\n  // });\n\n  return (\n    <div>\n      <div>Coins Header</div>\n      {coinRows}\n      {state.map((coin) => {\n        <CoinRow name=\"bitcoin\" price=\"1000\" percentChange=\"5\" data={data} />;\n      })}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}