{"ast":null,"code":"var _jsxFileName = \"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/Coinlist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useContext, useState } from \"react\"; //import Context from \"../context/context\";\n\nimport { createChart } from \"lightweight-charts\";\nimport CoinRow from \"./CoinRow\";\nimport \"./coinlist.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Coinlist(_ref) {\n  _s();\n\n  let {\n    coinData,\n    setCoinData\n  } = _ref;\n  // const { coinData } = useContext(Context);\n  const [searchInput, setSearchInput] = useState(); //sort by name\n\n  const sortByName = key => {}; //sort coin list using buttons\n\n\n  const sortCoinList = key => {\n    // console.log(coinData);\n    const coinDataCopy = [...coinData];\n\n    if (key === \"name\") {\n      if (coinData[0][key] <= coinData[1][key]) {\n        console.log(\"sort by name-desc\");\n        const sortedCoinsByNameDesc = coinDataCopy.sort((a, b) => {\n          let name1 = a[key].toLowerCase();\n          let name2 = b[key].toLowerCase();\n\n          if (name1 > name2) {\n            return -1;\n          }\n\n          if (name1 > name2) {\n            return 1;\n          }\n\n          return 0;\n        }); // console.log(sortedCoinsByNameDesc);\n\n        setCoinData(sortedCoinsByNameDesc);\n      } else {\n        console.log(\"sort by name-asc\");\n        const sortedCoinsByNameAsc = coinDataCopy.sort((a, b) => {\n          let name1 = a[key].toLowerCase();\n          let name2 = b[key].toLowerCase();\n\n          if (name1 < name2) {\n            return -1;\n          }\n\n          if (name1 > name2) {\n            return 1;\n          }\n\n          return 0;\n        }); // console.log(sortedCoinsByNameAsc);\n\n        setCoinData(sortedCoinsByNameAsc);\n      }\n    } else {\n      if (parseFloat(coinData[0][key]) <= parseFloat(coinData[1][key])) {\n        const sortedCoinsDesc = coinDataCopy.sort((a, b) => {\n          return b[key] - a[key];\n        }); // console.log(`sorted by ${key} - descending`);\n        // console.log(sortedCoinsDesc);\n\n        setCoinData(sortedCoinsDesc);\n      } else {\n        const sortedCoinsAsc = coinDataCopy.sort((a, b) => {\n          return a[key] - b[key];\n        }); // console.log(`sorted by ${key} - ascending`);\n        // console.log(sortedCoinsAsc);\n\n        setCoinData(sortedCoinsAsc);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coinlist-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sorting-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Rank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Volume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Trending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"USD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coinlist-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => sortCoinList(\"rank\"),\n          children: \"Rank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => sortCoinList(\"name\"),\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => sortCoinList(\"price\"),\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => sortCoinList(\"percentChange24hr\"),\n          children: \"24hr%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => sortCoinList(\"percentChange7d\"),\n          children: \"7d%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Last 7 Days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coinlist\",\n      children: coinData === null || coinData === void 0 ? void 0 : coinData.map((coin, index) => {\n        if (index < 50) {\n          return /*#__PURE__*/_jsxDEV(CoinRow, {\n            coin: coin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 20\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Coinlist, \"YWIWaQYVRuMFQFQD3iugRjEky2o=\");\n\n_c = Coinlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Coinlist\");","map":{"version":3,"sources":["/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/Coinlist.js"],"names":["React","useEffect","useRef","useContext","useState","createChart","CoinRow","Coinlist","coinData","setCoinData","searchInput","setSearchInput","sortByName","key","sortCoinList","coinDataCopy","console","log","sortedCoinsByNameDesc","sort","a","b","name1","toLowerCase","name2","sortedCoinsByNameAsc","parseFloat","sortedCoinsDesc","sortedCoinsAsc","map","coin","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,UAAnC,EAA+CC,QAA/C,QAA+D,OAA/D,C,CACA;;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,gBAAP;;;AAEA,eAAe,SAASC,QAAT,OAA6C;AAAA;;AAAA,MAA3B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA2B;AAC1D;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,EAA9C,CAF0D,CAI1D;;AACA,QAAMQ,UAAU,GAAIC,GAAD,IAAS,CAAE,CAA9B,CAL0D,CAO1D;;;AACA,QAAMC,YAAY,GAAID,GAAD,IAAS;AAC5B;AACA,UAAME,YAAY,GAAG,CAAC,GAAGP,QAAJ,CAArB;;AACA,QAAIK,GAAG,KAAK,MAAZ,EAAoB;AAClB,UAAIL,QAAQ,CAAC,CAAD,CAAR,CAAYK,GAAZ,KAAoBL,QAAQ,CAAC,CAAD,CAAR,CAAYK,GAAZ,CAAxB,EAA0C;AACxCG,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,cAAMC,qBAAqB,GAAGH,YAAY,CAACI,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxD,cAAIC,KAAK,GAAGF,CAAC,CAACP,GAAD,CAAD,CAAOU,WAAP,EAAZ;AACA,cAAIC,KAAK,GAAGH,CAAC,CAACR,GAAD,CAAD,CAAOU,WAAP,EAAZ;;AACA,cAAID,KAAK,GAAGE,KAAZ,EAAmB;AACjB,mBAAO,CAAC,CAAR;AACD;;AACD,cAAIF,KAAK,GAAGE,KAAZ,EAAmB;AACjB,mBAAO,CAAP;AACD;;AACD,iBAAO,CAAP;AACD,SAV6B,CAA9B,CAFwC,CAaxC;;AACAf,QAAAA,WAAW,CAACS,qBAAD,CAAX;AACD,OAfD,MAeO;AACLF,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,cAAMQ,oBAAoB,GAAGV,YAAY,CAACI,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACvD,cAAIC,KAAK,GAAGF,CAAC,CAACP,GAAD,CAAD,CAAOU,WAAP,EAAZ;AACA,cAAIC,KAAK,GAAGH,CAAC,CAACR,GAAD,CAAD,CAAOU,WAAP,EAAZ;;AACA,cAAID,KAAK,GAAGE,KAAZ,EAAmB;AACjB,mBAAO,CAAC,CAAR;AACD;;AACD,cAAIF,KAAK,GAAGE,KAAZ,EAAmB;AACjB,mBAAO,CAAP;AACD;;AACD,iBAAO,CAAP;AACD,SAV4B,CAA7B,CAFK,CAaL;;AACAf,QAAAA,WAAW,CAACgB,oBAAD,CAAX;AACD;AACF,KAhCD,MAgCO;AACL,UAAIC,UAAU,CAAClB,QAAQ,CAAC,CAAD,CAAR,CAAYK,GAAZ,CAAD,CAAV,IAAgCa,UAAU,CAAClB,QAAQ,CAAC,CAAD,CAAR,CAAYK,GAAZ,CAAD,CAA9C,EAAkE;AAChE,cAAMc,eAAe,GAAGZ,YAAY,CAACI,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClD,iBAAOA,CAAC,CAACR,GAAD,CAAD,GAASO,CAAC,CAACP,GAAD,CAAjB;AACD,SAFuB,CAAxB,CADgE,CAIhE;AACA;;AACAJ,QAAAA,WAAW,CAACkB,eAAD,CAAX;AACD,OAPD,MAOO;AACL,cAAMC,cAAc,GAAGb,YAAY,CAACI,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACjD,iBAAOD,CAAC,CAACP,GAAD,CAAD,GAASQ,CAAC,CAACR,GAAD,CAAjB;AACD,SAFsB,CAAvB,CADK,CAIL;AACA;;AACAJ,QAAAA,WAAW,CAACmB,cAAD,CAAX;AACD;AACF;AACF,GApDD;;AAsDA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BAEE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AAAK,UAAA,OAAO,EAAE,MAAMd,YAAY,CAAC,MAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,MAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,OAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAK,UAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,mBAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAK,UAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,iBAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAmBE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACGN,QADH,aACGA,QADH,uBACGA,QAAQ,CAAEqB,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC9B,YAAIA,KAAK,GAAG,EAAZ,EAAgB;AACd,8BAAO,QAAC,OAAD;AAAS,YAAA,IAAI,EAAED;AAAf;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;AACF,OAJA;AADH;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA,kBADF;AA6BD;;GA3FuBvB,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useRef, useContext, useState } from \"react\";\n//import Context from \"../context/context\";\nimport { createChart } from \"lightweight-charts\";\nimport CoinRow from \"./CoinRow\";\n\nimport \"./coinlist.css\";\n\nexport default function Coinlist({ coinData, setCoinData }) {\n  // const { coinData } = useContext(Context);\n  const [searchInput, setSearchInput] = useState();\n\n  //sort by name\n  const sortByName = (key) => {};\n\n  //sort coin list using buttons\n  const sortCoinList = (key) => {\n    // console.log(coinData);\n    const coinDataCopy = [...coinData];\n    if (key === \"name\") {\n      if (coinData[0][key] <= coinData[1][key]) {\n        console.log(\"sort by name-desc\");\n        const sortedCoinsByNameDesc = coinDataCopy.sort((a, b) => {\n          let name1 = a[key].toLowerCase();\n          let name2 = b[key].toLowerCase();\n          if (name1 > name2) {\n            return -1;\n          }\n          if (name1 > name2) {\n            return 1;\n          }\n          return 0;\n        });\n        // console.log(sortedCoinsByNameDesc);\n        setCoinData(sortedCoinsByNameDesc);\n      } else {\n        console.log(\"sort by name-asc\");\n        const sortedCoinsByNameAsc = coinDataCopy.sort((a, b) => {\n          let name1 = a[key].toLowerCase();\n          let name2 = b[key].toLowerCase();\n          if (name1 < name2) {\n            return -1;\n          }\n          if (name1 > name2) {\n            return 1;\n          }\n          return 0;\n        });\n        // console.log(sortedCoinsByNameAsc);\n        setCoinData(sortedCoinsByNameAsc);\n      }\n    } else {\n      if (parseFloat(coinData[0][key]) <= parseFloat(coinData[1][key])) {\n        const sortedCoinsDesc = coinDataCopy.sort((a, b) => {\n          return b[key] - a[key];\n        });\n        // console.log(`sorted by ${key} - descending`);\n        // console.log(sortedCoinsDesc);\n        setCoinData(sortedCoinsDesc);\n      } else {\n        const sortedCoinsAsc = coinDataCopy.sort((a, b) => {\n          return a[key] - b[key];\n        });\n        // console.log(`sorted by ${key} - ascending`);\n        // console.log(sortedCoinsAsc);\n        setCoinData(sortedCoinsAsc);\n      }\n    }\n  };\n\n  return (\n    <>\n      <div className=\"coinlist-controls\">\n        {/* sorting buttons */}\n        <div className=\"sorting-buttons\">\n          <div>Rank</div>\n          <div>Volume</div>\n          <div>Trending</div>\n          <div>USD</div>\n        </div>\n        {/* table headers */}\n        <div className=\"coinlist-header\">\n          <div onClick={() => sortCoinList(\"rank\")}>Rank</div>\n          <div onClick={() => sortCoinList(\"name\")}>Name</div>\n          <div onClick={() => sortCoinList(\"price\")}>Price</div>\n          <div onClick={() => sortCoinList(\"percentChange24hr\")}>24hr%</div>\n          <div onClick={() => sortCoinList(\"percentChange7d\")}>7d%</div>\n          <div>Last 7 Days</div>\n        </div>\n      </div>\n      <div className=\"coinlist\">\n        {coinData?.map((coin, index) => {\n          if (index < 50) {\n            return <CoinRow coin={coin} />;\n          }\n        })}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}