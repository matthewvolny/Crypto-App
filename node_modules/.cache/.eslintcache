[{"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/index.js":"1","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/App.js":"2","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/reportWebVitals.js":"3","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/Coinlist.js":"4","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/CoinRow.js":"5","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/context/context.js":"6","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/Chart.js":"7","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/SearchBar.js":"8","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/index.js":"9","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/App.js":"10","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/reportWebVitals.js":"11","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/Coinlist.js":"12","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/Chart.js":"13","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/context/context.js":"14","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/CoinRow.js":"15"},{"size":500,"mtime":1649433274077,"results":"16","hashOfConfig":"17"},{"size":7156,"mtime":1649791252271,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1649433274077,"results":"19","hashOfConfig":"17"},{"size":1498,"mtime":1649772784244,"results":"20","hashOfConfig":"17"},{"size":1979,"mtime":1649789719211,"results":"21","hashOfConfig":"17"},{"size":90,"mtime":1649629322579,"results":"22","hashOfConfig":"17"},{"size":6879,"mtime":1649796516438,"results":"23","hashOfConfig":"17"},{"size":557,"mtime":1649769183556,"results":"24","hashOfConfig":"17"},{"size":500,"mtime":1649433274077,"results":"25","hashOfConfig":"26"},{"size":7156,"mtime":1649791252271,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1649433274077,"results":"28","hashOfConfig":"26"},{"size":1498,"mtime":1649772784244,"results":"29","hashOfConfig":"26"},{"size":11003,"mtime":1649910011871,"results":"30","hashOfConfig":"26"},{"size":90,"mtime":1649629322579,"results":"31","hashOfConfig":"26"},{"size":1979,"mtime":1649789719211,"results":"32","hashOfConfig":"26"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1pkojmz",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"5w18n",{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"65"},"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/index.js",[],[],["85","86"],"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/App.js",["87","88","89","90","91"],[],"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/reportWebVitals.js",[],[],"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/Coinlist.js",["92","93","94","95"],[],"import React, { useEffect, useRef, useContext, useState } from \"react\";\n//import Context from \"../context/context\";\nimport { createChart } from \"lightweight-charts\";\nimport CoinRow from \"./CoinRow\";\n\nimport \"./coinlist.css\";\n\nexport default function Coinlist(props) {\n  // const { coinData } = useContext(Context);\n  const [searchInput, setSearchInput] = useState();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"submitted\");\n  };\n\n  return (\n    <>\n      <div className=\"coinlist-controls\">\n        {/* form */}\n        <form className=\"search-form\" onSubmit={handleSubmit}>\n          <input\n            onChange={(e) => {\n              setSearchInput(e.target.value);\n            }}\n            value={searchInput}\n            type=\"text\"\n            placeholder=\"Search cryptocurrency\"\n          />\n          <button>Submit</button>\n        </form>\n        {/* sorting buttons */}\n        <div className=\"sorting-buttons\">\n          <div>Rank</div>\n          <div>Volume</div>\n          <div>Trending</div>\n          <div>USD</div>\n        </div>\n        {/* table headers */}\n        <div className=\"coinlist-header\">\n          <div>Rank</div>\n          <div>Name</div>\n          <div>Price</div>\n          <div>24hr%</div>\n          <div>7d%</div>\n          <div>Last 7 Days</div>\n        </div>\n      </div>\n      <div className=\"coinlist\">\n        {props.coinData?.map((coin) => {\n          return <CoinRow coin={coin} />;\n        })}\n      </div>\n    </>\n  );\n}\n","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/CoinRow.js",["96","97","98","99","100","101"],[],"import React, { useState, useRef, useContext, useEffect } from \"react\";\nimport Context from \"../context/context\";\n// import { createChart } from \"lightweight-charts\";\nimport { NavLink } from \"react-router-dom\";\nimport { Sparklines, SparklinesLine } from \"react-sparklines\";\nimport axios from \"axios\";\nimport \"./coinrow.css\";\n\nexport default function CoinRow(props) {\n  const [sparklineColor, setSparklineColor] = useState();\n  const { setSelectedCoinData, setCoinChartData } = useContext(Context);\n  //const isMounted = useRef(false);\n  // console.log(props);\n  // const { name, price, percentChange, data } = props.coin;\n  const {\n    rank,\n    image,\n    name,\n    symbol,\n    price,\n    percentChange24hr,\n    percentChange7d,\n    marketCap,\n    volume24hr,\n    sparkline,\n  } = props.coin;\n\n  //colors sparkline chart based on 7d % change\n  useEffect(() => {\n    if (percentChange7d > 0) {\n      setSparklineColor(\"green\");\n    } else {\n      setSparklineColor(\"red\");\n    }\n  });\n\n  return (\n    <div className=\"coin-row\">\n      <div>{rank}</div>\n      <div>\n        <img src={image} alt=\"crypto-icon\" className=\"icon\"></img>\n      </div>\n      <NavLink\n        to={`/currencies/${name}`}\n        key={rank}\n        onClick={() => {\n          setSelectedCoinData(props.coin);\n          // retrieveDetailedChartData(name);\n        }}\n      >\n        {name}\n      </NavLink>\n      <div>{symbol}</div>\n      <div>${price}</div>\n      <div className=\"percent-change\">{percentChange24hr}</div>\n      <div className=\"percent-change\">{percentChange7d}</div>\n      {/* <div>${marketCap}</div>\n      <div>${volume24hr}</div> */}\n      {/* <div className=\"chart\"></div> */}\n      <Sparklines\n        // className=\"sparkline-container\"\n        data={sparkline}\n        // width={100}\n        // height={20}\n        // margin={5}\n      >\n        <SparklinesLine\n          style={{ strokeWidth: 3, stroke: sparklineColor, fill: \"none\" }}\n        />\n      </Sparklines>\n    </div>\n  );\n}\n","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/context/context.js",[],[],"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/Chart.js",["102","103"],[],"import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport Context from \"../context/context\";\nimport { createChart } from \"lightweight-charts\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport \"./chart.css\";\nmoment().format();\n\nexport default function Chart() {\n  // const { coinChartData } = useContext(Context);\n  const { selectedCoinData } = useContext(Context);\n  const [coinChartData, setCoinChartData] = useState();\n  const isMounted = useRef(false);\n\n  const {\n    rank,\n    image,\n    name,\n    symbol,\n    price,\n    percentChange24hr,\n    percentChange7d,\n    marketCap,\n    volume24hr,\n  } = selectedCoinData;\n  const coinName = selectedCoinData.name;\n\n  const retrieveChartData = (duration, momentFormat) => {\n    const coinLowercase = coinName.charAt(0).toLowerCase() + coinName.slice(1);\n    axios\n      .get(\n        //get single coin price\n        // \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\"\n        //!has converted prices for coins\n        //  'https://api.coingecko.com/api/v3/coins/bitcoin/tickers'\n        //!has description of the coin\n        //\"https://api.coingecko.com/api/v3/coins/bitcoin\"\n        //!historical price data (for max duration) for a particular coin\n        `https://api.coingecko.com/api/v3/coins/${coinLowercase}/market_chart?vs_currency=usd&days=${duration}`\n        //list all coins (tens of thousands)\n        // \"https://api.coingecko.com/api/v3/coins/list\"\n        //get market cap for a smattering of coins (not sure if all)\n        // \"https://api.coingecko.com/api/v3/global\"\n        //have a search bar for individual coins (could show only if it in the list of coins I am displaying), has market cap rank and images links\n        // \"https://api.coingecko.com/api/v3/search?query=bitcoin\"\n        //list of supported and currencies (not exactly sure what this means)\n        // \"https://api.coingecko.com/api/v3/simple/supported_vs_currencies\"\n      )\n      .then((response) => {\n        const data = response.data;\n        // console.log(data);\n        const priceData = data.prices;\n        const priceDataArray = [];\n        priceData.forEach((priceArray) => {\n          priceDataArray.push({\n            time: Math.floor(priceArray[0] / 1000),\n            // time: moment(priceArray[0]).format(momentFormat),\n            value: priceArray[1],\n          });\n        });\n        const volumeData = data.total_volumes;\n        const volumeDataArray = [];\n        volumeData.forEach((volumeArray) => {\n          volumeDataArray.push({\n            time: Math.floor(volumeArray[0] / 1000),\n            // time: moment(volumeArray[0]).format(momentFormat),\n            value: volumeArray[1],\n          });\n        });\n        setCoinChartData({ prices: priceDataArray, volume: volumeDataArray });\n      });\n  };\n\n  useEffect(() => {\n    retrieveChartData(\"1\" /*, \"MM/DD/YYYY\"*/);\n  }, []);\n\n  // useEffect(() => {\n  //   let chartElement = document.querySelector(\".tv-lightweight-charts\");\n  //   if (chartElement) {\n  //     console.log(\"here\");\n  //     chartElement.setAttribute(\"id\", \"chartElement\");\n  //   }\n  // });\n\n  useEffect(() => {\n    if (isMounted.current) {\n      const chart = createChart(document.querySelector(\".chart\"), {\n        width: 500,\n        height: 400,\n        rightPriceScale: {\n          visible: true,\n        },\n        grid: {\n          vertLines: {\n            visible: true,\n          },\n          horzLines: {\n            visible: true,\n          },\n        },\n        crosshair: {\n          vertLine: {\n            visible: true,\n          },\n          horzLine: {\n            visible: true,\n          },\n        },\n        layout: {\n          backgroundColor: \"white\",\n        },\n        // timeScale: {\n        //   visible: true,\n        //   /*timeVisible: true secondsVisible: true,*/\n        // },\n\n        timeScale: {\n          timeVisible: true,\n          secondsVisible: false,\n        },\n        // borderColor: \"green\",\n        // timeVisible: false,\n        // priceScaleMode: percentChange,\n      });\n      //fits timescale to the content\n      // chart.timeScale().fitContent();\n\n      const lineSeries = chart\n        .addLineSeries\n        //used to set y-axis scale (not quite sure exactly how it works)\n        //   {\n        //   autoscaleInfoProvider: () => ({\n        //     priceRange: {\n        //       minValue: 0,\n        //       maxValue: 100,\n        //     },\n        //   }),\n        // }\n        ();\n      lineSeries.applyOptions({\n        color: \"red\",\n        lineWidth: 4,\n        //crosshair dot\n        crosshairMarkerVisible: true,\n        //both of these are similar\n        lastValueVisible: true,\n        priceLineVisible: true,\n        //can make the series disapper (labels remain)\n        visible: true,\n        //\n      });\n      // const customFormatter = (time, tickMarkType, locale) => {\n      //   // tickMarkType: \"year\";\n      // };\n      lineSeries.setData(coinChartData.prices);\n      //   window.addEventListener(\"resize\", handleResize);\n\n      const volumeSeries = chart.addHistogramSeries({\n        color: \"#26a69a\",\n        priceFormat: {\n          type: \"volume\",\n        },\n        priceScaleId: \"\",\n        scaleMargins: {\n          top: 0.8,\n          bottom: 0,\n        },\n      });\n      //volume series\n      volumeSeries.setData(coinChartData.volume);\n    } else {\n      isMounted.current = true;\n    }\n  }, [coinChartData]);\n\n  return (\n    <>\n      <div className=\"coin-details-flex\">\n        <img className=\"icon\" src={image} alt=\"icon\" />\n        <div>{name}</div>\n        <div>{symbol}</div>\n        <div>{rank}</div>\n        <div>${price}</div>\n        <div>{percentChange24hr}%</div>\n        <div>{marketCap}</div>\n        <div>{volume24hr}</div>\n      </div>\n      <div className=\"chart-with-controls-container\">\n        <div className=\"chart-controls\">\n          <div\n            value=\"day\"\n            onClick={() => {\n              retrieveChartData(\"1\", \"HH:mm:ss\");\n            }}\n          >\n            Day\n          </div>\n          <div\n            value=\"week\"\n            onClick={() => {\n              retrieveChartData(\"7\", \"MM/DD/YYYY\");\n            }}\n          >\n            Week\n          </div>\n          <div\n            value=\"month\"\n            onClick={() => {\n              retrieveChartData(\"30\", \"MM/DD/YYYY\");\n            }}\n          >\n            Month\n          </div>\n          <div\n            value=\"year\"\n            onClick={() => {\n              retrieveChartData(\"365\", \"MM/DD/YYYY\");\n            }}\n          >\n            Year\n          </div>\n          <div\n            value=\"all\"\n            onClick={() => {\n              retrieveChartData(\"max\", \"MM/DD/YYYY\");\n            }}\n          >\n            All\n          </div>\n        </div>\n        <div className=\"chart\"></div>\n      </div>\n    </>\n  );\n}\n","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/SearchBar.js",[],[],["104","105"],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/index.js",[],[],["106","107"],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/App.js",["108","109","110","111","112"],[],"import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Context from \"./context/context\";\nimport Coinlist from \"./components/Coinlist\";\nimport Chart from \"./components/Chart\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const [ethereumPrice, setEthereumPrice] = useState();\n  const [lastPrice, setLastPrice] = useState();\n  const [greenOrRed, setGreenOrRed] = useState(\"black\");\n  const [coinData, setCoinData] = useState();\n  const [selectedCoinData, setSelectedCoinData] = useState();\n  const [coinChartData, setCoinChartData] = useState();\n\n  useEffect(() => {\n    if (lastPrice <= ethereumPrice) {\n      setGreenOrRed(\"green\");\n      setLastPrice(ethereumPrice);\n    } else {\n      setGreenOrRed(\"red\");\n      setLastPrice(ethereumPrice);\n    }\n  }, [ethereumPrice]);\n\n  //stream price of this particular coin\n  // let ws = new WebSocket(\"wss://stream.binance.com:9443/ws/btceur@trade\");\n  // ws.onmessage = (event) => {\n  //   let stockObject = JSON.parse(event.data);\n  //   console.log(stockObject.p);\n  //   //convert string price to number(round to two decimal places)\n  //   const shortenedPrice = parseFloat(stockObject.p).toFixed(2);\n  //   setEthereumPrice(shortenedPrice);\n  // };\n\n  //setting up multiple streams at once\n  // let ws = new WebSocket(\n  //   \"wss://stream.binance.com:9443/ws/btceur@trade/etheur@trade\"\n  // );\n  // ws.onmessage = (event) => {\n  //   let stockObject = JSON.parse(event.data);\n  //   console.log(stockObject);\n  //   //convert string price to number(round to two decimal places)\n  //   // const shortenedPrice = parseFloat(stockObject.p).toFixed(2);\n  //   // setEthereumPrice(shortenedPrice);\n  // };\n\n  //get data stream for all tickers)\n  // let ws = new WebSocket(\"wss://stream.binance.com:9443/ws/!ticker@arr\");\n  // ws.onmessage = (event) => {\n  //   let stockObject = JSON.parse(event.data);\n  //   console.log(stockObject);\n  //   //convert string price to number(round to two decimal places)\n  //   // const shortenedPrice = parseFloat(stockObject.p).toFixed(2);\n  //   // setEthereumPrice(shortenedPrice);\n  // };\n\n  //gets all coin symbols on binance\n  // useEffect(() => {\n  //   axios\n  //     // .get(\"https://api.binance.us/api/v3/ticker/price?symbol=LTCBTC\")\n  //     .get(\"https://api.binance.us/api/v3/exchangeInfo\")\n  //     .then((response) => {\n  //       const data = response.data;\n  //       console.log(data);\n  //     });\n  // }, []);\n\n  //more binance endpoints\n  // useEffect(() => {\n  //   axios\n  //     //get price in currency for a particular coin\n  //     //.get(\"https://api.binance.us/api/v3/ticker/price?symbol=LTCUSD\")\n  //     //current price for all coins listed (would have to sort to get all listed coins in USD)\n  //     // .get(\"https://api.binance.us/api/v3/ticker/price\")\n  //     .then((response) => {\n  //       const data = response.data;\n  //       console.log(data);\n  //     });\n  // }, []);\n\n  //!coingecko\n\n  //only keep every 8th value from sparkline data, and round to 4 decimal places\n  //!check to make sure the \"first\" and \"last\" values are in the shortened array - need for accurate coloring\n  const roundSparklineData = (data) => {\n    let dataArray = data.price;\n    // console.log(dataArray);\n    for (let i = dataArray.length - 1; i >= 0; i--) {\n      if (i % 8 !== 0) {\n        dataArray.splice(i, 1);\n      } else {\n        // console.log(dataArray[i]);\n        dataArray[i].toFixed(4); //!not rounding\n      }\n    }\n    // console.log(dataArray);\n    return dataArray;\n  };\n\n  useEffect(() => {\n    axios\n      .get(\n        //get single coin price\n        // \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\"\n        //!key endpoint, lists all coins by market cap with change for various periods of time, also shows sparklines for 7 days (axis-less data for graph)\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=true&price_change_percentage=24h%2C7d\"\n        //!has converted prices for coins\n        //  'https://api.coingecko.com/api/v3/coins/bitcoin/tickers'\n        //!has description of the coin\n        //\"https://api.coingecko.com/api/v3/coins/bitcoin\"\n        //!historical price data (for max duration) for a particular coin\n        //\"https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=max\"\n        //list all coins (tens of thousands)\n        // \"https://api.coingecko.com/api/v3/coins/list\"\n        //get market cap for a smattering of coins (not sure if all)\n        // \"https://api.coingecko.com/api/v3/global\"\n        //have a search bar for individual coins (could show only if it in the list of coins I am displaying), has market cap rank and images links\n        // \"https://api.coingecko.com/api/v3/search?query=bitcoin\"\n        //list of supported and currencies (not exactly sure what this means)\n        // \"https://api.coingecko.com/api/v3/simple/supported_vs_currencies\"\n      )\n      .then((response) => {\n        const data = response.data;\n        // console.log(data);\n        const coinDataArray = [];\n        data.forEach((coin) => {\n          coinDataArray.push({\n            rank: coin.market_cap_rank,\n            image: coin.image,\n            name: coin.name,\n            symbol: coin.symbol,\n            price: coin.current_price.toLocaleString(\"en-US\"),\n            percentChange24hr:\n              coin.price_change_percentage_24h_in_currency.toFixed(2),\n            percentChange7d:\n              coin.price_change_percentage_7d_in_currency.toFixed(2),\n            marketCap: coin.market_cap.toLocaleString(\"en-US\"),\n            volume24hr: coin.total_volume.toLocaleString(\"en-US\"),\n            // sparkline: coin.sparkline_in_7d,\n            sparkline: roundSparklineData(coin.sparkline_in_7d),\n          });\n        });\n        console.log(coinDataArray);\n        setCoinData(coinDataArray);\n      });\n  }, []);\n\n  return (\n    <Context.Provider\n      value={{\n        selectedCoinData,\n        setSelectedCoinData,\n        // coinChartData,\n        // setCoinChartData,\n      }}\n    >\n      <div className=\"container\">\n        <div className=\"sidebar-flex\">\n          <div>Logo</div>\n          <div>Matthew</div>\n          <div>Home</div>\n          <div>Wallet</div>\n          <div>Trading Ideas</div>\n          <div>Settings</div>\n          <div>Log Out</div>\n        </div>\n        <div className=\"middle-flex\">\n          <BrowserRouter>\n            <div className=\"chart-container\">\n              <Routes>\n                {/* <Route path=\"/\" element={<SearchBar />} /> */}\n                <Route path=\"currencies/:id\" element={<Chart />} />\n                {/* <Route path=\"/\" element={<Coinlist coinData={coinData} />} /> */}\n              </Routes>\n            </div>\n            <div className=\"coinlist-container\">\n              <Coinlist coinData={coinData} />\n            </div>\n          </BrowserRouter>\n        </div>\n        <div className=\"right-flex\">\n          <div>Hello</div>\n        </div>\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/reportWebVitals.js",[],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/Coinlist.js",["113","114","115","116"],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/Chart.js",["117","118","119","120","121","122","123"],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/context/context.js",[],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/CoinRow.js",["124","125","126","127","128","129"],[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":10,"column":25,"nodeType":"136","messageId":"137","endLine":10,"endColumn":41},{"ruleId":"134","severity":1,"message":"138","line":12,"column":10,"nodeType":"136","messageId":"137","endLine":12,"endColumn":20},{"ruleId":"134","severity":1,"message":"139","line":15,"column":10,"nodeType":"136","messageId":"137","endLine":15,"endColumn":23},{"ruleId":"134","severity":1,"message":"140","line":15,"column":25,"nodeType":"136","messageId":"137","endLine":15,"endColumn":41},{"ruleId":"141","severity":1,"message":"142","line":25,"column":6,"nodeType":"143","endLine":25,"endColumn":21,"suggestions":"144"},{"ruleId":"134","severity":1,"message":"145","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"134","severity":1,"message":"146","line":1,"column":28,"nodeType":"136","messageId":"137","endLine":1,"endColumn":34},{"ruleId":"134","severity":1,"message":"147","line":1,"column":36,"nodeType":"136","messageId":"137","endLine":1,"endColumn":46},{"ruleId":"134","severity":1,"message":"148","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":21},{"ruleId":"134","severity":1,"message":"146","line":1,"column":27,"nodeType":"136","messageId":"137","endLine":1,"endColumn":33},{"ruleId":"134","severity":1,"message":"149","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":13},{"ruleId":"134","severity":1,"message":"140","line":11,"column":32,"nodeType":"136","messageId":"137","endLine":11,"endColumn":48},{"ruleId":"134","severity":1,"message":"150","line":23,"column":5,"nodeType":"136","messageId":"137","endLine":23,"endColumn":14},{"ruleId":"134","severity":1,"message":"151","line":24,"column":5,"nodeType":"136","messageId":"137","endLine":24,"endColumn":15},{"ruleId":"141","severity":1,"message":"152","line":29,"column":3,"nodeType":"136","endLine":29,"endColumn":12,"suggestions":"153"},{"ruleId":"134","severity":1,"message":"154","line":22,"column":5,"nodeType":"136","messageId":"137","endLine":22,"endColumn":20},{"ruleId":"141","severity":1,"message":"155","line":76,"column":6,"nodeType":"143","endLine":76,"endColumn":8,"suggestions":"156"},{"ruleId":"130","replacedBy":"157"},{"ruleId":"132","replacedBy":"158"},{"ruleId":"130","replacedBy":"159"},{"ruleId":"132","replacedBy":"160"},{"ruleId":"134","severity":1,"message":"135","line":10,"column":25,"nodeType":"136","messageId":"137","endLine":10,"endColumn":41},{"ruleId":"134","severity":1,"message":"138","line":12,"column":10,"nodeType":"136","messageId":"137","endLine":12,"endColumn":20},{"ruleId":"134","severity":1,"message":"139","line":15,"column":10,"nodeType":"136","messageId":"137","endLine":15,"endColumn":23},{"ruleId":"134","severity":1,"message":"140","line":15,"column":25,"nodeType":"136","messageId":"137","endLine":15,"endColumn":41},{"ruleId":"141","severity":1,"message":"142","line":25,"column":6,"nodeType":"143","endLine":25,"endColumn":21,"suggestions":"161"},{"ruleId":"134","severity":1,"message":"145","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"134","severity":1,"message":"146","line":1,"column":28,"nodeType":"136","messageId":"137","endLine":1,"endColumn":34},{"ruleId":"134","severity":1,"message":"147","line":1,"column":36,"nodeType":"136","messageId":"137","endLine":1,"endColumn":46},{"ruleId":"134","severity":1,"message":"148","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":21},{"ruleId":"134","severity":1,"message":"162","line":18,"column":9,"nodeType":"136","messageId":"137","endLine":18,"endColumn":21},{"ruleId":"134","severity":1,"message":"154","line":28,"column":5,"nodeType":"136","messageId":"137","endLine":28,"endColumn":20},{"ruleId":"134","severity":1,"message":"163","line":34,"column":7,"nodeType":"136","messageId":"137","endLine":34,"endColumn":18},{"ruleId":"134","severity":1,"message":"164","line":35,"column":7,"nodeType":"136","messageId":"137","endLine":35,"endColumn":23},{"ruleId":"134","severity":1,"message":"165","line":36,"column":7,"nodeType":"136","messageId":"137","endLine":36,"endColumn":25},{"ruleId":"141","severity":1,"message":"155","line":124,"column":6,"nodeType":"143","endLine":124,"endColumn":42,"suggestions":"166"},{"ruleId":"141","severity":1,"message":"167","line":278,"column":6,"nodeType":"143","endLine":278,"endColumn":21,"suggestions":"168"},{"ruleId":"134","severity":1,"message":"146","line":1,"column":27,"nodeType":"136","messageId":"137","endLine":1,"endColumn":33},{"ruleId":"134","severity":1,"message":"149","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":13},{"ruleId":"134","severity":1,"message":"140","line":11,"column":32,"nodeType":"136","messageId":"137","endLine":11,"endColumn":48},{"ruleId":"134","severity":1,"message":"150","line":23,"column":5,"nodeType":"136","messageId":"137","endLine":23,"endColumn":14},{"ruleId":"134","severity":1,"message":"151","line":24,"column":5,"nodeType":"136","messageId":"137","endLine":24,"endColumn":15},{"ruleId":"141","severity":1,"message":"152","line":29,"column":3,"nodeType":"136","endLine":29,"endColumn":12,"suggestions":"169"},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'setEthereumPrice' is assigned a value but never used.","Identifier","unusedVar","'greenOrRed' is assigned a value but never used.","'coinChartData' is assigned a value but never used.","'setCoinChartData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'lastPrice'. Either include it or remove the dependency array.","ArrayExpression",["172"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'useContext' is defined but never used.","'createChart' is defined but never used.","'axios' is defined but never used.","'marketCap' is assigned a value but never used.","'volume24hr' is assigned a value but never used.","React Hook useEffect contains a call to 'setSparklineColor'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [percentChange7d] as a second argument to the useEffect Hook.",["173"],"'percentChange7d' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveChartData'. Either include it or remove the dependency array.",["174"],["170"],["171"],["170"],["171"],["175"],"'isMountedTwo' is assigned a value but never used.","'globalChart' is assigned a value but never used.","'globalLineSeries' is assigned a value but never used.","'globalVolumeSeries' is assigned a value but never used.",["176"],"React Hook useEffect has missing dependencies: 'renderChart' and 'updateChartData'. Either include them or remove the dependency array.",["177"],["178"],"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"179","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"181","fix":"190"},"Update the dependencies array to be: [ethereumPrice, lastPrice]",{"range":"191","text":"192"},"Add dependencies array: [percentChange7d]",{"range":"193","text":"194"},"Update the dependencies array to be: [retrieveChartData]",{"range":"195","text":"196"},{"range":"197","text":"192"},"Update the dependencies array to be: [retrieveChartData, selectedCoinData, timeframeToFetch]",{"range":"198","text":"199"},"Update the dependencies array to be: [coinChartData, renderChart, updateChartData]",{"range":"200","text":"201"},{"range":"202","text":"194"},[845,860],"[ethereumPrice, lastPrice]",[982,982],", [percentChange7d]",[2906,2908],"[retrieveChartData]",[845,860],[4606,4642],"[retrieveChartData, selectedCoinData, timeframeToFetch]",[9404,9419],"[coinChartData, renderChart, updateChartData]",[982,982]]