[{"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/index.js":"1","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/App.js":"2","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/reportWebVitals.js":"3","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/Coinlist.js":"4","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/CoinRow.js":"5","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/context/context.js":"6","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/Chart.js":"7","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/SearchBar.js":"8","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/index.js":"9","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/App.js":"10","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/reportWebVitals.js":"11","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/Coinlist.js":"12","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/Chart.js":"13","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/context/context.js":"14","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/CoinRow.js":"15","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/chartControls.js":"16","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/ChartControls.js":"17","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/NewsFeed.js":"18","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/SearchBar.js":"19","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/SearchList.js":"20","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/LoginAndSignUp.js":"21","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/LoginForm.js":"22"},{"size":500,"mtime":1649433274077,"results":"23","hashOfConfig":"24"},{"size":7156,"mtime":1649791252271,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1649433274077,"results":"26","hashOfConfig":"24"},{"size":1498,"mtime":1649772784244,"results":"27","hashOfConfig":"24"},{"size":1979,"mtime":1649789719211,"results":"28","hashOfConfig":"24"},{"size":90,"mtime":1649629322579,"results":"29","hashOfConfig":"24"},{"size":6879,"mtime":1649796516438,"results":"30","hashOfConfig":"24"},{"size":557,"mtime":1649769183556,"results":"31","hashOfConfig":"24"},{"size":500,"mtime":1649433274077,"results":"32","hashOfConfig":"33"},{"size":10085,"mtime":1650377959756,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1649433274077,"results":"35","hashOfConfig":"33"},{"size":3113,"mtime":1650382295837,"results":"36","hashOfConfig":"33"},{"size":12217,"mtime":1650054645754,"results":"37","hashOfConfig":"33"},{"size":90,"mtime":1649629322579,"results":"38","hashOfConfig":"33"},{"size":2017,"mtime":1650056470915,"results":"39","hashOfConfig":"33"},{"size":2110,"mtime":1650031794326,"results":"40","hashOfConfig":"33"},{"size":2449,"mtime":1650056602777,"results":"41","hashOfConfig":"33"},{"size":2332,"mtime":1650080073797,"results":"42","hashOfConfig":"33"},{"size":1282,"mtime":1650294867367,"results":"43","hashOfConfig":"33"},{"size":3650,"mtime":1650294838512,"results":"44","hashOfConfig":"33"},{"size":951,"mtime":1650317520835,"results":"45","hashOfConfig":"33"},{"size":3337,"mtime":1650327976293,"results":"46","hashOfConfig":"33"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1pkojmz",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"5w18n",{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/index.js",[],[],["126","127"],"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/App.js",["128","129","130","131","132"],[],"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/reportWebVitals.js",[],[],"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/Coinlist.js",["133","134","135","136"],[],"import React, { useEffect, useRef, useContext, useState } from \"react\";\n//import Context from \"../context/context\";\nimport { createChart } from \"lightweight-charts\";\nimport CoinRow from \"./CoinRow\";\n\nimport \"./coinlist.css\";\n\nexport default function Coinlist(props) {\n  // const { coinData } = useContext(Context);\n  const [searchInput, setSearchInput] = useState();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"submitted\");\n  };\n\n  return (\n    <>\n      <div className=\"coinlist-controls\">\n        {/* form */}\n        <form className=\"search-form\" onSubmit={handleSubmit}>\n          <input\n            onChange={(e) => {\n              setSearchInput(e.target.value);\n            }}\n            value={searchInput}\n            type=\"text\"\n            placeholder=\"Search cryptocurrency\"\n          />\n          <button>Submit</button>\n        </form>\n        {/* sorting buttons */}\n        <div className=\"sorting-buttons\">\n          <div>Rank</div>\n          <div>Volume</div>\n          <div>Trending</div>\n          <div>USD</div>\n        </div>\n        {/* table headers */}\n        <div className=\"coinlist-header\">\n          <div>Rank</div>\n          <div>Name</div>\n          <div>Price</div>\n          <div>24hr%</div>\n          <div>7d%</div>\n          <div>Last 7 Days</div>\n        </div>\n      </div>\n      <div className=\"coinlist\">\n        {props.coinData?.map((coin) => {\n          return <CoinRow coin={coin} />;\n        })}\n      </div>\n    </>\n  );\n}\n","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/CoinRow.js",["137","138","139","140","141","142"],[],"import React, { useState, useRef, useContext, useEffect } from \"react\";\nimport Context from \"../context/context\";\n// import { createChart } from \"lightweight-charts\";\nimport { NavLink } from \"react-router-dom\";\nimport { Sparklines, SparklinesLine } from \"react-sparklines\";\nimport axios from \"axios\";\nimport \"./coinrow.css\";\n\nexport default function CoinRow(props) {\n  const [sparklineColor, setSparklineColor] = useState();\n  const { setSelectedCoinData, setCoinChartData } = useContext(Context);\n  //const isMounted = useRef(false);\n  // console.log(props);\n  // const { name, price, percentChange, data } = props.coin;\n  const {\n    rank,\n    image,\n    name,\n    symbol,\n    price,\n    percentChange24hr,\n    percentChange7d,\n    marketCap,\n    volume24hr,\n    sparkline,\n  } = props.coin;\n\n  //colors sparkline chart based on 7d % change\n  useEffect(() => {\n    if (percentChange7d > 0) {\n      setSparklineColor(\"green\");\n    } else {\n      setSparklineColor(\"red\");\n    }\n  });\n\n  return (\n    <div className=\"coin-row\">\n      <div>{rank}</div>\n      <div>\n        <img src={image} alt=\"crypto-icon\" className=\"icon\"></img>\n      </div>\n      <NavLink\n        to={`/currencies/${name}`}\n        key={rank}\n        onClick={() => {\n          setSelectedCoinData(props.coin);\n          // retrieveDetailedChartData(name);\n        }}\n      >\n        {name}\n      </NavLink>\n      <div>{symbol}</div>\n      <div>${price}</div>\n      <div className=\"percent-change\">{percentChange24hr}</div>\n      <div className=\"percent-change\">{percentChange7d}</div>\n      {/* <div>${marketCap}</div>\n      <div>${volume24hr}</div> */}\n      {/* <div className=\"chart\"></div> */}\n      <Sparklines\n        // className=\"sparkline-container\"\n        data={sparkline}\n        // width={100}\n        // height={20}\n        // margin={5}\n      >\n        <SparklinesLine\n          style={{ strokeWidth: 3, stroke: sparklineColor, fill: \"none\" }}\n        />\n      </Sparklines>\n    </div>\n  );\n}\n","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/context/context.js",[],[],"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/Chart.js",["143","144"],[],"import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport Context from \"../context/context\";\nimport { createChart } from \"lightweight-charts\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport \"./chart.css\";\nmoment().format();\n\nexport default function Chart() {\n  // const { coinChartData } = useContext(Context);\n  const { selectedCoinData } = useContext(Context);\n  const [coinChartData, setCoinChartData] = useState();\n  const isMounted = useRef(false);\n\n  const {\n    rank,\n    image,\n    name,\n    symbol,\n    price,\n    percentChange24hr,\n    percentChange7d,\n    marketCap,\n    volume24hr,\n  } = selectedCoinData;\n  const coinName = selectedCoinData.name;\n\n  const retrieveChartData = (duration, momentFormat) => {\n    const coinLowercase = coinName.charAt(0).toLowerCase() + coinName.slice(1);\n    axios\n      .get(\n        //get single coin price\n        // \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\"\n        //!has converted prices for coins\n        //  'https://api.coingecko.com/api/v3/coins/bitcoin/tickers'\n        //!has description of the coin\n        //\"https://api.coingecko.com/api/v3/coins/bitcoin\"\n        //!historical price data (for max duration) for a particular coin\n        `https://api.coingecko.com/api/v3/coins/${coinLowercase}/market_chart?vs_currency=usd&days=${duration}`\n        //list all coins (tens of thousands)\n        // \"https://api.coingecko.com/api/v3/coins/list\"\n        //get market cap for a smattering of coins (not sure if all)\n        // \"https://api.coingecko.com/api/v3/global\"\n        //have a search bar for individual coins (could show only if it in the list of coins I am displaying), has market cap rank and images links\n        // \"https://api.coingecko.com/api/v3/search?query=bitcoin\"\n        //list of supported and currencies (not exactly sure what this means)\n        // \"https://api.coingecko.com/api/v3/simple/supported_vs_currencies\"\n      )\n      .then((response) => {\n        const data = response.data;\n        // console.log(data);\n        const priceData = data.prices;\n        const priceDataArray = [];\n        priceData.forEach((priceArray) => {\n          priceDataArray.push({\n            time: Math.floor(priceArray[0] / 1000),\n            // time: moment(priceArray[0]).format(momentFormat),\n            value: priceArray[1],\n          });\n        });\n        const volumeData = data.total_volumes;\n        const volumeDataArray = [];\n        volumeData.forEach((volumeArray) => {\n          volumeDataArray.push({\n            time: Math.floor(volumeArray[0] / 1000),\n            // time: moment(volumeArray[0]).format(momentFormat),\n            value: volumeArray[1],\n          });\n        });\n        setCoinChartData({ prices: priceDataArray, volume: volumeDataArray });\n      });\n  };\n\n  useEffect(() => {\n    retrieveChartData(\"1\" /*, \"MM/DD/YYYY\"*/);\n  }, []);\n\n  // useEffect(() => {\n  //   let chartElement = document.querySelector(\".tv-lightweight-charts\");\n  //   if (chartElement) {\n  //     console.log(\"here\");\n  //     chartElement.setAttribute(\"id\", \"chartElement\");\n  //   }\n  // });\n\n  useEffect(() => {\n    if (isMounted.current) {\n      const chart = createChart(document.querySelector(\".chart\"), {\n        width: 500,\n        height: 400,\n        rightPriceScale: {\n          visible: true,\n        },\n        grid: {\n          vertLines: {\n            visible: true,\n          },\n          horzLines: {\n            visible: true,\n          },\n        },\n        crosshair: {\n          vertLine: {\n            visible: true,\n          },\n          horzLine: {\n            visible: true,\n          },\n        },\n        layout: {\n          backgroundColor: \"white\",\n        },\n        // timeScale: {\n        //   visible: true,\n        //   /*timeVisible: true secondsVisible: true,*/\n        // },\n\n        timeScale: {\n          timeVisible: true,\n          secondsVisible: false,\n        },\n        // borderColor: \"green\",\n        // timeVisible: false,\n        // priceScaleMode: percentChange,\n      });\n      //fits timescale to the content\n      // chart.timeScale().fitContent();\n\n      const lineSeries = chart\n        .addLineSeries\n        //used to set y-axis scale (not quite sure exactly how it works)\n        //   {\n        //   autoscaleInfoProvider: () => ({\n        //     priceRange: {\n        //       minValue: 0,\n        //       maxValue: 100,\n        //     },\n        //   }),\n        // }\n        ();\n      lineSeries.applyOptions({\n        color: \"red\",\n        lineWidth: 4,\n        //crosshair dot\n        crosshairMarkerVisible: true,\n        //both of these are similar\n        lastValueVisible: true,\n        priceLineVisible: true,\n        //can make the series disapper (labels remain)\n        visible: true,\n        //\n      });\n      // const customFormatter = (time, tickMarkType, locale) => {\n      //   // tickMarkType: \"year\";\n      // };\n      lineSeries.setData(coinChartData.prices);\n      //   window.addEventListener(\"resize\", handleResize);\n\n      const volumeSeries = chart.addHistogramSeries({\n        color: \"#26a69a\",\n        priceFormat: {\n          type: \"volume\",\n        },\n        priceScaleId: \"\",\n        scaleMargins: {\n          top: 0.8,\n          bottom: 0,\n        },\n      });\n      //volume series\n      volumeSeries.setData(coinChartData.volume);\n    } else {\n      isMounted.current = true;\n    }\n  }, [coinChartData]);\n\n  return (\n    <>\n      <div className=\"coin-details-flex\">\n        <img className=\"icon\" src={image} alt=\"icon\" />\n        <div>{name}</div>\n        <div>{symbol}</div>\n        <div>{rank}</div>\n        <div>${price}</div>\n        <div>{percentChange24hr}%</div>\n        <div>{marketCap}</div>\n        <div>{volume24hr}</div>\n      </div>\n      <div className=\"chart-with-controls-container\">\n        <div className=\"chart-controls\">\n          <div\n            value=\"day\"\n            onClick={() => {\n              retrieveChartData(\"1\", \"HH:mm:ss\");\n            }}\n          >\n            Day\n          </div>\n          <div\n            value=\"week\"\n            onClick={() => {\n              retrieveChartData(\"7\", \"MM/DD/YYYY\");\n            }}\n          >\n            Week\n          </div>\n          <div\n            value=\"month\"\n            onClick={() => {\n              retrieveChartData(\"30\", \"MM/DD/YYYY\");\n            }}\n          >\n            Month\n          </div>\n          <div\n            value=\"year\"\n            onClick={() => {\n              retrieveChartData(\"365\", \"MM/DD/YYYY\");\n            }}\n          >\n            Year\n          </div>\n          <div\n            value=\"all\"\n            onClick={() => {\n              retrieveChartData(\"max\", \"MM/DD/YYYY\");\n            }}\n          >\n            All\n          </div>\n        </div>\n        <div className=\"chart\"></div>\n      </div>\n    </>\n  );\n}\n","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/SearchBar.js",[],[],["145","146"],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/index.js",[],[],["147","148"],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/App.js",["149"],[],"import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Context from \"./context/context\";\nimport Coinlist from \"./components/Coinlist\";\nimport Chart from \"./components/Chart\";\nimport LoginAndSignUp from \"./components/LoginAndSignUp\";\nimport SearchBar from \"./components/SearchBar\";\nimport NewsFeed from \"./components/NewsFeed\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const [coinData, setCoinData] = useState([]);\n  const [selectedCoinData, setSelectedCoinData] = useState();\n  // const [allCoinIds, setAllCoinIds] = useState();\n  // const [additionalCoinIdInfo, setAdditionalCoinIdInfo] = useState([]);\n\n  //(3)shortens sparkline data array and rounds to four places\n  //!check to make sure the \"first\" and \"last\" values are in the shortened array - need for accurate coloring\n  const roundSparklineData = (data) => {\n    let dataArray = data.price;\n    //console.log(dataArray);\n    for (let i = dataArray.length - 1; i >= 0; i--) {\n      if (i % 8 !== 0) {\n        dataArray.splice(i, 1);\n      } else {\n        // console.log(dataArray[i]);\n        dataArray[i].toFixed(4); //!not rounding\n      }\n    }\n    // console.log(dataArray);\n    return dataArray;\n  };\n\n  //!price rounding function (should be improved, try to match coinmarketcap)\n  const roundCoinPrice = (price) => {\n    if (price < 0 && price > 0.0001) {\n      return price?.toFixed(4);\n    } else if (price < 0.0001 && price > 0.00001) {\n      return price?.toFixed(5);\n    } else if (price < 0.00001 && price > 0.000001) {\n      return price?.toFixed(6);\n    }\n    return price?.toFixed(2);\n  };\n\n  //(2)initial api call retrieves list data for a subset of coins\n  const fetchInitialCoinSet = () => {\n    axios\n      .get(\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=true&price_change_percentage=24h%2C7d\"\n      )\n      .then((response) => {\n        const data = response.data;\n        // console.log(data);\n        const coinDataArray = [];\n        data.forEach((coin) => {\n          coinDataArray.push({\n            id: coin.id,\n            rank: coin.market_cap_rank,\n            image: coin.image,\n            name: coin.name,\n            symbol: coin.symbol,\n            price: roundCoinPrice(\n              coin.current_price\n            ) /*?.toLocaleString(\"en-US\"), //!not added commas*/,\n            percentChange24hr:\n              coin.price_change_percentage_24h_in_currency.toFixed(2),\n            percentChange7d:\n              coin.price_change_percentage_7d_in_currency.toFixed(2),\n            marketCap: coin.market_cap.toLocaleString(\"en-US\"),\n            volume24hr: coin.total_volume.toLocaleString(\"en-US\"),\n            sparkline: roundSparklineData(coin.sparkline_in_7d),\n          });\n        });\n        // console.log(coinDataArray);\n        setCoinData(coinDataArray);\n      });\n  };\n\n  //()asynchronously fetch larger coin set after rendering initial set\n  // const fetchLargerCoinSet = async () => {\n  //   await axios\n  //     .get(\n  //       \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=1&sparkline=true&price_change_percentage=24h%2C7d\"\n  //     )\n  //     .then((response) => {\n  //       const data = response.data;\n  //       // console.log(data);\n  //       const coinDataArray = [];\n  //       data.forEach((coin) => {\n  //         coinDataArray.push({\n  //           rank: coin.market_cap_rank,\n  //           image: coin.image,\n  //           name: coin.name,\n  //           symbol: coin.symbol,\n  //           price: coin.current_price.toLocaleString(\"en-US\"),\n  //           percentChange24hr:\n  //             coin.price_change_percentage_24h_in_currency.toFixed(2),\n  //           percentChange7d:\n  //             coin.price_change_percentage_7d_in_currency.toFixed(2),\n  //           marketCap: coin.market_cap.toLocaleString(\"en-US\"),\n  //           volume24hr: coin.total_volume.toLocaleString(\"en-US\"),\n  //           sparkline: roundSparklineData(coin.sparkline_in_7d),\n  //         });\n  //       });\n  //       console.log(coinDataArray);\n  //       setCoinData(coinDataArray);\n  //     });\n  // };\n\n  //\n\n  //(4)asynchronously fetch larger coin set after rendering initial set\n  // const fetchAllCoins = async (initialPage, stopIndex) => {\n  //   const coinDataArray = [...additionalCoinIdInfo];\n  //   for (let i = initialPage; i <= stopIndex; i++) {\n  //     await axios\n  //       .get(\n  //         `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=${i}&sparkline=false`\n  //       )\n  //       .then((response) => {\n  //         const data = response.data;\n  //         data.forEach((coin) => {\n  //           if (coin.rank !== null) {\n  //             coinDataArray.push({\n  //               rank: coin.market_cap_rank,\n  //               image: coin.image,\n  //               name: coin.name,\n  //               symbol: coin.symbol,\n  //             });\n  //           }\n  //         });\n  //       });\n  //   }\n  //   setAdditionalCoinIdInfo(coinDataArray);\n  //   console.log(additionalCoinIdInfo);\n  // };\n\n  const fetchAllRankedCoins = (initialPage, stopIndex) => {\n    console.log(\"in all ranked coins\");\n    const coinDataArray = [...coinData];\n    for (let i = initialPage; i <= stopIndex; i++) {\n      axios\n        .get(\n          `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=${i}&sparkline=true&price_change_percentage=24h%2C7d`\n        )\n        .then((response) => {\n          const data = response.data;\n          // console.log(data);\n          data.forEach((coin) => {\n            //!may want to add sorting on coin rank\n            // if (coin.rank) {\n            coinDataArray.push({\n              id: coin.id,\n              rank: coin.market_cap_rank,\n              image: coin.image,\n              name: coin.name,\n              symbol: coin.symbol,\n              price: roundCoinPrice(coin.current_price)?.toLocaleString(\n                \"en-US\"\n              ),\n              percentChange24hr:\n                coin.price_change_percentage_24h_in_currency?.toFixed(2),\n              percentChange7d:\n                coin.price_change_percentage_7d_in_currency?.toFixed(2),\n              marketCap: coin.market_cap?.toLocaleString(\"en-US\"),\n              volume24hr: coin.total_volume?.toLocaleString(\"en-US\"),\n              sparkline: roundSparklineData(coin.sparkline_in_7d),\n            });\n            // }\n          });\n          // console.log(coinDataArray);\n          const sortedCoinDataArray = coinDataArray.sort((a, b) => {\n            return a.rank - b.rank;\n          });\n          //console.log(\"sorted coin data\");\n          //console.log(sortedCoinDataArray); //coin data sorted\n          setCoinData(sortedCoinDataArray); //!not sorted in state (probably missing an update)\n        });\n    }\n    // console.log(`this is the final \"coinData\"`);\n    // console.log(coinDataArray);\n    // setCoinData(coinDataArray);\n  };\n\n  //()get ids for all coins listed and adds them to \"coinData\" (an array stored in state)\n  // const getIdsAfterPageLoad = /*async*/ () => {\n  //   /*await*/ axios\n  //     .get(\n  //       //list all coins (tens of thousands)\n  //       \"https://api.coingecko.com/api/v3/coins/list\"\n  //     )\n  //     .then((response) => {\n  //       const allCoinsIdArray = response.data;\n  //       // console.log(allCoinsIdArray);\n  //       // console.log(coinData);\n  //       //!updating state by setting \"equal\", not by creating a copy and pushing\n  //       const coinDataCopy = coinData;\n  //       for (let i = 0; i < coinDataCopy.length; i++) {\n  //         for (let j = 0; j < allCoinsIdArray.length; j++) {\n  //           if (coinDataCopy[i].name === allCoinsIdArray[j].name) {\n  //             coinDataCopy[i].id = allCoinsIdArray[j].id;\n  //           }\n  //         }\n  //       }\n  //       //store all ids as a searchable list (for search bar dropdown)\n  //       // console.log(\"allCoinsIdArray\");\n  //       // console.log(allCoinsIdArray);\n  //       setAllCoinIds(allCoinsIdArray);\n  //     });\n  // };\n\n  //(1) fetch initial coins to list\n  useEffect(() => {\n    fetchInitialCoinSet();\n    fetchAllRankedCoins(1, 15);\n    //fetchLargerCoinSet(); //asynchronous\n  }, []);\n\n  useEffect(() => {\n    // console.log(coinData);\n  }, [coinData]);\n\n  //()get \"correct\" ids for all coins listed\n  // useEffect(() => {\n  //   // getIdsAfterPageLoad();\n  //   //\n  //   //fetch detailed info for all ranked coins\n  //   //fetchAllRankedCoins(1, 15);\n  //   console.log(coinData);\n  // }, [coinData]);\n\n  // useEffect(() => {\n  //   console.log(\"additionalCoinIdInfo\");\n  //   console.log(additionalCoinIdInfo);\n  // }, [additionalCoinIdInfo]);\n\n  return (\n    <Context.Provider\n      value={{\n        selectedCoinData,\n        setSelectedCoinData,\n        coinData,\n      }}\n    >\n      <div className=\"container\">\n        <div className=\"sidebar-flex\">\n          <div>Logo</div>\n          <div>Matthew</div>\n          <div>Home</div>\n          <div>Wallet</div>\n          <div>Trading Ideas</div>\n          <div>Settings</div>\n          <div>Log Out</div>\n        </div>\n        <BrowserRouter>\n          <div className=\"middle-flex\">\n            <div className=\"chart-container\">\n              <Routes>\n                {/* <Route path=\"/\" element={<SearchBar />} /> */}\n                <Route path=\"currencies/:id\" element={<Chart />} />\n                {/* <Route path=\"/\" element={<Coinlist coinData={coinData} />} /> */}\n              </Routes>\n            </div>\n            <div className=\"coinlist-container\">\n              <Coinlist coinData={coinData} setCoinData={setCoinData} />\n            </div>\n          </div>\n          <div className=\"right-flex\">\n            <LoginAndSignUp />\n            <SearchBar />\n            <NewsFeed />\n          </div>\n        </BrowserRouter>\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n",["150","151"],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/reportWebVitals.js",[],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/Coinlist.js",["152","153","154","155","156","157","158","159"],[],"import React, { useEffect, useRef, useContext, useState } from \"react\";\n//import Context from \"../context/context\";\nimport { createChart } from \"lightweight-charts\";\nimport CoinRow from \"./CoinRow\";\n\nimport \"./coinlist.css\";\n\nexport default function Coinlist({ coinData, setCoinData }) {\n  // const { coinData } = useContext(Context);\n  const [searchInput, setSearchInput] = useState();\n\n  //sort by name\n  const sortByName = (key) => {};\n\n  //sort coin list using buttons\n  const sortCoinList = (key) => {\n    // console.log(coinData);\n    const coinDataCopy = [...coinData];\n    if (key === \"name\") {\n      if (coinData[0][key] <= coinData[1][key]) {\n        console.log(\"sort by name-desc\");\n        const sortedCoinsByNameDesc = coinDataCopy.sort((a, b) => {\n          let name1 = a[key].toLowerCase();\n          let name2 = b[key].toLowerCase();\n          if (name1 > name2) {\n            return -1;\n          }\n          if (name1 > name2) {\n            return 1;\n          }\n          return 0;\n        });\n        // console.log(sortedCoinsByNameDesc);\n        setCoinData(sortedCoinsByNameDesc);\n      } else {\n        console.log(\"sort by name-asc\");\n        const sortedCoinsByNameAsc = coinDataCopy.sort((a, b) => {\n          let name1 = a[key].toLowerCase();\n          let name2 = b[key].toLowerCase();\n          if (name1 < name2) {\n            return -1;\n          }\n          if (name1 > name2) {\n            return 1;\n          }\n          return 0;\n        });\n        // console.log(sortedCoinsByNameAsc);\n        setCoinData(sortedCoinsByNameAsc);\n      }\n    } else {\n      if (parseFloat(coinData[0][key]) <= parseFloat(coinData[1][key])) {\n        const sortedCoinsDesc = coinDataCopy.sort((a, b) => {\n          return b[key] - a[key];\n        });\n        // console.log(`sorted by ${key} - descending`);\n        // console.log(sortedCoinsDesc);\n        setCoinData(sortedCoinsDesc);\n      } else {\n        const sortedCoinsAsc = coinDataCopy.sort((a, b) => {\n          return a[key] - b[key];\n        });\n        // console.log(`sorted by ${key} - ascending`);\n        // console.log(sortedCoinsAsc);\n        setCoinData(sortedCoinsAsc);\n      }\n    }\n  };\n\n  return (\n    <>\n      <div className=\"coinlist-controls\">\n        {/* sorting buttons */}\n        <div className=\"sorting-buttons\">\n          <div>Rank</div>\n          <div>Volume</div>\n          <div>Trending</div>\n          <div>USD</div>\n        </div>\n        {/* table headers */}\n        <div className=\"coinlist-header\">\n          <div onClick={() => sortCoinList(\"rank\")}>Rank</div>\n          <div onClick={() => sortCoinList(\"name\")}>Name</div>\n          <div onClick={() => sortCoinList(\"price\")}>Price</div>\n          <div onClick={() => sortCoinList(\"percentChange24hr\")}>24hr%</div>\n          <div onClick={() => sortCoinList(\"percentChange7d\")}>7d%</div>\n          <div>Last 7 Days</div>\n        </div>\n      </div>\n      <div className=\"coinlist\">\n        {coinData?.map((coin, index) => {\n          if (index < 50) {\n            return <CoinRow coin={coin} />;\n          }\n        })}\n      </div>\n    </>\n  );\n}\n","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/Chart.js",["160","161","162","163","164","165","166"],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/context/context.js",[],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/CoinRow.js",["167","168","169","170","171","172"],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/chartControls.js",["173","174","175","176","177"],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/ChartControls.js",["178","179","180"],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/NewsFeed.js",["181","182"],[],"import React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport \"./newsFeed.css\";\n\nexport default function NewsFeed() {\n  const [articles, setArticles] = useState();\n\n  //const currentDate = moment().format(\"YYYY-MM-DD\");\n  const threeDaysAgo = moment().subtract(3, \"d\").format(\"YYYY-MM-DD\");\n\n  //function calling api and storing article data in state\n  const fetchArticles = () => {\n    axios\n      .get(\n        //list all coins (tens of thousands)\n        `https://newsapi.org/v2/everything?q=crypto&from=${threeDaysAgo}&language=en&apiKey=69563e91b17745efad0051f4c02a3f94`\n      )\n      .then((response) => {\n        const data = response.data;\n        // console.log(data);\n\n        // const newsArticleArray = [];\n        // newsArticles.forEach((article) => {\n        //   newsArticleArray.push({\n        //     author: article.author,\n        //     content: article.content, //maybe not needed\n        //     description: article.author,\n        //     publishedAt:: article.publishedAt,\n        //     symbol: coin.symbol,\n\n        //     price: coin.current_price.toLocaleString(\"en-US\"),\n        //     percentChange24hr:\n        //       coin.price_change_percentage_24h_in_currency.toFixed(2),\n        //     percentChange7d:\n        //       coin.price_change_percentage_7d_in_currency.toFixed(2),\n        //     marketCap: coin.market_cap.toLocaleString(\"en-US\"),\n        //     volume24hr: coin.total_volume.toLocaleString(\"en-US\"),\n        //     // sparkline: coin.sparkline_in_7d,\n        //     sparkline: roundSparklineData(coin.sparkline_in_7d),\n        //   });\n\n        setArticles(data.articles);\n      });\n  };\n\n  //fetch articles when component mounts\n  // useEffect(() => {\n  //   fetchArticles();\n  // }, []);\n\n  //maps articles stored in state, returning article element\n  const articlesList = articles?.map((article) => {\n    return (\n      <div className=\"article\" key={Math.floor(Math.random() * 10000)}>\n        <img src={article.urlToImage} alt=\"article\"></img>\n        <div className=\"article-title\">{article.title}</div>\n        <div>{article.description}</div>\n        <div>{article.source.name}</div>\n        <div>{article.publishedAt}</div>\n        <a href={article.url}>Link</a>\n      </div>\n    );\n  });\n\n  return <>{articlesList}</>;\n}\n","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/SearchBar.js",[],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/SearchList.js",["183"],[],"import React, { useContext, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Context from \"../context/context\";\nimport \"./searchList.css\";\n\nexport default function SearchList({\n  value,\n  list,\n  clearSearchBar,\n  setFirstListItem,\n}) {\n  // console.log(value, list);\n  const { coinData, setSelectedCoinData } = useContext(Context);\n  const [filteredListLength, setFilteredListLength] = useState(0);\n  const [allResultsVisibility, setAllResultsVisibility] = useState(false);\n\n  const Dropdown = () => {\n    //if user enters value in search bar\n    if (value) {\n      console.log(list);\n\n      //checks input value against list of coins for matches\n      const filteredList = coinData.filter((item) => {\n        return item.name\n          .toString()\n          .toLowerCase()\n          .startsWith(value.toLowerCase());\n      });\n      console.log(\"filteredList\");\n      console.log(filteredList);\n      setFilteredListLength(filteredList.length - 4);\n      //   setFilteredCoinList(filteredList);\n      if (filteredList.length === 0) {\n        return (\n          <div>\n            <div>No results for '{value}'</div>\n            <div>We couldn't find anything matching your search.</div>\n            <div>Try again with a different term.</div>\n          </div>\n        );\n      } else {\n        console.log(\"filtered list found\");\n        return filteredList.map((item, index) => {\n          //makes first list item retrievable on form submit (click \"enter\" in searchBar component)\n          if (index === 0) {\n            setFirstListItem(item);\n            setSelectedCoinData(item);\n          }\n          if (allResultsVisibility) {\n            return (\n              <div className=\"search-item\">\n                <NavLink\n                  onClick={() => {\n                    setSelectedCoinData(item);\n                    clearSearchBar();\n                    setAllResultsVisibility(false);\n                  }}\n                  to={`/currencies/${item.name}`}\n                  key={item.id}\n                >\n                  <div>\n                    <img className=\"icon\" alt=\"search-icon\" src={item.image} />\n                  </div>\n                  <div>{item.name}</div>\n                  <div>{item.symbol.toUpperCase()}</div>\n                  <div>#{item.rank}</div>\n                </NavLink>\n              </div>\n            );\n          } else {\n            if (index < 4) {\n              return (\n                <div className=\"search-item\">\n                  <NavLink\n                    onClick={() => {\n                      setSelectedCoinData(item);\n                      clearSearchBar();\n                      setAllResultsVisibility(false);\n                    }}\n                    to={`/currencies/${item.name}`}\n                    key={item.id}\n                  >\n                    <div>\n                      <img\n                        className=\"icon\"\n                        alt=\"search-icon\"\n                        src={item.image}\n                      />\n                    </div>\n                    <div>{item.name}</div>\n                    <div>{item.symbol.toUpperCase()}</div>\n                    <div>#{item.rank}</div>\n                  </NavLink>\n                </div>\n              );\n            }\n          }\n        });\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Dropdown />\n      {!allResultsVisibility && (\n        <div\n          onClick={() => {\n            setAllResultsVisibility(true);\n          }}\n        >\n          See all results\n          {filteredListLength > 0 && \"(\" + filteredListLength + \")\"}\n        </div>\n      )}\n    </div>\n  );\n}\n",["184","185"],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/LoginAndSignUp.js",["186"],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/LoginForm.js",["187"],[],"import React, { useEffect, useRef } from \"react\";\nimport closeIcon from \"../images/close-icon.png\";\nimport \"./loginForm.css\";\n\nexport default function LoginForm({\n  typeOfForm,\n  setTypeOfForm,\n  formVisible,\n  setFormVisible,\n}) {\n  const isMounted = useRef(false);\n\n  const hideLoginForm = () => {\n    const loginContainer = document.querySelector(\".login-container\");\n    loginContainer.removeAttribute(\"login-container-visible\");\n    loginContainer.setAttribute(\"id\", \"login-container-hidden\");\n    const backgroundMask = document.querySelector(\".background-mask\");\n    backgroundMask.removeAttribute(\"visible\");\n    backgroundMask.setAttribute(\"id\", \"hidden\");\n  };\n\n  useEffect(() => {\n    if (isMounted.current) {\n      const loginContainer = document.querySelector(\".login-container\");\n      loginContainer.setAttribute(\"id\", \"login-container-visible\");\n      const backgroundMask = document.querySelector(\".background-mask\");\n      backgroundMask.setAttribute(\"id\", \"visible\");\n      setFormVisible(false);\n    } else {\n      isMounted.current = true;\n    }\n  }, [formVisible]);\n\n  return (\n    <div className=\"background-mask\">\n      <div className=\"login-container\">\n        <form>\n          {typeOfForm === \"login\" ? (\n            <div>\n              <div className=\"heading\">Login</div>\n              <img\n                onClick={hideLoginForm}\n                className=\"close-button\"\n                alt=\"close-button\"\n                src={closeIcon}\n              />\n              <div>\n                New to Cryptic?\n                <span\n                  className=\"link\"\n                  onClick={() => {\n                    setTypeOfForm(\"signup\");\n                  }}\n                >\n                  Create an account\n                </span>\n              </div>\n            </div>\n          ) : (\n            <div>\n              <div className=\"heading\">Create an account</div>\n              <img\n                onClick={hideLoginForm}\n                alt=\"close-button\"\n                className=\"close-button\"\n                src={closeIcon}\n              />\n              <div>\n                Gain access to additional features such as a personal Watchlist\n                and Portfolio tracking.\n              </div>\n              <div>\n                Already have an account?\n                <span\n                  className=\"link\"\n                  onClick={() => {\n                    setTypeOfForm(\"login\");\n                  }}\n                >\n                  Sign in\n                </span>\n              </div>\n            </div>\n          )}\n          <div>Email Address</div>\n          <input type=\"email\" placeholder=\"Enter your email address...\" />\n          <div>Password</div>\n          <input type=\"password\" placeholder=\"Enter your password...\" />\n          <div>\n            Password should contain both letter and number, with minimum length\n            of 8 characters\n          </div>\n          {typeOfForm === \"login\" ? (\n            <div className=\"button\">Log In</div>\n          ) : (\n            <>\n              <div className=\"button\">Sign Up</div>\n              <div>\n                By proceeding, you agree to Cryptic's Terms of Use and Privacy\n                Policy.\n              </div>\n            </>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n}\n",{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":10,"column":25,"nodeType":"194","messageId":"195","endLine":10,"endColumn":41},{"ruleId":"192","severity":1,"message":"196","line":12,"column":10,"nodeType":"194","messageId":"195","endLine":12,"endColumn":20},{"ruleId":"192","severity":1,"message":"197","line":15,"column":10,"nodeType":"194","messageId":"195","endLine":15,"endColumn":23},{"ruleId":"192","severity":1,"message":"198","line":15,"column":25,"nodeType":"194","messageId":"195","endLine":15,"endColumn":41},{"ruleId":"199","severity":1,"message":"200","line":25,"column":6,"nodeType":"201","endLine":25,"endColumn":21,"suggestions":"202"},{"ruleId":"192","severity":1,"message":"203","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":26},{"ruleId":"192","severity":1,"message":"204","line":1,"column":28,"nodeType":"194","messageId":"195","endLine":1,"endColumn":34},{"ruleId":"192","severity":1,"message":"205","line":1,"column":36,"nodeType":"194","messageId":"195","endLine":1,"endColumn":46},{"ruleId":"192","severity":1,"message":"206","line":3,"column":10,"nodeType":"194","messageId":"195","endLine":3,"endColumn":21},{"ruleId":"192","severity":1,"message":"204","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":33},{"ruleId":"192","severity":1,"message":"207","line":6,"column":8,"nodeType":"194","messageId":"195","endLine":6,"endColumn":13},{"ruleId":"192","severity":1,"message":"198","line":11,"column":32,"nodeType":"194","messageId":"195","endLine":11,"endColumn":48},{"ruleId":"192","severity":1,"message":"208","line":23,"column":5,"nodeType":"194","messageId":"195","endLine":23,"endColumn":14},{"ruleId":"192","severity":1,"message":"209","line":24,"column":5,"nodeType":"194","messageId":"195","endLine":24,"endColumn":15},{"ruleId":"199","severity":1,"message":"210","line":29,"column":3,"nodeType":"194","endLine":29,"endColumn":12,"suggestions":"211"},{"ruleId":"192","severity":1,"message":"212","line":22,"column":5,"nodeType":"194","messageId":"195","endLine":22,"endColumn":20},{"ruleId":"199","severity":1,"message":"213","line":76,"column":6,"nodeType":"201","endLine":76,"endColumn":8,"suggestions":"214"},{"ruleId":"188","replacedBy":"215"},{"ruleId":"190","replacedBy":"216"},{"ruleId":"188","replacedBy":"217"},{"ruleId":"190","replacedBy":"218"},{"ruleId":"199","severity":1,"message":"219","line":219,"column":6,"nodeType":"201","endLine":219,"endColumn":8,"suggestions":"220"},{"ruleId":"188","replacedBy":"221"},{"ruleId":"190","replacedBy":"222"},{"ruleId":"192","severity":1,"message":"203","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":26},{"ruleId":"192","severity":1,"message":"204","line":1,"column":28,"nodeType":"194","messageId":"195","endLine":1,"endColumn":34},{"ruleId":"192","severity":1,"message":"205","line":1,"column":36,"nodeType":"194","messageId":"195","endLine":1,"endColumn":46},{"ruleId":"192","severity":1,"message":"206","line":3,"column":10,"nodeType":"194","messageId":"195","endLine":3,"endColumn":21},{"ruleId":"192","severity":1,"message":"223","line":10,"column":10,"nodeType":"194","messageId":"195","endLine":10,"endColumn":21},{"ruleId":"192","severity":1,"message":"224","line":10,"column":23,"nodeType":"194","messageId":"195","endLine":10,"endColumn":37},{"ruleId":"192","severity":1,"message":"225","line":13,"column":9,"nodeType":"194","messageId":"195","endLine":13,"endColumn":19},{"ruleId":"226","severity":1,"message":"227","line":91,"column":38,"nodeType":"228","messageId":"229","endLine":91,"endColumn":40},{"ruleId":"192","severity":1,"message":"230","line":23,"column":5,"nodeType":"194","messageId":"195","endLine":23,"endColumn":7},{"ruleId":"192","severity":1,"message":"212","line":30,"column":5,"nodeType":"194","messageId":"195","endLine":30,"endColumn":20},{"ruleId":"192","severity":1,"message":"231","line":36,"column":7,"nodeType":"194","messageId":"195","endLine":36,"endColumn":18},{"ruleId":"192","severity":1,"message":"232","line":37,"column":7,"nodeType":"194","messageId":"195","endLine":37,"endColumn":23},{"ruleId":"192","severity":1,"message":"233","line":38,"column":7,"nodeType":"194","messageId":"195","endLine":38,"endColumn":25},{"ruleId":"199","severity":1,"message":"234","line":142,"column":6,"nodeType":"201","endLine":142,"endColumn":24,"suggestions":"235"},{"ruleId":"199","severity":1,"message":"236","line":342,"column":6,"nodeType":"201","endLine":342,"endColumn":40,"suggestions":"237"},{"ruleId":"192","severity":1,"message":"204","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":33},{"ruleId":"192","severity":1,"message":"207","line":6,"column":8,"nodeType":"194","messageId":"195","endLine":6,"endColumn":13},{"ruleId":"192","severity":1,"message":"198","line":11,"column":32,"nodeType":"194","messageId":"195","endLine":11,"endColumn":48},{"ruleId":"192","severity":1,"message":"208","line":23,"column":5,"nodeType":"194","messageId":"195","endLine":23,"endColumn":14},{"ruleId":"192","severity":1,"message":"209","line":24,"column":5,"nodeType":"194","messageId":"195","endLine":24,"endColumn":15},{"ruleId":"199","severity":1,"message":"210","line":29,"column":3,"nodeType":"194","endLine":29,"endColumn":12,"suggestions":"238"},{"ruleId":"239","severity":2,"message":"240","line":6,"column":55,"nodeType":"194","messageId":"241","endLine":6,"endColumn":66},{"ruleId":"239","severity":2,"message":"240","line":9,"column":57,"nodeType":"194","messageId":"241","endLine":9,"endColumn":68},{"ruleId":"239","severity":2,"message":"240","line":15,"column":24,"nodeType":"194","messageId":"241","endLine":15,"endColumn":35},{"ruleId":"239","severity":2,"message":"240","line":22,"column":24,"nodeType":"194","messageId":"241","endLine":22,"endColumn":35},{"ruleId":"239","severity":2,"message":"240","line":29,"column":24,"nodeType":"194","messageId":"241","endLine":29,"endColumn":35},{"ruleId":"192","severity":1,"message":"205","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":27},{"ruleId":"192","severity":1,"message":"203","line":1,"column":39,"nodeType":"194","messageId":"195","endLine":1,"endColumn":48},{"ruleId":"192","severity":1,"message":"204","line":1,"column":50,"nodeType":"194","messageId":"195","endLine":1,"endColumn":56},{"ruleId":"192","severity":1,"message":"203","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":26},{"ruleId":"192","severity":1,"message":"242","line":13,"column":9,"nodeType":"194","messageId":"195","endLine":13,"endColumn":22},{"ruleId":"226","severity":1,"message":"227","line":43,"column":47,"nodeType":"228","messageId":"229","endLine":43,"endColumn":49},{"ruleId":"188","replacedBy":"243"},{"ruleId":"190","replacedBy":"244"},{"ruleId":"192","severity":1,"message":"245","line":9,"column":9,"nodeType":"194","messageId":"195","endLine":9,"endColumn":17},{"ruleId":"199","severity":1,"message":"246","line":32,"column":6,"nodeType":"201","endLine":32,"endColumn":19,"suggestions":"247"},"no-native-reassign",["248"],"no-negated-in-lhs",["249"],"no-unused-vars","'setEthereumPrice' is assigned a value but never used.","Identifier","unusedVar","'greenOrRed' is assigned a value but never used.","'coinChartData' is assigned a value but never used.","'setCoinChartData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'lastPrice'. Either include it or remove the dependency array.","ArrayExpression",["250"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'useContext' is defined but never used.","'createChart' is defined but never used.","'axios' is defined but never used.","'marketCap' is assigned a value but never used.","'volume24hr' is assigned a value but never used.","React Hook useEffect contains a call to 'setSparklineColor'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [percentChange7d] as a second argument to the useEffect Hook.",["251"],"'percentChange7d' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveChartData'. Either include it or remove the dependency array.",["252"],["248"],["249"],["248"],["249"],"React Hook useEffect has missing dependencies: 'fetchAllRankedCoins' and 'fetchInitialCoinSet'. Either include them or remove the dependency array.",["253"],["248"],["249"],"'searchInput' is assigned a value but never used.","'setSearchInput' is assigned a value but never used.","'sortByName' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'id' is assigned a value but never used.","'globalChart' is assigned a value but never used.","'globalLineSeries' is assigned a value but never used.","'globalVolumeSeries' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'retrieveChartData' and 'timeFrameToFetch'. Either include them or remove the dependency array.",["254"],"React Hook useEffect has missing dependencies: 'renderChart', 'retrieveChartData', 'timeFrameToFetch', and 'updateChartData'. Either include them or remove the dependency array.",["255"],["256"],"no-undef","'handleClick' is not defined.","undef","'fetchArticles' is assigned a value but never used.",["248"],["249"],"'showForm' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setFormVisible'. Either include it or remove the dependency array. If 'setFormVisible' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["257"],"no-global-assign","no-unsafe-negation",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"260","fix":"270"},{"desc":"271","fix":"272"},"Update the dependencies array to be: [ethereumPrice, lastPrice]",{"range":"273","text":"274"},"Add dependencies array: [percentChange7d]",{"range":"275","text":"276"},"Update the dependencies array to be: [retrieveChartData]",{"range":"277","text":"278"},"Update the dependencies array to be: [fetchAllRankedCoins, fetchInitialCoinSet]",{"range":"279","text":"280"},"Update the dependencies array to be: [retrieveChartData, selectedCoinData, timeFrameToFetch]",{"range":"281","text":"282"},"Update the dependencies array to be: [coinChartData, renderChart, retrieveChartData, timeFrameToFetch, updateChartData, viewFieldDuration]",{"range":"283","text":"284"},{"range":"285","text":"276"},"Update the dependencies array to be: [formVisible, setFormVisible]",{"range":"286","text":"287"},[845,860],"[ethereumPrice, lastPrice]",[982,982],", [percentChange7d]",[2906,2908],"[retrieveChartData]",[8407,8409],"[fetchAllRankedCoins, fetchInitialCoinSet]",[4960,4978],"[retrieveChartData, selectedCoinData, timeFrameToFetch]",[11579,11613],"[coinChartData, renderChart, retrieveChartData, timeFrameToFetch, updateChartData, viewFieldDuration]",[982,982],[1072,1085],"[formVisible, setFormVisible]"]