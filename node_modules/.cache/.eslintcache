[{"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/index.js":"1","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/App.js":"2","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/reportWebVitals.js":"3","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/Coinlist.js":"4","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/CoinRow.js":"5","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/context/context.js":"6","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/Chart.js":"7","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/SearchBar.js":"8","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/index.js":"9","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/App.js":"10","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/reportWebVitals.js":"11","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/Coinlist.js":"12","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/Chart.js":"13","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/context/context.js":"14","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/CoinRow.js":"15","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/chartControls.js":"16","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/ChartControls.js":"17","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/NewsFeed.js":"18","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/SearchBar.js":"19","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/ConditionalRenderList.js":"20"},{"size":500,"mtime":1649433274077,"results":"21","hashOfConfig":"22"},{"size":7156,"mtime":1649791252271,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1649433274077,"results":"24","hashOfConfig":"22"},{"size":1498,"mtime":1649772784244,"results":"25","hashOfConfig":"22"},{"size":1979,"mtime":1649789719211,"results":"26","hashOfConfig":"22"},{"size":90,"mtime":1649629322579,"results":"27","hashOfConfig":"22"},{"size":6879,"mtime":1649796516438,"results":"28","hashOfConfig":"22"},{"size":557,"mtime":1649769183556,"results":"29","hashOfConfig":"22"},{"size":500,"mtime":1649433274077,"results":"30","hashOfConfig":"31"},{"size":6078,"mtime":1650128326372,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1649433274077,"results":"33","hashOfConfig":"31"},{"size":1197,"mtime":1650119268479,"results":"34","hashOfConfig":"31"},{"size":12217,"mtime":1650054645754,"results":"35","hashOfConfig":"31"},{"size":90,"mtime":1649629322579,"results":"36","hashOfConfig":"31"},{"size":2017,"mtime":1650056470915,"results":"37","hashOfConfig":"31"},{"size":2110,"mtime":1650031794326,"results":"38","hashOfConfig":"31"},{"size":2449,"mtime":1650056602777,"results":"39","hashOfConfig":"31"},{"size":2332,"mtime":1650080073797,"results":"40","hashOfConfig":"31"},{"size":732,"mtime":1650129524810,"results":"41","hashOfConfig":"31"},{"size":1099,"mtime":1650130237087,"results":"42","hashOfConfig":"31"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1pkojmz",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"5w18n",{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/index.js",[],[],["112","113"],"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/App.js",["114","115","116","117","118"],[],"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/reportWebVitals.js",[],[],"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/Coinlist.js",["119","120","121","122"],[],"import React, { useEffect, useRef, useContext, useState } from \"react\";\n//import Context from \"../context/context\";\nimport { createChart } from \"lightweight-charts\";\nimport CoinRow from \"./CoinRow\";\n\nimport \"./coinlist.css\";\n\nexport default function Coinlist(props) {\n  // const { coinData } = useContext(Context);\n  const [searchInput, setSearchInput] = useState();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"submitted\");\n  };\n\n  return (\n    <>\n      <div className=\"coinlist-controls\">\n        {/* form */}\n        <form className=\"search-form\" onSubmit={handleSubmit}>\n          <input\n            onChange={(e) => {\n              setSearchInput(e.target.value);\n            }}\n            value={searchInput}\n            type=\"text\"\n            placeholder=\"Search cryptocurrency\"\n          />\n          <button>Submit</button>\n        </form>\n        {/* sorting buttons */}\n        <div className=\"sorting-buttons\">\n          <div>Rank</div>\n          <div>Volume</div>\n          <div>Trending</div>\n          <div>USD</div>\n        </div>\n        {/* table headers */}\n        <div className=\"coinlist-header\">\n          <div>Rank</div>\n          <div>Name</div>\n          <div>Price</div>\n          <div>24hr%</div>\n          <div>7d%</div>\n          <div>Last 7 Days</div>\n        </div>\n      </div>\n      <div className=\"coinlist\">\n        {props.coinData?.map((coin) => {\n          return <CoinRow coin={coin} />;\n        })}\n      </div>\n    </>\n  );\n}\n","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/CoinRow.js",["123","124","125","126","127","128"],[],"import React, { useState, useRef, useContext, useEffect } from \"react\";\nimport Context from \"../context/context\";\n// import { createChart } from \"lightweight-charts\";\nimport { NavLink } from \"react-router-dom\";\nimport { Sparklines, SparklinesLine } from \"react-sparklines\";\nimport axios from \"axios\";\nimport \"./coinrow.css\";\n\nexport default function CoinRow(props) {\n  const [sparklineColor, setSparklineColor] = useState();\n  const { setSelectedCoinData, setCoinChartData } = useContext(Context);\n  //const isMounted = useRef(false);\n  // console.log(props);\n  // const { name, price, percentChange, data } = props.coin;\n  const {\n    rank,\n    image,\n    name,\n    symbol,\n    price,\n    percentChange24hr,\n    percentChange7d,\n    marketCap,\n    volume24hr,\n    sparkline,\n  } = props.coin;\n\n  //colors sparkline chart based on 7d % change\n  useEffect(() => {\n    if (percentChange7d > 0) {\n      setSparklineColor(\"green\");\n    } else {\n      setSparklineColor(\"red\");\n    }\n  });\n\n  return (\n    <div className=\"coin-row\">\n      <div>{rank}</div>\n      <div>\n        <img src={image} alt=\"crypto-icon\" className=\"icon\"></img>\n      </div>\n      <NavLink\n        to={`/currencies/${name}`}\n        key={rank}\n        onClick={() => {\n          setSelectedCoinData(props.coin);\n          // retrieveDetailedChartData(name);\n        }}\n      >\n        {name}\n      </NavLink>\n      <div>{symbol}</div>\n      <div>${price}</div>\n      <div className=\"percent-change\">{percentChange24hr}</div>\n      <div className=\"percent-change\">{percentChange7d}</div>\n      {/* <div>${marketCap}</div>\n      <div>${volume24hr}</div> */}\n      {/* <div className=\"chart\"></div> */}\n      <Sparklines\n        // className=\"sparkline-container\"\n        data={sparkline}\n        // width={100}\n        // height={20}\n        // margin={5}\n      >\n        <SparklinesLine\n          style={{ strokeWidth: 3, stroke: sparklineColor, fill: \"none\" }}\n        />\n      </Sparklines>\n    </div>\n  );\n}\n","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/context/context.js",[],[],"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/Chart.js",["129","130"],[],"import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport Context from \"../context/context\";\nimport { createChart } from \"lightweight-charts\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport \"./chart.css\";\nmoment().format();\n\nexport default function Chart() {\n  // const { coinChartData } = useContext(Context);\n  const { selectedCoinData } = useContext(Context);\n  const [coinChartData, setCoinChartData] = useState();\n  const isMounted = useRef(false);\n\n  const {\n    rank,\n    image,\n    name,\n    symbol,\n    price,\n    percentChange24hr,\n    percentChange7d,\n    marketCap,\n    volume24hr,\n  } = selectedCoinData;\n  const coinName = selectedCoinData.name;\n\n  const retrieveChartData = (duration, momentFormat) => {\n    const coinLowercase = coinName.charAt(0).toLowerCase() + coinName.slice(1);\n    axios\n      .get(\n        //get single coin price\n        // \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\"\n        //!has converted prices for coins\n        //  'https://api.coingecko.com/api/v3/coins/bitcoin/tickers'\n        //!has description of the coin\n        //\"https://api.coingecko.com/api/v3/coins/bitcoin\"\n        //!historical price data (for max duration) for a particular coin\n        `https://api.coingecko.com/api/v3/coins/${coinLowercase}/market_chart?vs_currency=usd&days=${duration}`\n        //list all coins (tens of thousands)\n        // \"https://api.coingecko.com/api/v3/coins/list\"\n        //get market cap for a smattering of coins (not sure if all)\n        // \"https://api.coingecko.com/api/v3/global\"\n        //have a search bar for individual coins (could show only if it in the list of coins I am displaying), has market cap rank and images links\n        // \"https://api.coingecko.com/api/v3/search?query=bitcoin\"\n        //list of supported and currencies (not exactly sure what this means)\n        // \"https://api.coingecko.com/api/v3/simple/supported_vs_currencies\"\n      )\n      .then((response) => {\n        const data = response.data;\n        // console.log(data);\n        const priceData = data.prices;\n        const priceDataArray = [];\n        priceData.forEach((priceArray) => {\n          priceDataArray.push({\n            time: Math.floor(priceArray[0] / 1000),\n            // time: moment(priceArray[0]).format(momentFormat),\n            value: priceArray[1],\n          });\n        });\n        const volumeData = data.total_volumes;\n        const volumeDataArray = [];\n        volumeData.forEach((volumeArray) => {\n          volumeDataArray.push({\n            time: Math.floor(volumeArray[0] / 1000),\n            // time: moment(volumeArray[0]).format(momentFormat),\n            value: volumeArray[1],\n          });\n        });\n        setCoinChartData({ prices: priceDataArray, volume: volumeDataArray });\n      });\n  };\n\n  useEffect(() => {\n    retrieveChartData(\"1\" /*, \"MM/DD/YYYY\"*/);\n  }, []);\n\n  // useEffect(() => {\n  //   let chartElement = document.querySelector(\".tv-lightweight-charts\");\n  //   if (chartElement) {\n  //     console.log(\"here\");\n  //     chartElement.setAttribute(\"id\", \"chartElement\");\n  //   }\n  // });\n\n  useEffect(() => {\n    if (isMounted.current) {\n      const chart = createChart(document.querySelector(\".chart\"), {\n        width: 500,\n        height: 400,\n        rightPriceScale: {\n          visible: true,\n        },\n        grid: {\n          vertLines: {\n            visible: true,\n          },\n          horzLines: {\n            visible: true,\n          },\n        },\n        crosshair: {\n          vertLine: {\n            visible: true,\n          },\n          horzLine: {\n            visible: true,\n          },\n        },\n        layout: {\n          backgroundColor: \"white\",\n        },\n        // timeScale: {\n        //   visible: true,\n        //   /*timeVisible: true secondsVisible: true,*/\n        // },\n\n        timeScale: {\n          timeVisible: true,\n          secondsVisible: false,\n        },\n        // borderColor: \"green\",\n        // timeVisible: false,\n        // priceScaleMode: percentChange,\n      });\n      //fits timescale to the content\n      // chart.timeScale().fitContent();\n\n      const lineSeries = chart\n        .addLineSeries\n        //used to set y-axis scale (not quite sure exactly how it works)\n        //   {\n        //   autoscaleInfoProvider: () => ({\n        //     priceRange: {\n        //       minValue: 0,\n        //       maxValue: 100,\n        //     },\n        //   }),\n        // }\n        ();\n      lineSeries.applyOptions({\n        color: \"red\",\n        lineWidth: 4,\n        //crosshair dot\n        crosshairMarkerVisible: true,\n        //both of these are similar\n        lastValueVisible: true,\n        priceLineVisible: true,\n        //can make the series disapper (labels remain)\n        visible: true,\n        //\n      });\n      // const customFormatter = (time, tickMarkType, locale) => {\n      //   // tickMarkType: \"year\";\n      // };\n      lineSeries.setData(coinChartData.prices);\n      //   window.addEventListener(\"resize\", handleResize);\n\n      const volumeSeries = chart.addHistogramSeries({\n        color: \"#26a69a\",\n        priceFormat: {\n          type: \"volume\",\n        },\n        priceScaleId: \"\",\n        scaleMargins: {\n          top: 0.8,\n          bottom: 0,\n        },\n      });\n      //volume series\n      volumeSeries.setData(coinChartData.volume);\n    } else {\n      isMounted.current = true;\n    }\n  }, [coinChartData]);\n\n  return (\n    <>\n      <div className=\"coin-details-flex\">\n        <img className=\"icon\" src={image} alt=\"icon\" />\n        <div>{name}</div>\n        <div>{symbol}</div>\n        <div>{rank}</div>\n        <div>${price}</div>\n        <div>{percentChange24hr}%</div>\n        <div>{marketCap}</div>\n        <div>{volume24hr}</div>\n      </div>\n      <div className=\"chart-with-controls-container\">\n        <div className=\"chart-controls\">\n          <div\n            value=\"day\"\n            onClick={() => {\n              retrieveChartData(\"1\", \"HH:mm:ss\");\n            }}\n          >\n            Day\n          </div>\n          <div\n            value=\"week\"\n            onClick={() => {\n              retrieveChartData(\"7\", \"MM/DD/YYYY\");\n            }}\n          >\n            Week\n          </div>\n          <div\n            value=\"month\"\n            onClick={() => {\n              retrieveChartData(\"30\", \"MM/DD/YYYY\");\n            }}\n          >\n            Month\n          </div>\n          <div\n            value=\"year\"\n            onClick={() => {\n              retrieveChartData(\"365\", \"MM/DD/YYYY\");\n            }}\n          >\n            Year\n          </div>\n          <div\n            value=\"all\"\n            onClick={() => {\n              retrieveChartData(\"max\", \"MM/DD/YYYY\");\n            }}\n          >\n            All\n          </div>\n        </div>\n        <div className=\"chart\"></div>\n      </div>\n    </>\n  );\n}\n","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/SearchBar.js",[],[],["131","132"],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/index.js",[],[],["133","134"],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/App.js",["135","136","137"],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/reportWebVitals.js",[],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/Coinlist.js",["138","139","140","141","142","143","144"],[],"import React, { useEffect, useRef, useContext, useState } from \"react\";\n//import Context from \"../context/context\";\nimport { createChart } from \"lightweight-charts\";\nimport SearchBar from \"./SearchBar\";\nimport CoinRow from \"./CoinRow\";\n\nimport \"./coinlist.css\";\n\nexport default function Coinlist(props) {\n  // const { coinData } = useContext(Context);\n  const [searchInput, setSearchInput] = useState();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"submitted\");\n  };\n\n  return (\n    <>\n      <div className=\"coinlist-controls\">\n        <SearchBar />\n        {/* sorting buttons */}\n        <div className=\"sorting-buttons\">\n          <div>Rank</div>\n          <div>Volume</div>\n          <div>Trending</div>\n          <div>USD</div>\n        </div>\n        {/* table headers */}\n        <div className=\"coinlist-header\">\n          <div>Rank</div>\n          <div>Name</div>\n          <div>Price</div>\n          <div>24hr%</div>\n          <div>7d%</div>\n          <div>Last 7 Days</div>\n        </div>\n      </div>\n      <div className=\"coinlist\">\n        {props.coinData?.map((coin) => {\n          return <CoinRow coin={coin} />;\n        })}\n      </div>\n    </>\n  );\n}\n",["145","146"],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/Chart.js",["147","148","149","150","151","152","153"],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/context/context.js",[],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/CoinRow.js",["154","155","156","157","158","159"],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/chartControls.js",["160","161","162","163","164"],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/ChartControls.js",["165","166","167"],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/NewsFeed.js",["168","169"],[],"import React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport \"./newsFeed.css\";\n\nexport default function NewsFeed() {\n  const [articles, setArticles] = useState();\n\n  //const currentDate = moment().format(\"YYYY-MM-DD\");\n  const threeDaysAgo = moment().subtract(3, \"d\").format(\"YYYY-MM-DD\");\n\n  //function calling api and storing article data in state\n  const fetchArticles = () => {\n    axios\n      .get(\n        //list all coins (tens of thousands)\n        `https://newsapi.org/v2/everything?q=crypto&from=${threeDaysAgo}&language=en&apiKey=69563e91b17745efad0051f4c02a3f94`\n      )\n      .then((response) => {\n        const data = response.data;\n        // console.log(data);\n\n        // const newsArticleArray = [];\n        // newsArticles.forEach((article) => {\n        //   newsArticleArray.push({\n        //     author: article.author,\n        //     content: article.content, //maybe not needed\n        //     description: article.author,\n        //     publishedAt:: article.publishedAt,\n        //     symbol: coin.symbol,\n\n        //     price: coin.current_price.toLocaleString(\"en-US\"),\n        //     percentChange24hr:\n        //       coin.price_change_percentage_24h_in_currency.toFixed(2),\n        //     percentChange7d:\n        //       coin.price_change_percentage_7d_in_currency.toFixed(2),\n        //     marketCap: coin.market_cap.toLocaleString(\"en-US\"),\n        //     volume24hr: coin.total_volume.toLocaleString(\"en-US\"),\n        //     // sparkline: coin.sparkline_in_7d,\n        //     sparkline: roundSparklineData(coin.sparkline_in_7d),\n        //   });\n\n        setArticles(data.articles);\n      });\n  };\n\n  //fetch articles when component mounts\n  // useEffect(() => {\n  //   fetchArticles();\n  // }, []);\n\n  //maps articles stored in state, returning article element\n  const articlesList = articles?.map((article) => {\n    return (\n      <div className=\"article\" key={Math.floor(Math.random() * 10000)}>\n        <img src={article.urlToImage} alt=\"article\"></img>\n        <div className=\"article-title\">{article.title}</div>\n        <div>{article.description}</div>\n        <div>{article.source.name}</div>\n        <div>{article.publishedAt}</div>\n        <a href={article.url}>Link</a>\n      </div>\n    );\n  });\n\n  return <>{articlesList}</>;\n}\n","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/SearchBar.js",[],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/ConditionalRenderList.js",[],[],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":10,"column":25,"nodeType":"176","messageId":"177","endLine":10,"endColumn":41},{"ruleId":"174","severity":1,"message":"178","line":12,"column":10,"nodeType":"176","messageId":"177","endLine":12,"endColumn":20},{"ruleId":"174","severity":1,"message":"179","line":15,"column":10,"nodeType":"176","messageId":"177","endLine":15,"endColumn":23},{"ruleId":"174","severity":1,"message":"180","line":15,"column":25,"nodeType":"176","messageId":"177","endLine":15,"endColumn":41},{"ruleId":"181","severity":1,"message":"182","line":25,"column":6,"nodeType":"183","endLine":25,"endColumn":21,"suggestions":"184"},{"ruleId":"174","severity":1,"message":"185","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"186","line":1,"column":28,"nodeType":"176","messageId":"177","endLine":1,"endColumn":34},{"ruleId":"174","severity":1,"message":"187","line":1,"column":36,"nodeType":"176","messageId":"177","endLine":1,"endColumn":46},{"ruleId":"174","severity":1,"message":"188","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":21},{"ruleId":"174","severity":1,"message":"186","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":33},{"ruleId":"174","severity":1,"message":"189","line":6,"column":8,"nodeType":"176","messageId":"177","endLine":6,"endColumn":13},{"ruleId":"174","severity":1,"message":"180","line":11,"column":32,"nodeType":"176","messageId":"177","endLine":11,"endColumn":48},{"ruleId":"174","severity":1,"message":"190","line":23,"column":5,"nodeType":"176","messageId":"177","endLine":23,"endColumn":14},{"ruleId":"174","severity":1,"message":"191","line":24,"column":5,"nodeType":"176","messageId":"177","endLine":24,"endColumn":15},{"ruleId":"181","severity":1,"message":"192","line":29,"column":3,"nodeType":"176","endLine":29,"endColumn":12,"suggestions":"193"},{"ruleId":"174","severity":1,"message":"194","line":22,"column":5,"nodeType":"176","messageId":"177","endLine":22,"endColumn":20},{"ruleId":"181","severity":1,"message":"195","line":76,"column":6,"nodeType":"183","endLine":76,"endColumn":8,"suggestions":"196"},{"ruleId":"170","replacedBy":"197"},{"ruleId":"172","replacedBy":"198"},{"ruleId":"170","replacedBy":"199"},{"ruleId":"172","replacedBy":"200"},{"ruleId":"174","severity":1,"message":"201","line":34,"column":9,"nodeType":"176","messageId":"177","endLine":34,"endColumn":28},{"ruleId":"174","severity":1,"message":"202","line":65,"column":9,"nodeType":"176","messageId":"177","endLine":65,"endColumn":27},{"ruleId":"181","severity":1,"message":"203","line":132,"column":6,"nodeType":"183","endLine":132,"endColumn":16,"suggestions":"204"},{"ruleId":"174","severity":1,"message":"185","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"186","line":1,"column":28,"nodeType":"176","messageId":"177","endLine":1,"endColumn":34},{"ruleId":"174","severity":1,"message":"187","line":1,"column":36,"nodeType":"176","messageId":"177","endLine":1,"endColumn":46},{"ruleId":"174","severity":1,"message":"188","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":21},{"ruleId":"174","severity":1,"message":"205","line":11,"column":10,"nodeType":"176","messageId":"177","endLine":11,"endColumn":21},{"ruleId":"174","severity":1,"message":"206","line":11,"column":23,"nodeType":"176","messageId":"177","endLine":11,"endColumn":37},{"ruleId":"174","severity":1,"message":"207","line":13,"column":9,"nodeType":"176","messageId":"177","endLine":13,"endColumn":21},{"ruleId":"170","replacedBy":"208"},{"ruleId":"172","replacedBy":"209"},{"ruleId":"174","severity":1,"message":"210","line":23,"column":5,"nodeType":"176","messageId":"177","endLine":23,"endColumn":7},{"ruleId":"174","severity":1,"message":"194","line":30,"column":5,"nodeType":"176","messageId":"177","endLine":30,"endColumn":20},{"ruleId":"174","severity":1,"message":"211","line":36,"column":7,"nodeType":"176","messageId":"177","endLine":36,"endColumn":18},{"ruleId":"174","severity":1,"message":"212","line":37,"column":7,"nodeType":"176","messageId":"177","endLine":37,"endColumn":23},{"ruleId":"174","severity":1,"message":"213","line":38,"column":7,"nodeType":"176","messageId":"177","endLine":38,"endColumn":25},{"ruleId":"181","severity":1,"message":"214","line":142,"column":6,"nodeType":"183","endLine":142,"endColumn":24,"suggestions":"215"},{"ruleId":"181","severity":1,"message":"216","line":342,"column":6,"nodeType":"183","endLine":342,"endColumn":40,"suggestions":"217"},{"ruleId":"174","severity":1,"message":"186","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":33},{"ruleId":"174","severity":1,"message":"189","line":6,"column":8,"nodeType":"176","messageId":"177","endLine":6,"endColumn":13},{"ruleId":"174","severity":1,"message":"180","line":11,"column":32,"nodeType":"176","messageId":"177","endLine":11,"endColumn":48},{"ruleId":"174","severity":1,"message":"190","line":23,"column":5,"nodeType":"176","messageId":"177","endLine":23,"endColumn":14},{"ruleId":"174","severity":1,"message":"191","line":24,"column":5,"nodeType":"176","messageId":"177","endLine":24,"endColumn":15},{"ruleId":"181","severity":1,"message":"192","line":29,"column":3,"nodeType":"176","endLine":29,"endColumn":12,"suggestions":"218"},{"ruleId":"219","severity":2,"message":"220","line":6,"column":55,"nodeType":"176","messageId":"221","endLine":6,"endColumn":66},{"ruleId":"219","severity":2,"message":"220","line":9,"column":57,"nodeType":"176","messageId":"221","endLine":9,"endColumn":68},{"ruleId":"219","severity":2,"message":"220","line":15,"column":24,"nodeType":"176","messageId":"221","endLine":15,"endColumn":35},{"ruleId":"219","severity":2,"message":"220","line":22,"column":24,"nodeType":"176","messageId":"221","endLine":22,"endColumn":35},{"ruleId":"219","severity":2,"message":"220","line":29,"column":24,"nodeType":"176","messageId":"221","endLine":29,"endColumn":35},{"ruleId":"174","severity":1,"message":"187","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":27},{"ruleId":"174","severity":1,"message":"185","line":1,"column":39,"nodeType":"176","messageId":"177","endLine":1,"endColumn":48},{"ruleId":"174","severity":1,"message":"186","line":1,"column":50,"nodeType":"176","messageId":"177","endLine":1,"endColumn":56},{"ruleId":"174","severity":1,"message":"185","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"222","line":13,"column":9,"nodeType":"176","messageId":"177","endLine":13,"endColumn":22},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-unused-vars","'setEthereumPrice' is assigned a value but never used.","Identifier","unusedVar","'greenOrRed' is assigned a value but never used.","'coinChartData' is assigned a value but never used.","'setCoinChartData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'lastPrice'. Either include it or remove the dependency array.","ArrayExpression",["225"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'useContext' is defined but never used.","'createChart' is defined but never used.","'axios' is defined but never used.","'marketCap' is assigned a value but never used.","'volume24hr' is assigned a value but never used.","React Hook useEffect contains a call to 'setSparklineColor'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [percentChange7d] as a second argument to the useEffect Hook.",["226"],"'percentChange7d' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveChartData'. Either include it or remove the dependency array.",["227"],["223"],["224"],["223"],["224"],"'fetchInitialCoinSet' is assigned a value but never used.","'fetchLargerCoinSet' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getIdsAfterPageLoad'. Either include it or remove the dependency array.",["228"],"'searchInput' is assigned a value but never used.","'setSearchInput' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.",["223"],["224"],"'id' is assigned a value but never used.","'globalChart' is assigned a value but never used.","'globalLineSeries' is assigned a value but never used.","'globalVolumeSeries' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'retrieveChartData' and 'timeFrameToFetch'. Either include them or remove the dependency array.",["229"],"React Hook useEffect has missing dependencies: 'renderChart', 'retrieveChartData', 'timeFrameToFetch', and 'updateChartData'. Either include them or remove the dependency array.",["230"],["231"],"no-undef","'handleClick' is not defined.","undef","'fetchArticles' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"234","fix":"244"},"Update the dependencies array to be: [ethereumPrice, lastPrice]",{"range":"245","text":"246"},"Add dependencies array: [percentChange7d]",{"range":"247","text":"248"},"Update the dependencies array to be: [retrieveChartData]",{"range":"249","text":"250"},"Update the dependencies array to be: [coinData, getIdsAfterPageLoad]",{"range":"251","text":"252"},"Update the dependencies array to be: [retrieveChartData, selectedCoinData, timeFrameToFetch]",{"range":"253","text":"254"},"Update the dependencies array to be: [coinChartData, renderChart, retrieveChartData, timeFrameToFetch, updateChartData, viewFieldDuration]",{"range":"255","text":"256"},{"range":"257","text":"248"},[845,860],"[ethereumPrice, lastPrice]",[982,982],", [percentChange7d]",[2906,2908],"[retrieveChartData]",[4851,4861],"[coinData, getIdsAfterPageLoad]",[4960,4978],"[retrieveChartData, selectedCoinData, timeFrameToFetch]",[11579,11613],"[coinChartData, renderChart, retrieveChartData, timeFrameToFetch, updateChartData, viewFieldDuration]",[982,982]]