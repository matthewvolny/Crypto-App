[{"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/index.js":"1","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/App.js":"2","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/reportWebVitals.js":"3","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/Coinlist.js":"4","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/CoinRow.js":"5","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/context/context.js":"6","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/Chart.js":"7","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/SearchBar.js":"8","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/index.js":"9","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/App.js":"10","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/reportWebVitals.js":"11","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/Coinlist.js":"12","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/Chart.js":"13","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/context/context.js":"14","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/CoinRow.js":"15","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/chartControls.js":"16","/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/ChartControls.js":"17"},{"size":500,"mtime":1649433274077,"results":"18","hashOfConfig":"19"},{"size":7156,"mtime":1649791252271,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1649433274077,"results":"21","hashOfConfig":"19"},{"size":1498,"mtime":1649772784244,"results":"22","hashOfConfig":"19"},{"size":1979,"mtime":1649789719211,"results":"23","hashOfConfig":"19"},{"size":90,"mtime":1649629322579,"results":"24","hashOfConfig":"19"},{"size":6879,"mtime":1649796516438,"results":"25","hashOfConfig":"19"},{"size":557,"mtime":1649769183556,"results":"26","hashOfConfig":"19"},{"size":500,"mtime":1649433274077,"results":"27","hashOfConfig":"28"},{"size":8365,"mtime":1650056484065,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1649433274077,"results":"30","hashOfConfig":"28"},{"size":1498,"mtime":1649772784244,"results":"31","hashOfConfig":"28"},{"size":12217,"mtime":1650054645754,"results":"32","hashOfConfig":"28"},{"size":90,"mtime":1649629322579,"results":"33","hashOfConfig":"28"},{"size":2017,"mtime":1650056470915,"results":"34","hashOfConfig":"28"},{"size":2110,"mtime":1650031794326,"results":"35","hashOfConfig":"28"},{"size":3112,"mtime":1650056537033,"results":"36","hashOfConfig":"28"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1pkojmz",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"5w18n",{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"69"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/index.js",[],[],["95","96"],"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/App.js",["97","98","99","100","101"],[],"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/reportWebVitals.js",[],[],"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/Coinlist.js",["102","103","104","105"],[],"import React, { useEffect, useRef, useContext, useState } from \"react\";\n//import Context from \"../context/context\";\nimport { createChart } from \"lightweight-charts\";\nimport CoinRow from \"./CoinRow\";\n\nimport \"./coinlist.css\";\n\nexport default function Coinlist(props) {\n  // const { coinData } = useContext(Context);\n  const [searchInput, setSearchInput] = useState();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"submitted\");\n  };\n\n  return (\n    <>\n      <div className=\"coinlist-controls\">\n        {/* form */}\n        <form className=\"search-form\" onSubmit={handleSubmit}>\n          <input\n            onChange={(e) => {\n              setSearchInput(e.target.value);\n            }}\n            value={searchInput}\n            type=\"text\"\n            placeholder=\"Search cryptocurrency\"\n          />\n          <button>Submit</button>\n        </form>\n        {/* sorting buttons */}\n        <div className=\"sorting-buttons\">\n          <div>Rank</div>\n          <div>Volume</div>\n          <div>Trending</div>\n          <div>USD</div>\n        </div>\n        {/* table headers */}\n        <div className=\"coinlist-header\">\n          <div>Rank</div>\n          <div>Name</div>\n          <div>Price</div>\n          <div>24hr%</div>\n          <div>7d%</div>\n          <div>Last 7 Days</div>\n        </div>\n      </div>\n      <div className=\"coinlist\">\n        {props.coinData?.map((coin) => {\n          return <CoinRow coin={coin} />;\n        })}\n      </div>\n    </>\n  );\n}\n","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/CoinRow.js",["106","107","108","109","110","111"],[],"import React, { useState, useRef, useContext, useEffect } from \"react\";\nimport Context from \"../context/context\";\n// import { createChart } from \"lightweight-charts\";\nimport { NavLink } from \"react-router-dom\";\nimport { Sparklines, SparklinesLine } from \"react-sparklines\";\nimport axios from \"axios\";\nimport \"./coinrow.css\";\n\nexport default function CoinRow(props) {\n  const [sparklineColor, setSparklineColor] = useState();\n  const { setSelectedCoinData, setCoinChartData } = useContext(Context);\n  //const isMounted = useRef(false);\n  // console.log(props);\n  // const { name, price, percentChange, data } = props.coin;\n  const {\n    rank,\n    image,\n    name,\n    symbol,\n    price,\n    percentChange24hr,\n    percentChange7d,\n    marketCap,\n    volume24hr,\n    sparkline,\n  } = props.coin;\n\n  //colors sparkline chart based on 7d % change\n  useEffect(() => {\n    if (percentChange7d > 0) {\n      setSparklineColor(\"green\");\n    } else {\n      setSparklineColor(\"red\");\n    }\n  });\n\n  return (\n    <div className=\"coin-row\">\n      <div>{rank}</div>\n      <div>\n        <img src={image} alt=\"crypto-icon\" className=\"icon\"></img>\n      </div>\n      <NavLink\n        to={`/currencies/${name}`}\n        key={rank}\n        onClick={() => {\n          setSelectedCoinData(props.coin);\n          // retrieveDetailedChartData(name);\n        }}\n      >\n        {name}\n      </NavLink>\n      <div>{symbol}</div>\n      <div>${price}</div>\n      <div className=\"percent-change\">{percentChange24hr}</div>\n      <div className=\"percent-change\">{percentChange7d}</div>\n      {/* <div>${marketCap}</div>\n      <div>${volume24hr}</div> */}\n      {/* <div className=\"chart\"></div> */}\n      <Sparklines\n        // className=\"sparkline-container\"\n        data={sparkline}\n        // width={100}\n        // height={20}\n        // margin={5}\n      >\n        <SparklinesLine\n          style={{ strokeWidth: 3, stroke: sparklineColor, fill: \"none\" }}\n        />\n      </Sparklines>\n    </div>\n  );\n}\n","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/context/context.js",[],[],"/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/Chart.js",["112","113"],[],"import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport Context from \"../context/context\";\nimport { createChart } from \"lightweight-charts\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport \"./chart.css\";\nmoment().format();\n\nexport default function Chart() {\n  // const { coinChartData } = useContext(Context);\n  const { selectedCoinData } = useContext(Context);\n  const [coinChartData, setCoinChartData] = useState();\n  const isMounted = useRef(false);\n\n  const {\n    rank,\n    image,\n    name,\n    symbol,\n    price,\n    percentChange24hr,\n    percentChange7d,\n    marketCap,\n    volume24hr,\n  } = selectedCoinData;\n  const coinName = selectedCoinData.name;\n\n  const retrieveChartData = (duration, momentFormat) => {\n    const coinLowercase = coinName.charAt(0).toLowerCase() + coinName.slice(1);\n    axios\n      .get(\n        //get single coin price\n        // \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\"\n        //!has converted prices for coins\n        //  'https://api.coingecko.com/api/v3/coins/bitcoin/tickers'\n        //!has description of the coin\n        //\"https://api.coingecko.com/api/v3/coins/bitcoin\"\n        //!historical price data (for max duration) for a particular coin\n        `https://api.coingecko.com/api/v3/coins/${coinLowercase}/market_chart?vs_currency=usd&days=${duration}`\n        //list all coins (tens of thousands)\n        // \"https://api.coingecko.com/api/v3/coins/list\"\n        //get market cap for a smattering of coins (not sure if all)\n        // \"https://api.coingecko.com/api/v3/global\"\n        //have a search bar for individual coins (could show only if it in the list of coins I am displaying), has market cap rank and images links\n        // \"https://api.coingecko.com/api/v3/search?query=bitcoin\"\n        //list of supported and currencies (not exactly sure what this means)\n        // \"https://api.coingecko.com/api/v3/simple/supported_vs_currencies\"\n      )\n      .then((response) => {\n        const data = response.data;\n        // console.log(data);\n        const priceData = data.prices;\n        const priceDataArray = [];\n        priceData.forEach((priceArray) => {\n          priceDataArray.push({\n            time: Math.floor(priceArray[0] / 1000),\n            // time: moment(priceArray[0]).format(momentFormat),\n            value: priceArray[1],\n          });\n        });\n        const volumeData = data.total_volumes;\n        const volumeDataArray = [];\n        volumeData.forEach((volumeArray) => {\n          volumeDataArray.push({\n            time: Math.floor(volumeArray[0] / 1000),\n            // time: moment(volumeArray[0]).format(momentFormat),\n            value: volumeArray[1],\n          });\n        });\n        setCoinChartData({ prices: priceDataArray, volume: volumeDataArray });\n      });\n  };\n\n  useEffect(() => {\n    retrieveChartData(\"1\" /*, \"MM/DD/YYYY\"*/);\n  }, []);\n\n  // useEffect(() => {\n  //   let chartElement = document.querySelector(\".tv-lightweight-charts\");\n  //   if (chartElement) {\n  //     console.log(\"here\");\n  //     chartElement.setAttribute(\"id\", \"chartElement\");\n  //   }\n  // });\n\n  useEffect(() => {\n    if (isMounted.current) {\n      const chart = createChart(document.querySelector(\".chart\"), {\n        width: 500,\n        height: 400,\n        rightPriceScale: {\n          visible: true,\n        },\n        grid: {\n          vertLines: {\n            visible: true,\n          },\n          horzLines: {\n            visible: true,\n          },\n        },\n        crosshair: {\n          vertLine: {\n            visible: true,\n          },\n          horzLine: {\n            visible: true,\n          },\n        },\n        layout: {\n          backgroundColor: \"white\",\n        },\n        // timeScale: {\n        //   visible: true,\n        //   /*timeVisible: true secondsVisible: true,*/\n        // },\n\n        timeScale: {\n          timeVisible: true,\n          secondsVisible: false,\n        },\n        // borderColor: \"green\",\n        // timeVisible: false,\n        // priceScaleMode: percentChange,\n      });\n      //fits timescale to the content\n      // chart.timeScale().fitContent();\n\n      const lineSeries = chart\n        .addLineSeries\n        //used to set y-axis scale (not quite sure exactly how it works)\n        //   {\n        //   autoscaleInfoProvider: () => ({\n        //     priceRange: {\n        //       minValue: 0,\n        //       maxValue: 100,\n        //     },\n        //   }),\n        // }\n        ();\n      lineSeries.applyOptions({\n        color: \"red\",\n        lineWidth: 4,\n        //crosshair dot\n        crosshairMarkerVisible: true,\n        //both of these are similar\n        lastValueVisible: true,\n        priceLineVisible: true,\n        //can make the series disapper (labels remain)\n        visible: true,\n        //\n      });\n      // const customFormatter = (time, tickMarkType, locale) => {\n      //   // tickMarkType: \"year\";\n      // };\n      lineSeries.setData(coinChartData.prices);\n      //   window.addEventListener(\"resize\", handleResize);\n\n      const volumeSeries = chart.addHistogramSeries({\n        color: \"#26a69a\",\n        priceFormat: {\n          type: \"volume\",\n        },\n        priceScaleId: \"\",\n        scaleMargins: {\n          top: 0.8,\n          bottom: 0,\n        },\n      });\n      //volume series\n      volumeSeries.setData(coinChartData.volume);\n    } else {\n      isMounted.current = true;\n    }\n  }, [coinChartData]);\n\n  return (\n    <>\n      <div className=\"coin-details-flex\">\n        <img className=\"icon\" src={image} alt=\"icon\" />\n        <div>{name}</div>\n        <div>{symbol}</div>\n        <div>{rank}</div>\n        <div>${price}</div>\n        <div>{percentChange24hr}%</div>\n        <div>{marketCap}</div>\n        <div>{volume24hr}</div>\n      </div>\n      <div className=\"chart-with-controls-container\">\n        <div className=\"chart-controls\">\n          <div\n            value=\"day\"\n            onClick={() => {\n              retrieveChartData(\"1\", \"HH:mm:ss\");\n            }}\n          >\n            Day\n          </div>\n          <div\n            value=\"week\"\n            onClick={() => {\n              retrieveChartData(\"7\", \"MM/DD/YYYY\");\n            }}\n          >\n            Week\n          </div>\n          <div\n            value=\"month\"\n            onClick={() => {\n              retrieveChartData(\"30\", \"MM/DD/YYYY\");\n            }}\n          >\n            Month\n          </div>\n          <div\n            value=\"year\"\n            onClick={() => {\n              retrieveChartData(\"365\", \"MM/DD/YYYY\");\n            }}\n          >\n            Year\n          </div>\n          <div\n            value=\"all\"\n            onClick={() => {\n              retrieveChartData(\"max\", \"MM/DD/YYYY\");\n            }}\n          >\n            All\n          </div>\n        </div>\n        <div className=\"chart\"></div>\n      </div>\n    </>\n  );\n}\n","/Users/matthewvolny/Desktop/DigitalCrafts/crypto playing around/binance-api-websocket-tutorial/src/components/SearchBar.js",[],[],["114","115"],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/index.js",[],[],["116","117"],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/App.js",["118","119","120","121","122","123","124","125"],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/reportWebVitals.js",[],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/Coinlist.js",["126","127","128","129"],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/Chart.js",["130","131","132","133","134","135","136"],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/context/context.js",[],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/CoinRow.js",["137","138","139","140","141","142"],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/chartControls.js",["143","144","145","146","147"],[],"/Users/matthewvolny/Desktop/DigitalCrafts/Displayed-Projects/Crypto-App/src/components/ChartControls.js",["148","149","150"],[],"import React, { useContext, useState, useEffect, useRef } from \"react\";\n// import Context from \"../context/context\";\nimport \"./chartControls.css\";\n\nexport default function ChartControls(props) {\n  const [actionClicked, setActionClicked] = useState();\n  //const { actionClicked, setActionClicked } = useContext(Context);\n\n  const dayButton = document.querySelector(\".day\");\n  const weekButton = document.querySelector(\".week\");\n  const monthButton = document.querySelector(\".month\");\n  const yearButton = document.querySelector(\".year\");\n  const allButton = document.querySelector(\".all\");\n\n  const buttonDOMObject = {\n    day: dayButton,\n    week: weekButton,\n    month: monthButton,\n    year: yearButton,\n    all: allButton,\n  };\n\n  //handles player actions, highlights and un-highlights action buttons\n  const handleClick = (viewFieldValue, timeFrameValue, e) => {\n    props.setViewFieldDuration(viewFieldValue);\n    props.setTimeFrameToFetch(timeFrameValue);\n    //\n    if (!actionClicked) {\n      buttonDOMObject[\"day\"].removeAttribute(\"id\");\n      e.target.setAttribute(\"id\", \"clicked\");\n      setActionClicked(e.target.className);\n    } else {\n      //   console.log(buttonDOMObject[actionClicked]);\n      buttonDOMObject[actionClicked].removeAttribute(\"id\");\n      e.target.setAttribute(\"id\", \"clicked\");\n      setActionClicked(e.target.className);\n    }\n  };\n\n  //listen for 1day click coming from CoinRow (to highlight chart control 1day button)\n\n  //!needs some kind of conditional here\n\n  //   const prevActionClickedRef = useRef(false);\n\n  //   useEffect(() => {\n  //     // if (isMounted.current) {\n  //     // console.log(\"row clicked triggers 1day\");\n  //     // console.log(actionClicked);\n  //     // if (prevActionClickedRef == false) {\n  //     //   console.log(\"in if\");\n  //     buttonDOMObject[\"day\"].setAttribute(\"id\", \"clicked\");\n  //     //   prevActionClickedRef.current = actionClicked;\n  //     // }\n  //     //\n  //     // } else {\n  //     //   isMounted.current = true;\n  //     // }\n  //   }, []);\n\n  //!may or may not want to removeAttribute on selecting a new coin\n  //unclicks player action buttons when changing rooms\n  // useEffect(() => {\n  // if (actionClicked) {\n  //   actionDOMObject[actionClicked].removeAttribute(\"id\");\n  // }\n  // }, [props.roomEvaluateDetails]);\n\n  return (\n    <div className=\"chart-controls\">\n      <div\n        className=\"day\"\n        value=\"day\"\n        id=\"clicked\"\n        onClick={(e) => handleClick(\"1\", \"90\", e)}\n      >\n        Day\n      </div>\n      <div\n        className=\"week\"\n        value=\"week\"\n        onClick={(e) => handleClick(\"7\", \"90\", e)}\n      >\n        Week\n      </div>\n      <div\n        className=\"month\"\n        value=\"month\"\n        onClick={(e) => handleClick(\"30\", \"90\", e)}\n      >\n        Month\n      </div>\n      <div\n        className=\"year\"\n        value=\"year\"\n        onClick={(e) => handleClick(\"365\", \"1095\", e)}\n      >\n        Year\n      </div>\n      <div\n        className=\"all\"\n        value=\"all\"\n        onClick={(e) => handleClick(\"max\", \"max\", e)}\n      >\n        All\n      </div>\n    </div>\n  );\n}\n",{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":10,"column":25,"nodeType":"157","messageId":"158","endLine":10,"endColumn":41},{"ruleId":"155","severity":1,"message":"159","line":12,"column":10,"nodeType":"157","messageId":"158","endLine":12,"endColumn":20},{"ruleId":"155","severity":1,"message":"160","line":15,"column":10,"nodeType":"157","messageId":"158","endLine":15,"endColumn":23},{"ruleId":"155","severity":1,"message":"161","line":15,"column":25,"nodeType":"157","messageId":"158","endLine":15,"endColumn":41},{"ruleId":"162","severity":1,"message":"163","line":25,"column":6,"nodeType":"164","endLine":25,"endColumn":21,"suggestions":"165"},{"ruleId":"155","severity":1,"message":"166","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":26},{"ruleId":"155","severity":1,"message":"167","line":1,"column":28,"nodeType":"157","messageId":"158","endLine":1,"endColumn":34},{"ruleId":"155","severity":1,"message":"168","line":1,"column":36,"nodeType":"157","messageId":"158","endLine":1,"endColumn":46},{"ruleId":"155","severity":1,"message":"169","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":21},{"ruleId":"155","severity":1,"message":"167","line":1,"column":27,"nodeType":"157","messageId":"158","endLine":1,"endColumn":33},{"ruleId":"155","severity":1,"message":"170","line":6,"column":8,"nodeType":"157","messageId":"158","endLine":6,"endColumn":13},{"ruleId":"155","severity":1,"message":"161","line":11,"column":32,"nodeType":"157","messageId":"158","endLine":11,"endColumn":48},{"ruleId":"155","severity":1,"message":"171","line":23,"column":5,"nodeType":"157","messageId":"158","endLine":23,"endColumn":14},{"ruleId":"155","severity":1,"message":"172","line":24,"column":5,"nodeType":"157","messageId":"158","endLine":24,"endColumn":15},{"ruleId":"162","severity":1,"message":"173","line":29,"column":3,"nodeType":"157","endLine":29,"endColumn":12,"suggestions":"174"},{"ruleId":"155","severity":1,"message":"175","line":22,"column":5,"nodeType":"157","messageId":"158","endLine":22,"endColumn":20},{"ruleId":"162","severity":1,"message":"176","line":76,"column":6,"nodeType":"164","endLine":76,"endColumn":8,"suggestions":"177"},{"ruleId":"151","replacedBy":"178"},{"ruleId":"153","replacedBy":"179"},{"ruleId":"151","replacedBy":"180"},{"ruleId":"153","replacedBy":"181"},{"ruleId":"155","severity":1,"message":"156","line":10,"column":25,"nodeType":"157","messageId":"158","endLine":10,"endColumn":41},{"ruleId":"155","severity":1,"message":"159","line":12,"column":10,"nodeType":"157","messageId":"158","endLine":12,"endColumn":20},{"ruleId":"155","severity":1,"message":"160","line":15,"column":10,"nodeType":"157","messageId":"158","endLine":15,"endColumn":23},{"ruleId":"155","severity":1,"message":"161","line":15,"column":25,"nodeType":"157","messageId":"158","endLine":15,"endColumn":41},{"ruleId":"155","severity":1,"message":"182","line":16,"column":10,"nodeType":"157","messageId":"158","endLine":16,"endColumn":23},{"ruleId":"155","severity":1,"message":"183","line":16,"column":25,"nodeType":"157","messageId":"158","endLine":16,"endColumn":41},{"ruleId":"162","severity":1,"message":"163","line":26,"column":6,"nodeType":"164","endLine":26,"endColumn":21,"suggestions":"184"},{"ruleId":"162","severity":1,"message":"185","line":181,"column":6,"nodeType":"164","endLine":181,"endColumn":16,"suggestions":"186"},{"ruleId":"155","severity":1,"message":"166","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":26},{"ruleId":"155","severity":1,"message":"167","line":1,"column":28,"nodeType":"157","messageId":"158","endLine":1,"endColumn":34},{"ruleId":"155","severity":1,"message":"168","line":1,"column":36,"nodeType":"157","messageId":"158","endLine":1,"endColumn":46},{"ruleId":"155","severity":1,"message":"169","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":21},{"ruleId":"155","severity":1,"message":"187","line":23,"column":5,"nodeType":"157","messageId":"158","endLine":23,"endColumn":7},{"ruleId":"155","severity":1,"message":"175","line":30,"column":5,"nodeType":"157","messageId":"158","endLine":30,"endColumn":20},{"ruleId":"155","severity":1,"message":"188","line":36,"column":7,"nodeType":"157","messageId":"158","endLine":36,"endColumn":18},{"ruleId":"155","severity":1,"message":"189","line":37,"column":7,"nodeType":"157","messageId":"158","endLine":37,"endColumn":23},{"ruleId":"155","severity":1,"message":"190","line":38,"column":7,"nodeType":"157","messageId":"158","endLine":38,"endColumn":25},{"ruleId":"162","severity":1,"message":"191","line":142,"column":6,"nodeType":"164","endLine":142,"endColumn":24,"suggestions":"192"},{"ruleId":"162","severity":1,"message":"193","line":342,"column":6,"nodeType":"164","endLine":342,"endColumn":40,"suggestions":"194"},{"ruleId":"155","severity":1,"message":"167","line":1,"column":27,"nodeType":"157","messageId":"158","endLine":1,"endColumn":33},{"ruleId":"155","severity":1,"message":"170","line":6,"column":8,"nodeType":"157","messageId":"158","endLine":6,"endColumn":13},{"ruleId":"155","severity":1,"message":"161","line":11,"column":32,"nodeType":"157","messageId":"158","endLine":11,"endColumn":48},{"ruleId":"155","severity":1,"message":"171","line":23,"column":5,"nodeType":"157","messageId":"158","endLine":23,"endColumn":14},{"ruleId":"155","severity":1,"message":"172","line":24,"column":5,"nodeType":"157","messageId":"158","endLine":24,"endColumn":15},{"ruleId":"162","severity":1,"message":"173","line":29,"column":3,"nodeType":"157","endLine":29,"endColumn":12,"suggestions":"195"},{"ruleId":"196","severity":2,"message":"197","line":6,"column":55,"nodeType":"157","messageId":"198","endLine":6,"endColumn":66},{"ruleId":"196","severity":2,"message":"197","line":9,"column":57,"nodeType":"157","messageId":"198","endLine":9,"endColumn":68},{"ruleId":"196","severity":2,"message":"197","line":15,"column":24,"nodeType":"157","messageId":"198","endLine":15,"endColumn":35},{"ruleId":"196","severity":2,"message":"197","line":22,"column":24,"nodeType":"157","messageId":"198","endLine":22,"endColumn":35},{"ruleId":"196","severity":2,"message":"197","line":29,"column":24,"nodeType":"157","messageId":"198","endLine":29,"endColumn":35},{"ruleId":"155","severity":1,"message":"168","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":27},{"ruleId":"155","severity":1,"message":"166","line":1,"column":39,"nodeType":"157","messageId":"158","endLine":1,"endColumn":48},{"ruleId":"155","severity":1,"message":"167","line":1,"column":50,"nodeType":"157","messageId":"158","endLine":1,"endColumn":56},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'setEthereumPrice' is assigned a value but never used.","Identifier","unusedVar","'greenOrRed' is assigned a value but never used.","'coinChartData' is assigned a value but never used.","'setCoinChartData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'lastPrice'. Either include it or remove the dependency array.","ArrayExpression",["201"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'useContext' is defined but never used.","'createChart' is defined but never used.","'axios' is defined but never used.","'marketCap' is assigned a value but never used.","'volume24hr' is assigned a value but never used.","React Hook useEffect contains a call to 'setSparklineColor'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [percentChange7d] as a second argument to the useEffect Hook.",["202"],"'percentChange7d' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveChartData'. Either include it or remove the dependency array.",["203"],["199"],["200"],["199"],["200"],"'actionClicked' is assigned a value but never used.","'setActionClicked' is assigned a value but never used.",["204"],"React Hook useEffect has a missing dependency: 'getIdsAfterPageLoad'. Either include it or remove the dependency array.",["205"],"'id' is assigned a value but never used.","'globalChart' is assigned a value but never used.","'globalLineSeries' is assigned a value but never used.","'globalVolumeSeries' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'retrieveChartData' and 'timeFrameToFetch'. Either include them or remove the dependency array.",["206"],"React Hook useEffect has missing dependencies: 'renderChart', 'retrieveChartData', 'timeFrameToFetch', and 'updateChartData'. Either include them or remove the dependency array.",["207"],["208"],"no-undef","'handleClick' is not defined.","undef","no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"209","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"211","fix":"222"},"Update the dependencies array to be: [ethereumPrice, lastPrice]",{"range":"223","text":"224"},"Add dependencies array: [percentChange7d]",{"range":"225","text":"226"},"Update the dependencies array to be: [retrieveChartData]",{"range":"227","text":"228"},{"range":"229","text":"224"},"Update the dependencies array to be: [coinData, getIdsAfterPageLoad]",{"range":"230","text":"231"},"Update the dependencies array to be: [retrieveChartData, selectedCoinData, timeFrameToFetch]",{"range":"232","text":"233"},"Update the dependencies array to be: [coinChartData, renderChart, retrieveChartData, timeFrameToFetch, updateChartData, viewFieldDuration]",{"range":"234","text":"235"},{"range":"236","text":"226"},[845,860],"[ethereumPrice, lastPrice]",[982,982],", [percentChange7d]",[2906,2908],"[retrieveChartData]",[901,916],[7134,7144],"[coinData, getIdsAfterPageLoad]",[4960,4978],"[retrieveChartData, selectedCoinData, timeFrameToFetch]",[11579,11613],"[coinChartData, renderChart, retrieveChartData, timeFrameToFetch, updateChartData, viewFieldDuration]",[982,982]]